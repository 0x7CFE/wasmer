initSidebarItems({"macro":[["vec1","This macro creates a `Vec1` by checking at compile-time that its invariant holds."]],"mod":[["ast","Represents the WIT language as a tree. This is the central representation of the language."],["decoders","Reads the AST from a particular data representation; for instance, `decoders::binary` reads the AST from a binary."],["encoders","Writes the AST into a particular format; for instance, `encoders::wat` writes the AST into a string representing WIT with its textual format."],["errors","The error module contains all the data structures that represent an error."],["interpreter","A stack-based interpreter to execute instructions of WIT adapters."],["macros","Collection of helpful macros."],["serde","Serde is not necessary to use WIT. It only provides a nicer API for the end-user to send or receive its complex types to/from WIT values, like `record` for instance."],["types","This module defines the WIT types."],["values","Defines WIT values and associated operations."],["vec1","`Vec1<T>` represents a non-empty `Vec<T>`."]]});