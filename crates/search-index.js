var N=null,E="",T="t",U="u",searchIndex={};
var R=["string","HASHED_PASSWORD","result","try_from","try_into","borrow","borrow_mut","type_id","typeid","RetStr","wasmer_dev_utils","wasmer_dev_utils::file_descriptor","wasmer_dev_utils::stdio","FileDescriptor","StdioCapturer","compiler","module","compileresult","cacheerror","features","wasmer_runtime_core::backend","compilerconfig","moduleinner","artifact","modulestatemap","breakpointmap","option","exceptiontable","moduleinfo","architecture","inlinebreakpoint","wasmer_runtime_core","memories","vm_memories","vm_tables","vm_globals","boxedmap","importobject","linkresult","localfuncindex","sigindex","creationerror","importbacking","localmemoryindex","localtableindex","slicemap","localglobalindex","importedfuncindex","importedfunc","generate","_phantom_mcg","_phantom_fcg","_phantom_rm","_phantom_e","funcindex","from_cache","feed_event","eventsink","finalize","wasmer_runtime_core::error","wasmer_runtime_core::error::CompileError","An error message.","namespace","wasmer_runtime_core::error::LinkError","Namespace.","expected","Expected.","Found.","wasmer_runtime_core::error::RuntimeError","wasmer_runtime_core::error::ResolveError","CompileError","LinkError","RuntimeError","ResolveError","CallError","CreationError","ExceededMaxPages","Error protecting memory.","Internal","signature","wasmer_runtime_core::export","export","Instance","An instantiated WebAssembly module.","Reference to the module used to instantiate this instance.","import_object","A representation of an exported WebAssembly function.","instance_inner","func_index","nonnull","funcsig","callresult","instance","resolveresult","internalfield","runnablemodule","memory","This is an internal-only api.","_phantom","internal","DynamicMemory","wasmer_runtime_core::memory","localmemory","growerror","Dereference this `WasmPtr`.","deref_mut","Mutable dereference this `WasmPtr`.","StaticMemory","memorydescriptor","The size of this memory in `Pages`.","as_slice","Get this memory represented as a slice of bytes.","as_slice_mut","Atomically","Atomically.","MemoryView","A view into a memory.","atomically","descriptor","memoryview","Try to grow this memory by the given number of delta pages.","vm_local_memory","Size of this memory in pages.","A compiled WebAssembly module.","Either a constant offset or a `get_global`","middlewarechain","loaderror","binaryreadererror","initializer","__private_field","SigRegistry","The `SigRegistry` represents a process-global map of…","GLOBAL_SIG_REGISTRY","enumerated","Boxed map.","_marker","wasmer_runtime_core::structures","Dense item map","Iterator for a `Map`.","Mutable iterator for a `Map`.","wasmer_runtime_core::structures::map","This is a dynamically-sized slice that can only be indexed…","Data for a sized and protected region of memory.","protection","Kinds of memory protection.","Read/write/exec allowed.","Read only.","ReadWrite","Read/write only.","Read/exec only.","ReadWriteExec","Read/write/exec only.","wasmer_runtime_core::backend::sys","memorycreationerror","memoryprotectionerror","wasmer_runtime_core::sys::unix::memory","Anyfunc data type.","wasmer_runtime_core::table::anyfunc","wasmer_runtime_core::table","localtable","tabledescriptor","GET_CONTEXT","get_trampoline","This empty structure indicates that an external function…","Represents a function that can be used by WebAssembly.","Struct for typed funcs.","Unreachable","Trampoline","runtimeerror","trampoline","from_raw_parts","Call the typed func and return results.","Typed Index","The `i32` type.","The `i64` type.","The `f32` type.","The `f64` type.","The `v128` type.","memory_type","fits_in_imported","convert_up","Convert up.","local_or_import","Converts self into `LocalOrImport`.","memoryindex","localorimport","tableindex","globalindex","pageerror","ImportBacking","The `ImportBacking` stores references to the imported…","vm_functions","LocalBacking","The `LocalBacking` \"owns\" the memory used by all the local…","This is a map from the local resource index to actual…","This own the memory containing the pointers to the local…","dynamic_sigindices","The dynamic sigindices are used to efficiently support…","local_functions","internals","import_backing","globals","imported_memories","imported_tables","imported_globals","func_env","Anyfunc","INTERNALS_SIZE","Size of the array for internal instance usage","new_with_data","localbacking","get_internal","set_internal","offset_base","Offset to the `base` field.","offset_func","Offset to the `func` field.","offset_vmctx","importedmemoryindex","codeversion","run_on_alternative_stack","wasmer_runtime_core::fault","INTERRUPT_SIGNAL_MEM","executionstateimage","wasm_stack_private_depth","Private depth of the wasm stack.","wasm_inst_offset","Wasm instruction offset.","local_function_id","runnable_module","General-purpose registers.","x64register","wasmer_runtime_core::state","instanceimage","read_stack","wasmabstractvalue","machinestate","functionstatemap","backend_id","Aliases the standard `Result` type as `Result` within this…","A trait that represents `Export` values.","to_export","Gets self as `Export`.","wasmer_runtime_core::instance","wasmer_runtime_core::module","wasmer_runtime_core::typed_func","clone_into","to_owned","equivalent","wasmer_runtime_core::backing","wasmer_runtime_core::cache","wasmer_runtime_core::codegen","to_string","wasmer_runtime_core::global","wasmer_runtime_core::import","into_iter","wasmer_runtime_core::loader","wasmer_runtime_core::memory::ptr","from_ret_array","empty_ret_array","from_c_struct","into_c_struct","infallible","wasmer_runtime_core::memory::view","wasmer_runtime_core::parse","wasmer_runtime_core::sig_registry","wasmer_runtime_core::trampoline_x64","wasmer_runtime_core::types","wasmer_runtime_core::units","wasmer_runtime_core::vm","wasmer_runtime_core::state::x64_decl","wasmer_runtime_core::tiering","get_export","get_exports","maybe_insert","to_native","from_native","linkerror","resolveerror","compileerror","ordering","exceptioncode","partial_cmp","importedtableindex","importedglobalindex","default","machinestatediff","intoiterator","memoryboundcheckmode","memorytype","exportindex","stringtable","protect","globaldescriptor","boundaryregisterpreservation","faultinfo","registerindex","wasmhash","callerror","namespaceindex","nameindex","elementtype","machinevalue","assert_receiver_is_total_eq","formatter","initialize","serialize","deserialize","InlineBreakpoint","BackendCompilerConfig","CompilerConfig","ExceptionTable","Architecture","InlineBreakpointType","MemoryBoundCheckMode","ExceptionCode","RunnableModule","Internals","ArtifactHeader","ArtifactInner","InvalidFileType","BreakpointInfo","StreamingCompiler","SimpleStreamingCompilerGen","EventSink","MiddlewareChain","InternalEvent","ModuleCodeGenerator","FunctionMiddleware","GenericFunctionMiddleware","FunctionCodeGenerator","GrowError","PageError","MemoryCreationError","MemoryProtectionError","ParseError","FuncPointer","ExportIter","ImportObject","ImportObjectIterator","Namespace","LikeNamespace","IsExport","InstanceInner","LocalInstance","CodeMemory","UnsharedMemory","UnsharedMemoryInternal","SharedMemory","SharedMemoryInternal","MemoryVariant","MemoryType","UnsharedMemoryStorage","ModuleInner","ModuleInfo","ImportName","DataInitializer","TableInitializer","StringTableBuilder","StringTable","NamespaceIndex","NameIndex","ExportIndex","LoadError","GlobalSigRegistry","BoxedMap","SliceMap","TypedIndex","TableStorage","AnyfuncTable","AnyfuncInner","TrampolineBufferBuilder","TrampolineBuffer","WasmTrapInfo","WasmTypeList","ExternalFunction","TrapEarly","TableDescriptor","GlobalDescriptor","GlobalInit","MemoryDescriptor","FuncIndex","LocalFuncIndex","ImportedFuncIndex","MemoryIndex","LocalMemoryIndex","ImportedMemoryIndex","TableIndex","LocalTableIndex","ImportedTableIndex","GlobalIndex","LocalGlobalIndex","ImportedGlobalIndex","ElementType","Initializer","LocalOrImport","NativeWasmType","WasmExternType","LocalImport","InternalCtx","InternalField","Intrinsics","ImportedFunc","LocalTable","LocalMemory","LocalGlobal","UnwindInfo","BoundaryRegisterPreservation","InterruptSignalMem","FaultInfo","RegisterIndex","MachineState","MachineStateDiff","FunctionStateMap","OffsetInfo","ModuleStateMap","WasmFunctionStateDump","ExecutionStateImage","InstanceImage","CodeVersion","WasmAbstractValue","MachineValue","SuspendOffset","X64Register","InteractiveShellContext","OptimizationState","OptimizationOutcome","CtxWrapper","ShellExitOperation","LocalLoader","NonAtomically","CallTarget","CallContext","ExplicitVmCtx","ImplicitVmCtx","param_count","memory_max","entry_offset","servicecontext","serviceresult","wasmer_kernel_loader","wasmer_kernel_loader::service","read_memory","write_memory","KernelInstance","LoadCodeRequest","RunCodeRequest","RunCodeResult","ReadMemoryRequest","WriteMemoryRequest","ImportRequest","TableEntryRequest","LoadProfile","ImportInfo","RunProfile","ServiceContext","ServiceError","KernelLoader","imported_funcs","dynamic_sigindice_count","signatures","breakpoints","function_signatures","function_labels","assembler","functions","func_import_count","returns","num_params","num_locals","value_stack","control_stack","unreachable_depth","exception_table","function_pointers","function_offsets","memory_bound_check_mode","enforce_stack_check","track_state","full_preemption","type_to_wp_type","CONSTRUCT_STACK_AND_CALL_WASM","wasmer_singlepass_backend","location","machine","codegenerror","Moves `src1` and `src2` to valid locations and possibly…","condition","Floating point (AVX) binary operation with both operands…","Emits a memory operation.","codegenconfig","memoryimmediate","RAX register","RCX register","RDX register","RBX register","RSP register","RBP register","RSI register","RDI register","R8 register","R9 register","R10 register","R11 register","R12 register","R13 register","R14 register","R15 register","XMM registers.","XMM register 0","XMM register 1","XMM register 2","XMM register 3","XMM register 4","XMM register 5","XMM register 6","XMM register 7","XMM register 8","XMM register 9","XMM register 10","XMM register 11","XMM register 12","XMM register 13","XMM register 14","XMM register 15","xmmormemory","gprormemory","inlinebreakpointtype","callproterror","wasmer_singlepass_backend::codegen_x64","wasmer_singlepass_backend::emitter_x64","wasmer_singlepass_backend::machine","wasmer_singlepass_backend::protect_unix","get_module_state_map","get_breakpoints","get_exception_table","patch_local_function","do_early_trap","get_offsets","get_local_function_offsets","get_inline_breakpoint_size","Returns the inline breakpoint size corresponding to an…","read_inline_breakpoint","Attempts to read an inline breakpoint from the code.","generate_cache","requires_pre_validation","new_with_target","check_precondition","next_function","x64functioncode","feed_signatures","feed_function_signatures","feed_import_function","feed_compiler_config","feed_return","feed_param","feed_local","begin_body","X64ExecutionContext","CacheImage","ControlFrame","SinglepassCache","CodegenError","CodegenConfig","IfElseState","Condition","XMMOrMemory","GPROrMemory","MachineStackOffset","CallProtError","FuncPtrInner","wasmer_middleware_common","wasmer_middleware_common::block_trace","wasmer_middleware_common::call_trace","wasmer_middleware_common::metering","BlockTrace","CallTrace","ExecutionLimitExceededError","emscriptenglobals","wasmer_emscripten","emaddrinfo","getprotobyname","getprotobynumber","sigdelset","sigfillset","emscripten: abortOnCannotGrowMemory","align_memory","static_alloc","varargs","___syscall33","clockid_t","is_emscripten_module","We check if a provided module is an Emscripten generated one","get_emscripten_table_size","get_emscripten_memory_size","get_emscripten_metadata","Reads values written by `-s EMIT_EMSCRIPTEN_METADATA=1`…","allocate_on_stack","allocate_cstr_on_stack","OLD_ABORT_ON_CANNOT_GROW_MEMORY_SIG","emscriptenglobalsdata","emscriptendata","wasmer_emscripten::env","wasmer_emscripten::ptr","wasmer_emscripten::syscalls::unix","wasmer_emscripten::time","wasmer_emscripten::utils","wasmer_emscripten::varargs","EmscriptenData","EmscriptenGlobalsData","EmscriptenGlobals","EmAddrInfo","EmSockAddr","GuestStat","get_utf8_string","memory_base","The current version of this crate","wasiversion","pathbuf","Combines a state generating function with the import list…","This is a wrapper around the `WasmPtr` abstraction that…","__wasi_errno_t","wasmer_wasi","WasiFsError","InvalidInput","wasmer_wasi::state","wasmer_wasi::state::Kind","wasistate","WasiStateBuilder","Convenient builder API for configuring WASI via…","setup_fs_fn","stdout_override","stderr_override","stdin_override","PreopenDirBuilder","Builder for preopened directories.","WasiStateCreationError","Error type returned when bad data is given to…","EnvironmentVariableFormatError","ArgumentContainsNulByte","PreopenedDirectoryNotFound","PreopenedDirectoryError","MappedDirAliasFormattingError","WasiFsCreationError","WasiFsSetupError","wasistatecreationerror","Preopen a directory This opens the given directory at the…","wasifile","filepath","preopeneddir","PollEventBuilder","PollEventIter","A thin wrapper around `std::fs::File`","host_path","A wrapper type around Stdout that implements `WasiFile`…","A wrapper type around Stderr that implements `WasiFile`…","A wrapper type around Stdin that implements `WasiFile` and…","Error type for external users","BaseNotDirectory","The fd given as a base was not a directory so the…","Expected a file but found not a file","InvalidFd","The fd given was not usable","AlreadyExists","File exists","Something failed when doing IO. These errors can generally…","AddressInUse","The address was in use","AddressNotAvailable","The address could not be found","BrokenPipe","A pipe was closed","ConnectionAborted","The connection was aborted","ConnectionRefused","The connection request was refused","ConnectionReset","The connection was reset","Interrupted","The operation was interrupted before it could finish","InvalidData","Invalid internal data, if the argument data is invalid,…","The provided data is invalid","NotConnected","Could not perform the operation because there was not an…","EntityNotFound","The requested file or directory could not be found","The requested device couldn't be accessed","PermissionDenied","Caller was not allowed to perform this operation","The operation did not complete within the given amount of…","UnexpectedEof","Found EOF when EOF was not expected","WouldBlock","Operation would block, this error lets the caller know…","WriteZero","A call to write returned 0","UnknownError","A WASI error without an external name. If you encounter…","PollEvent","Data available to read","Data available to write (will still block if data is…","PollError","Something didn't work. ignored as input","PollHangUp","Connection closed. ignored as input","PollInvalid","Invalid request. ignored as input","iterate_poll_events","polleventset","polleventiter","wasifserror","__wasi_timestamp_t","pollevent","polleventbuilder","PollEventSet","This trait relies on your file closing when it goes out of…","last_accessed","the last time the file was accessed in nanoseconds as a…","last_modified","the last time the file was modified in nanoseconds as a…","created_time","the time at which the file was created in nanoseconds as a…","set_last_accessed","wasmer_wasi::state::types","set the last time the file was accessed in nanoseconds as…","set_last_modified","set the last time the file was modified in nanoseconds as…","set_created_time","set the time at which the file was created in nanoseconds…","the size of the file in bytes","Change the size of the file, if the `new_size` is greater…","__wasi_filesize_t","Request deletion of the file","sync_to_disk","Store file contents and metadata to disk Default…","rename_file","Moves the file to a new location NOTE: the signature of…","bytes_available","Returns the number of bytes available. This function must…","get_raw_fd","Used for polling. Default returns `None` because this…","typetag_name","typetag_deserialize","__wasi_fd_t","__wasi_rights_t","__wasi_fdflags_t","__wasi_filestat_t","__wasi_fdstat_t","__wasi_prestat_t","inodeval","wasistatebuilder","wasmptr","__wasi_clockid_t","__wasi_iovec_t","__wasi_ciovec_t","__wasi_fstflags_t","__wasi_lookupflags_t","__wasi_event_t","__wasi_subscription_t","__wasi_roflags_t","fd_readwrite","wasmer_wasi::syscalls::types","pr_name_len","FdReadWrite","__wasi_dirent_t","__wasi_filetype_t","__wasi_subscription_clock_t","userdata","precision","st_filetype","st_nlink","__wasi_subscription_u","__wasi_whence_t","__wasi_advice_t","__wasi_dircookie_t","__wasi_eventtype_t","__wasi_exitcode_t","__wasi_filedelta_t","__wasi_linkcount_t","__wasi_oflags_t","__wasi_riflags_t","__wasi_sdflags_t","__wasi_siflags_t","__wasi_signal_t","_IMPL_SERIALIZE_FOR___wasi_filestat_t","_IMPL_DESERIALIZE_FOR___wasi_filestat_t","__WASI_WHENCE_SET","__WASI_WHENCE_CUR","__WASI_WHENCE_END","__wasi_event_u","eventenum","__wasi_prestat_u","prestatenum","subscriptionenum","wasmer_wasi::syscalls","snapshot0","fd_filestat_get","path_filestat_get","poll_oneoff","WasiVersion","The version of WASI. This is determined by the imports…","Snapshot0","`wasi_unstable`.","Snapshot1","`wasi_snapshot_preview1`.","Latest version.","is_wasi_module","Check if a provided module is compiled for some version of…","get_wasi_version","Detect the version of WASI being used based on the import…","__wasi_event_fd_readwrite_t","__wasi_prestat_u_dir_t","fs_filetype","fs_rights_base","fs_rights_inheriting","clock_id","__wasi_subscription_fs_readwrite_t","WasiSubscription","Safe Rust wrapper around `__wasi_subscription_t`","user_data","event_type","EventEnum","PrestatEnum","wasmer_wasi::types","EventType","Safe Rust wrapper around `__wasi_subscription_t::type_`…","SubscriptionEnum","dirent_to_le_bytes","eventtype_to_str","wasi_filetype_to_name","print_right_set","function for debugging rights issues","right_to_string","expects a single right, returns None if out of bounds or >…","__wasi_device_t","__wasi_eventrwflags_t","__wasi_preopentype_t","__wasi_inode_t","__wasi_subclockflags_t","__wasi_userdata_t","__WASI_ADVICE_NORMAL","__WASI_ADVICE_SEQUENTIAL","__WASI_ADVICE_RANDOM","__WASI_ADVICE_WILLNEED","__WASI_ADVICE_DONTNEED","__WASI_ADVICE_NOREUSE","__WASI_CLOCK_REALTIME","__WASI_CLOCK_MONOTONIC","__WASI_CLOCK_PROCESS_CPUTIME_ID","__WASI_CLOCK_THREAD_CPUTIME_ID","__WASI_DIRCOOKIE_START","__WASI_ESUCCESS","__WASI_E2BIG","__WASI_EACCES","__WASI_EADDRINUSE","__WASI_EADDRNOTAVAIL","__WASI_EAFNOSUPPORT","__WASI_EAGAIN","__WASI_EALREADY","__WASI_EBADF","__WASI_EBADMSG","__WASI_EBUSY","__WASI_ECANCELED","__WASI_ECHILD","__WASI_ECONNABORTED","__WASI_ECONNREFUSED","__WASI_ECONNRESET","__WASI_EDEADLK","__WASI_EDESTADDRREQ","__WASI_EDOM","__WASI_EDQUOT","__WASI_EEXIST","__WASI_EFAULT","__WASI_EFBIG","__WASI_EHOSTUNREACH","__WASI_EIDRM","__WASI_EILSEQ","__WASI_EINPROGRESS","__WASI_EINTR","__WASI_EINVAL","__WASI_EIO","__WASI_EISCONN","__WASI_EISDIR","__WASI_ELOOP","__WASI_EMFILE","__WASI_EMLINK","__WASI_EMSGSIZE","__WASI_EMULTIHOP","__WASI_ENAMETOOLONG","__WASI_ENETDOWN","__WASI_ENETRESET","__WASI_ENETUNREACH","__WASI_ENFILE","__WASI_ENOBUFS","__WASI_ENODEV","__WASI_ENOENT","__WASI_ENOEXEC","__WASI_ENOLCK","__WASI_ENOLINK","__WASI_ENOMEM","__WASI_ENOMSG","__WASI_ENOPROTOOPT","__WASI_ENOSPC","__WASI_ENOSYS","__WASI_ENOTCONN","__WASI_ENOTDIR","__WASI_ENOTEMPTY","__WASI_ENOTRECOVERABLE","__WASI_ENOTSOCK","__WASI_ENOTSUP","__WASI_ENOTTY","__WASI_ENXIO","__WASI_EOVERFLOW","__WASI_EOWNERDEAD","__WASI_EPERM","__WASI_EPIPE","__WASI_EPROTO","__WASI_EPROTONOSUPPORT","__WASI_EPROTOTYPE","__WASI_ERANGE","__WASI_EROFS","__WASI_ESPIPE","__WASI_ESRCH","__WASI_ESTALE","__WASI_ETIMEDOUT","__WASI_ETXTBSY","__WASI_EXDEV","__WASI_ENOTCAPABLE","__WASI_EVENT_FD_READWRITE_HANGUP","__WASI_EVENTTYPE_CLOCK","__WASI_EVENTTYPE_FD_READ","__WASI_EVENTTYPE_FD_WRITE","__WASI_STDIN_FILENO","__WASI_STDOUT_FILENO","__WASI_STDERR_FILENO","__WASI_FDFLAG_APPEND","__WASI_FDFLAG_DSYNC","__WASI_FDFLAG_NONBLOCK","__WASI_FDFLAG_RSYNC","__WASI_FDFLAG_SYNC","__WASI_PREOPENTYPE_DIR","__WASI_FILETYPE_UNKNOWN","__WASI_FILETYPE_BLOCK_DEVICE","__WASI_FILETYPE_CHARACTER_DEVICE","__WASI_FILETYPE_DIRECTORY","__WASI_FILETYPE_REGULAR_FILE","__WASI_FILETYPE_SOCKET_DGRAM","__WASI_FILETYPE_SOCKET_STREAM","__WASI_FILETYPE_SYMBOLIC_LINK","__WASI_FILESTAT_SET_ATIM","__WASI_FILESTAT_SET_ATIM_NOW","__WASI_FILESTAT_SET_MTIM","__WASI_FILESTAT_SET_MTIM_NOW","__WASI_LOOKUP_SYMLINK_FOLLOW","__WASI_O_CREAT","__WASI_O_DIRECTORY","__WASI_O_EXCL","__WASI_O_TRUNC","__WASI_SOCK_RECV_PEEK","__WASI_SOCK_RECV_WAITALL","__WASI_RIGHT_FD_DATASYNC","__WASI_RIGHT_FD_READ","__WASI_RIGHT_FD_SEEK","__WASI_RIGHT_FD_FDSTAT_SET_FLAGS","__WASI_RIGHT_FD_SYNC","__WASI_RIGHT_FD_TELL","__WASI_RIGHT_FD_WRITE","__WASI_RIGHT_FD_ADVISE","__WASI_RIGHT_FD_ALLOCATE","__WASI_RIGHT_PATH_CREATE_DIRECTORY","__WASI_RIGHT_PATH_CREATE_FILE","__WASI_RIGHT_PATH_LINK_SOURCE","__WASI_RIGHT_PATH_LINK_TARGET","__WASI_RIGHT_PATH_OPEN","__WASI_RIGHT_FD_READDIR","__WASI_RIGHT_PATH_READLINK","__WASI_RIGHT_PATH_RENAME_SOURCE","__WASI_RIGHT_PATH_RENAME_TARGET","__WASI_RIGHT_PATH_FILESTAT_GET","__WASI_RIGHT_PATH_FILESTAT_SET_SIZE","__WASI_RIGHT_PATH_FILESTAT_SET_TIMES","__WASI_RIGHT_FD_FILESTAT_GET","__WASI_RIGHT_FD_FILESTAT_SET_SIZE","__WASI_RIGHT_FD_FILESTAT_SET_TIMES","__WASI_RIGHT_PATH_SYMLINK","__WASI_RIGHT_PATH_REMOVE_DIRECTORY","__WASI_RIGHT_PATH_UNLINK_FILE","__WASI_RIGHT_POLL_FD_READWRITE","__WASI_RIGHT_SOCK_SHUTDOWN","__WASI_SOCK_RECV_DATA_TRUNCATED","__WASI_SHUT_RD","__WASI_SHUT_WR","__WASI_SIGHUP","__WASI_SIGINT","__WASI_SIGQUIT","__WASI_SIGILL","__WASI_SIGTRAP","__WASI_SIGABRT","__WASI_SIGBUS","__WASI_SIGFPE","__WASI_SIGKILL","__WASI_SIGUSR1","__WASI_SIGSEGV","__WASI_SIGUSR2","__WASI_SIGPIPE","__WASI_SIGALRM","__WASI_SIGTERM","__WASI_SIGCHLD","__WASI_SIGCONT","__WASI_SIGSTOP","__WASI_SIGTSTP","__WASI_SIGTTIN","__WASI_SIGTTOU","__WASI_SIGURG","__WASI_SIGXCPU","__WASI_SIGXFSZ","__WASI_SIGVTALRM","__WASI_SIGPROF","__WASI_SIGWINCH","__WASI_SIGPOLL","__WASI_SIGPWR","__WASI_SIGSYS","__WASI_SUBSCRIPTION_CLOCK_ABSTIME","wasmer_wasi::ptr","erased_serialize","serializer","wasmer_wasi::state::builder","wasmer_wasi::syscalls::types::snapshot0","wasisubscription","write_all","write_fmt","arguments","read_to_end","read_to_string","read_exact","PreopenedDir","llvm_functions","intrinsics","wasmer_llvm_backend","signatures_raw","personality_func","target_machine","llvm_callbacks","alloca_builder","stackmaps","opcode_offset","functionvalue","basicvalueenum","extrainfo","pointervalue","stackmapregistry","stackmapentrykind","Least Exact Float (32 bits) greater-than-or-equal-to…","Greatest Exact Float (32 bits) less-than-or-equal-to…","Least Exact Float (64 bits) greater-than-or-equal-to…","Greatest Exact Float (64 bits) less-than-or-equal-to…","throw_breakpoint","ptr_to_base_ptr","ptr_to_bounds","wasmer_llvm_backend::intrinsics","wasmer_llvm_backend::intrinsics::MemoryCache","wasmer_llvm_backend::intrinsics::GlobalCache","pointertype","wasmer_llvm_backend::platform","llvmresult","throw_trap","dwarf_regnum","wasmer_llvm_backend::state","wasmer_llvm_backend::state::ControlFrame","stack_size_snapshot","controlframe","basicblock","alloc_memory","protect_memory","dealloc_memory","inkwellmodule","wasmer_llvm_backend::backend","wasmer_llvm_backend::code","wasmer_llvm_backend::stackmap","wasmer_llvm_backend::structs","stksizerecord","stkmaprecord","memorycache","globalcache","memprotect","llvmmodulecodegenerator","llvmfunctioncodegenerator","LLVMBackendConfig","LLVMBackend","ImportedFuncCache","MemoryCache","GlobalCache","StackmapRegistry","StackmapEntry","StkSizeRecord","StkMapRecord","ValueSemantic","StackmapEntryKind","LocationType","LLVMCallbacks","imported_func","round_up_to_page_size","signal_trap_handler","wasmer_wasi_experimental_io_devices","wasmer_wasi_experimental_io_devices::util","inputevent","FrameBufferState","FrameBuffer","FrameBufferFileType","wasmer_clif_backend","clif_signatures","craneliftmodulecodegenerator","signatureindex","generate_signature","Creates a signature with VMContext as the last param","get_func_type","functionbuilder","The offset where to apply the relocation.","The addend to add to the relocation value.","Relocation type.","external_relocs","wasmer_clif_backend::relocation","local_relocs","backendcache","trampolines","handlerdata","wasmer_clif_backend::signal","trampolinecache","targetisa","wasmer_clif_backend::cache","wasmer_clif_backend::code","wasmer_clif_backend::module","wasmer_clif_backend::resolver","wasmer_clif_backend::trampoline","craneliftfunctioncodegenerator","codeoffset","reloc_external","externalname","reloc_constant","globalvariable","Sets up the necessary preamble definitions in `func` to…","wasmresult","function","funccursor","target_config","pointer_type","CacheGenerator","TrampolineCache","BackendCache","CraneliftModuleCodeGenerator","CraneliftFunctionCodeGenerator","FunctionEnvironment","ExternalRelocation","LocalRelocation","LocalTrapSink","RelocationType","FuncResolverBuilder","FuncResolver","HandlerData","Trampolines","NoopStackmapSink","NullRelocSink","stackmap","install_sighandler","SETJMP_BUFFER_LEN","BACKEND_ID","Installing signal handlers allows us to handle traps and…","trigger_trap","call_protected","TRAP_EARLY_DATA","wasmer_runtime","A shared or unshared wasm linear memory.","A handle to a Wasm Global","Container with a descriptor and a reference to a table…","Represents a WebAssembly value.","wasmer_runtime::error","wasmer_runtime::error::CompileError","wasmer_runtime::error::LinkError","wasmer_runtime::error::RuntimeError","wasmer_runtime::error::ResolveError","Represents a WebAssembly type.","Describes the properties of a table including the element…","Type of data stored in this table.","The minimum number of elements that must be stored in this…","The maximum number of elements in this table.","Describes the mutability and type of a Global","Mutable flag.","A wasm memory descriptor.","The minimum number of allowed pages.","The maximum number of allowed pages.","This memory can be shared between wasm threads.","The type of the memory","The signature of a function that is either implemented in…","wasmer_runtime::wasm","wasmer_runtime::memory","wasmer_runtime::types","wasmer_runtime::units","wasmer_runtime::cache","globalinit","converter","load_with_backend","nonatomically","instantiate","FileSystemCache","compile_with","Compile a [`Module`] using the provided compiler from…","compile_with_config","Perform validation as defined by the WebAssembly…","Controls which experimental features will be enabled.…","Whether support for the [SIMD proposal][simd-prop] is…","Whether support for the [threads proposal][threads-prop]…","Configuration data for the compiler","Symbol information generated from emscripten; used for…","How to make the decision whether to emit bounds checks for…","Whether to generate explicit native stack checks against…","Whether to enable state tracking. Necessary for managed…","Whether to enable full preemption checkpoint generation.","cpu_features","backend_specific_config","The code of an exception.","An `unreachable` opcode was executed.","An arithmetic exception, e.g. divided by zero.","Memory access exception, e.g. misaligned/out-of-bound…","Compiles a `Module` from WebAssembly binary format. The…","The cache module provides the common data structures used…","The hash of a wasm module.","Artifact are produced by caching, are…","Kinds of caching errors","An IO error while reading/writing a cache binary.","DeserializeError","An error deserializing bytes into a cache data structure.","SerializeError","An error serializing bytes from a cache data structure.","An undefined caching error with a message.","InvalidFile","An invalid cache binary given.","InvalidatedCache","The cached binary has been invalidated.","UnsupportedBackend","The current backend does not support caching.","Hash a wasm module.","Create the hexadecimal representation of the stored hash.","Create hash from hexadecimal representation","Deserializes an `Artifact` from the given byte slice.","A reference to the `Artifact`'s stored `ModuleInfo`","Serializes the `Artifact` into a vector of bytes","A streaming compiler which is designed to generated code…","middleware_chain_generator","A container for a chain of middlewares.","streamingcompiler","Create a new `StreamingCompiler` with the given…","Create a new empty `MiddlewareChain`.","Push a new `FunctionMiddleware` to this `MiddlewareChain`.","The error module contains the data structures and helper…","This is returned when the chosen compiler is unable to…","ValidationError","A validation error containing an error message.","InternalError","A internal error containing an error message.","This is returned when the runtime is unable to correctly…","IncorrectImportType","The type of the provided import does not match the…","IncorrectImportSignature","The signature of the provided import does not match the…","ImportNotFound","An expected import was not provided.","IncorrectMemoryDescriptor","The memory descriptor provided does not match the expected…","IncorrectTableDescriptor","The table descriptor provided does not match the expected…","IncorrectGlobalDescriptor","The global descriptor provided does not match the expected…","A generic error with a message.","Error message.","This is the error type returned when calling a WebAssembly…","Trap message.","Error data.","This error type is produced by resolving a wasm function…","Found signature did not match expected signature.","Expected `FuncSig`.","Found type.","ExportNotFound","Export not found.","ExportWrongType","Export found with the wrong type.","This error type is produced by calling a wasm function…","An error occured resolving the functions name or types.","A runtime error occurred during the function call.","This error type is produced when creating something, like…","UnableToCreateMemory","Unable to create memory error.","UnableToCreateTable","Unable to create table error.","InvalidDescriptor","Invalid descriptor error with message.","The amalgamation of all errors that can occur during the…","Compile error.","Link errors.","Runtime error.","Resolve error.","Call error.","Creation error.","An error occurred while growing a memory or table.","MemoryGrowError","Error growing memory.","TableGrowError","Error growing table.","Max pages were exceeded.","ExceededMaxPagesForMemory","Max pages for memory were exceeded.","CouldNotProtectMemory","CouldNotCreateMemory","Error creating memory.","A kind of page error.","Max pages were exceeded error.","Error occured while creating memory.","VirtualMemoryAllocationFailed","Allocation of virtual memory failed error.","CouldNotCreateMemoryFromFile","Error creating memory from file.","ProtectionFailed","Protection failed error.","Parse Error.","BinaryReadError","Error reading binary.","CompileResult","Result of an attempt to compile the provided WebAssembly…","Result of an attempt to link the provided WebAssembly…","RuntimeResult","Result of an attempt to run the provided WebAssembly…","Result of an attempt to call the provided WebAssembly…","ResolveResult","Result of an attempt to resolve a WebAssembly function by…","ParseResult","Result of an attempt to parse bytes into a WebAssembly…","Kind of WebAssembly export.","Function export.","A pointer to a function.","A kind of context.","The signature of the function.","Memory export.","Table export.","Global export.","Create a new `Global` value.","new_mutable","Create a new, mutable `Global` value.","Get the [`GlobalDescriptor`] generated for this global.","Set the value help by this global.","Get the value held by this global.","All of the import data used when instantiating.","state_creator","allow_missing_functions","Allow missing functions to be generated and instantiation…","This trait represents objects that act as a namespace for…","Gets an export by name.","Gets all exports in the namespace.","Maybe insert an `Export` by name into the namespace.","Create a new `ImportObject`.","Create a new `ImportObject` which generates data from the…","Register anything that implements `LikeNamespace` as a…","likenamespace","with_namespace","Apply a function on the namespace if it exists If your…","maybe_with_namespace","The same as `with_namespace` but takes a function that may…","Create a clone ref of this namespace.","Load an `Instance` using the given loader.","Through generic magic and the awe-inspiring power of…","resolve_func","Resolve a function by name.","This returns the representation of a function that can be…","Call an exported WebAssembly function given the export…","Returns an immutable reference to the [`Ctx`] used by this…","context_mut","Returns a mutable reference to the [`Ctx`] used by this…","Returns an iterator over all of the items exported from…","The module used to instantiate this Instance.","Get the value of an internal field","Set the value of an internal field.","Call an exported WebAssembly function safely.","Gets the signature of this `Dynfunc`.","Gets a const pointer to the function represent by this…","The memory module contains the implementation data…","A pointer to a Wasm item.","Create a new `WasmPtr` at the given offset.","Get the offset for this `WasmPtr`.","Get a UTF-8 string representation of this `WasmPtr` with…","get_utf8_string_with_nul","Get a UTF-8 string representation of this `WasmPtr`, where…","Get atomic access to a memory view.","Create a new `Memory` from a [`MemoryDescriptor`]","Return the [`MemoryDescriptor`] that this memory was…","Grow this memory by the specified number of pages.","The size, in wasm pages, of this memory.","Return a \"view\" of the currently accessible memory. By…","Instantiate a WebAssembly module with the provided…","Create a cache artifact from this module.","Get the module data for this module.","Create a new `Table` from a [`TableDescriptor`]","Get the `TableDescriptor` used to create this `Table`.","Set the element at index.","The current size of this table.","Grow this table by `delta`.","vm_local_table","Get a mutable pointer to underlying table storage.","Creates a new `Func`.","Returns the types of the function inputs.","Returns the types of the function outputs.","get_vm_func","Get the underlying func pointer.","Wasm type.","A wasm global.","Global descriptor.","Global initializer.","Index for signature.","Kinds of element types.","Any wasm function.","A const value initializer. Over time, this will be able to…","Corresponds to a `const.*` instruction.","Corresponds to a `get_global` instruction.","Kind of local or import type.","Represents a native wasm type.","Type for this `NativeWasmType`.","from_binary","Convert from u64 bites to self.","Convert self to u64 binary representation.","A trait to represent a wasm extern type.","Native wasm type for this `WasmExternType`.","Convert from given `Native` type to self.","Convert self to `Native` type.","Trait for a Value type.","Trait that represents Local or Import.","Local type.","Import type.","The `Type` of this `Value`.","Convert this `Value` to a u128 binary representation.","Create a new memory descriptor with the given min/max…","Returns the `MemoryType` for this descriptor.","Creates a new function signatures with the given parameter…","Parameter types.","Return types.","check_param_value_types","Returns true if parameter types match the function…","Returns `Some` if self is local, `None` if self is an…","Returns `Some` if self is an import, `None` if self is…","Units of WebAssembly pages (as specified to be 65,536…","Units of WebAssembly memory in terms of 8-bit bytes.","checked_add","Checked add of Pages to Pages.","Calculate number of bytes from pages.","The context of the currently running WebAssembly instance.","InternalCtx data field","local_backing","These are pointers to things that are known to be owned by…","Mutable pointer to import data","Const pointer to module inner data","This is intended to be user-supplied, per-instance…","data_finalizer","If there's a function set in this field, it gets called…","This exposes the specified memory of the WebAssembly…","memory_and_data_mut","Get access to [`Memory`] and mutable access to the user…","borrow_symbol_map","Gives access to the emscripten symbol map, used for…","Returns the number of dynamic sigindices.","Returns the value of the specified internal field.","Writes the value to the specified internal field.","call_with_table_index","Calls a host or Wasm function at the given table index","offset_memories","offset_tables","offset_globals","offset_imported_memories","offset_imported_tables","offset_imported_globals","offset_imported_funcs","offset_signatures","offset_intrinsics","offset_stack_lower_bound","offset_memory_base","offset_memory_bound","offset_internals","offset_interrupt_signal_mem","offset_local_functions","push_code_version","Pushes a new `CodeVersion` to the current code versions.","pop_code_version","Pops a `CodeVersion` from the current code versions.","A `CodeVersion` is a container for a unit of generated…","Indicates if this code version is the baseline version.","`ModuleStateMap` for this code version.","A pointer to the machine code for this module.","The backend used to compile this module.","`RunnableModule` for this code version.","Helper macro to create a new `Func` object using the…","Generate an [`ImportObject`] safely.","Translate wasm text source to wasm binary format.","get_compiler","wasmer_runtime_c_api","The export name.","wasmer_byte_array","wasmer_import_export_kind","wasmer_result_t","wasmer_value_t","wasmer_global_descriptor_t","Gets export descriptor kind","Sets the result parameter to the arity of the params of…","Sets the params buffer to the parameter types of the given…","Sets the returns buffer to the parameter types of the…","Sets the result parameter to the arity of the returns of…","wasmer_wasi_map_dir_entry_t","Opens a directory that's visible to the WASI module as…","What the WASI module will see in its virtual root","host_file_path","The backing file that the WASI module will interact with…","Version cannot be detected or is unknown.","Latest version. See `wasmer_wasi::WasiVersion::Latest` to…","wasmer_wasi_generate_import_object","Creates a WASI import object.","wasmer_wasi_generate_import_object_for_version","Creates a WASI import object for a specific version.","wasmer_wasi_get_version","Find the version of WASI used by the module.","wasmer_wasi_generate_default_import_object","Convenience function that creates a WASI import object…","wasmer_runtime_c_api::import","utf8error","wasmer_limits_t","wasmer_runtime_c_api::error","wasmer_runtime_c_api::export","wasmer_runtime_c_api::global","wasmer_runtime_c_api::instance","wasmer_runtime_c_api::memory","wasmer_runtime_c_api::module","wasmer_runtime_c_api::table","wasmer_runtime_c_api::trampoline","wasmer_runtime_c_api::value","wasmer_export_t","wasmer_export_func_t","wasmer_exports_t","wasmer_export_descriptor_t","wasmer_export_descriptors_t","wasmer_import_export_value","wasmer_global_t","wasmer_import_func_t","wasmer_import_descriptor_t","wasmer_import_descriptors_t","wasmer_import_object_iter_t","wasmer_memory_t","wasmer_table_t","wasmer_value_tag","wasmer_value","wasmer_limit_option_t","NamedExport","NamedExports","NamedExportDescriptor","NamedExportDescriptors","wasmer_import_t","WasmerImportObjectIterator","NamedImportDescriptors","NamedImportDescriptor","wasmer_import_object_t","wasmer_instance_t","wasmer_instance_context_t","wasmer_module_t","wasmer_serialized_module_t","wasmer_trampoline_buffer_builder_t","wasmer_trampoline_buffer_t","wasmer_trampoline_callable_t","get_hashed_password","augment_clap","is_subcommand","wasmer::utils","invokeerror","resultobject","wasmer::webassembly","InvokeError","ResultObject","InstanceABI","compile_with_config_with","The same as `compile_with_config` but takes a `Compiler`…"];
searchIndex["kernel_net"]={"doc":E,"i":[],"p":[]};
searchIndex["kwasmd"]={"doc":E,"i":[[3,"Listen","kwasmd",E,N,N],[12,"socket",E,E,0,N],[4,"CLIOptions",E,E,N,N],[13,"Listen",E,E,1,N],[5,"main",E,E,N,[[]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[3],E,E,0,[[[U]],[R[2]]]],[11,R[4],E,E,0,[[],[R[2]]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[R[8]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[3],E,E,1,[[[U]],[R[2]]]],[11,R[4],E,E,1,[[],[R[2]]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[R[8]]]],[11,"fmt",E,E,1,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[304]]],[R[2]]]],[11,"clap",E,E,1,[[],["app"]]],[11,"from_clap",E,E,1,[[["argmatches"]],["self"]]],[11,"clap",E,E,0,[[],["app"]]],[11,"from_clap",E,E,0,[[["argmatches"]],["self"]]],[11,R[1571],E,E,1,[[["app"]],["app"]]],[11,"from_subcommand",E,E,1,[[],[R[26]]]],[11,R[1572],E,E,1,[[],["bool"]]],[11,R[1571],E,E,0,[[["app"]],["app"]]],[11,R[1572],E,E,0,[[],["bool"]]]],"p":[[3,"Listen"],[4,"CLIOptions"]]};
searchIndex["parallel"]={"doc":E,"i":[[3,R[9],"parallel",E,N,N],[12,"ptr",E,E,0,N],[12,"len",E,E,0,N],[5,R[1570],E,E,N,[[["ctx"],[R[752],["u8","array"]],["array"],["u32"],["u8"]],["u32"]]],[5,"print_char",E,E,N,[[["ctx"],["u32"]]]],[5,"main",E,E,N,[[]]],[7,"PLUGIN_LOCATION",E,E,N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[3],E,E,0,[[[U]],[R[2]]]],[11,R[4],E,E,0,[[],[R[2]]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[R[8]]]]],"p":[[3,R[9]]]};
searchIndex["parallel_guest"]={"doc":E,"i":[[3,R[1],"parallel_guest",E,N,N],[12,R[129],E,E,0,N],[3,R[9],E,E,N,N],[12,"ptr",E,E,1,N],[12,"len",E,E,1,N],[5,"print_str",E,E,N,[[["str"]]]],[5,"load_hashed_password",E,E,N,[[],[[R[0]],[R[26],[R[0]]]]]],[5,"num_to_password",E,E,N,[[["u64"]],[R[0]]]],[5,"check_password",E,E,N,[[["u64"]],["u64"]]],[5,"main",E,E,N,[[]]],[5,R[1570],E,E,N,N],[5,"print_char",E,E,N,N],[7,R[1],E,E,N,N],[7,"PASSWORD_CHARS",E,E,N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[3],E,E,0,[[[U]],[R[2]]]],[11,R[4],E,E,0,[[],[R[2]]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[R[8]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[3],E,E,1,[[[U]],[R[2]]]],[11,R[4],E,E,1,[[],[R[2]]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[R[8]]]],[11,"deref",E,E,0,[[["self"]],[R[0]]]],[11,R[305],E,E,0,[[["self"]]]]],"p":[[3,R[1]],[3,R[9]]]};
searchIndex["plugin_for_example"]={"doc":E,"i":[[5,"plugin_entrypoint","plugin_for_example",E,N,[[["i32"]],["i32"]]],[5,"main",E,E,N,[[]]],[5,"it_works",E,E,N,N]],"p":[]};
searchIndex["wasmer"]={"doc":E,"i":[[0,"update","wasmer","When wasmer self-update is executed, this is what gets…",N,N],[5,"self_update","wasmer::update",E,N,[[]]],[0,"utils","wasmer","Utility functions for the WebAssembly module",N,N],[4,R[1577],R[1573],E,N,N],[13,"CouldNotFindFunction",E,E,0,N],[13,"ExportNotFunction",E,E,0,N],[13,"WrongNumArgs",E,E,0,N],[12,R[65],"wasmer::utils::InvokeError",E,0,N],[12,"found",E,E,0,N],[13,"CouldNotParseArg",R[1573],E,0,N],[5,"is_wasm_binary",E,"Detect if a provided binary is a Wasm file",N,[[],["bool"]]],[5,"parse_args",E,"Parses arguments for the `--invoke` flag on the run command",N,[[[R[16]],["str"]],[[R[2],["vec",R[1574]]],[R[1574]],["vec",["value"]]]]],[5,"wasmer_should_print_color",E,"Whether or not Wasmer should print with color",N,[[],["bool"]]],[0,"webassembly","wasmer",E,N,N],[5,R[1580],R[1576],R[1581],N,[[[R[15]],[R[21]]],[[R[2],[R[16],R[279]]],[R[16]],[R[279]]]]],[3,R[1578],E,E,N,N],[12,R[16],E,"A webassembly::Module object representing the compiled…",1,N],[12,R[92],E,"A webassembly::Instance object that contains all the…",1,N],[4,R[1579],E,E,N,N],[13,"Emscripten",E,E,2,N],[13,"WASI",E,E,2,N],[13,"None",E,E,2,N],[5,R[1203],E,"The webassembly::instantiate() function allows you to…",N,[[[R[37]]],[[R[2],[R[1575]]],[R[1575]]]]],[5,"instantiate_streaming",E,"The webassembly::instantiate_streaming() function compiles…",N,[[["vec",["u8"]],[R[37]],["u8"]],[[R[2],[R[1575]]],[R[1575]]]]],[5,"compile",E,"The webassembly::compile() function compiles a…",N,[[],[[R[2],[R[16]]],[R[16]]]]],[11,"from",R[1573],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[247],E,E,0,[[["self"]],[T]]],[11,R[246],E,E,0,[[["self"],[T]]]],[11,R[3],E,E,0,[[[U]],[R[2]]]],[11,R[4],E,E,0,[[],[R[2]]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[R[8]]]],[11,"from",R[1576],E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[3],E,E,1,[[[U]],[R[2]]]],[11,R[4],E,E,1,[[],[R[2]]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[R[8]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[3],E,E,2,[[[U]],[R[2]]]],[11,R[4],E,E,2,[[],[R[2]]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[R[8]]]],[11,"clone",R[1573],E,0,[[["self"]],[R[1574]]]],[11,"eq",R[1576],E,2,[[["self"],["instanceabi"]],["bool"]]],[11,"fmt",R[1573],E,0,[[["self"],[R[304]]],[R[2]]]]],"p":[[4,R[1577]],[3,R[1578]],[4,R[1579]]]};
searchIndex["wasmer_clif_backend"]={"doc":"The Wasmer Cranelift Backend crate is used to compile wasm…","i":[[5,"get_isa",R[1110],E,N,[[],[["box",[R[1129]]],[R[1129]]]]],[0,"cache",E,E,N,N],[3,R[1147],R[1130],E,N,N],[12,"backend_cache",E,E,0,N],[12,R[96],E,E,0,N],[3,R[1148],E,E,N,N],[12,"code",E,E,1,N],[12,"offsets",E,E,1,N],[3,R[1149],E,E,N,N],[12,R[1121],E,E,2,N],[12,"offsets",E,E,2,N],[12,"trap_sink",E,E,2,N],[12,R[1125],E,E,2,N],[17,"_IMPL_SERIALIZE_FOR_TrampolineCache",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_TrampolineCache",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_BackendCache",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_BackendCache",E,E,N,N],[11,"new",E,E,0,[[["arc",[R[96]]],[R[96]],[R[1124]]],["self"]]],[11,R[55],E,E,2,[[[R[23]]],[[R[2],["error"]],["error"]]]],[11,"into_backend_data",E,E,2,[[["self"]],[["vec",["u8"]],[R[2],["vec","error"]],["error"]]]],[0,"code",R[1110],E,N,N],[3,R[1150],R[1131],E,N,N],[12,"isa",E,E,3,N],[12,R[460],E,E,3,N],[12,R[1111],E,E,3,N],[12,R[462],E,E,3,N],[12,R[465],E,E,3,N],[3,R[1151],E,E,N,N],[12,"func",E,E,4,N],[12,"func_translator",E,E,4,N],[12,"next_local",E,E,4,N],[12,"position",E,E,4,N],[12,R[205],E,E,4,N],[3,R[1152],E,E,N,N],[12,"module_info",E,E,5,N],[12,R[1145],E,E,5,N],[12,R[1111],E,E,5,N],[3,R[562],E,E,N,N],[12,"message",E,E,6,N],[5,"convert_func_sig",E,E,N,[[["callconv"],[R[90]]],[R[79]]]],[5,R[1114],E,R[1115],N,[[[R[1112]],[R[1113]]],[R[79]]]],[5,R[1146],E,E,N,[[[R[1112]]],["type"]]],[5,"declare_wasm_parameters",E,"Declare local variables for the signature parameters that…",N,[[[R[1117]],["ebb"]],["usize"]]],[7,R[1166],E,E,N,N],[11,R[1116],E,E,5,[[["self"],[R[54]]],[R[1113]]]],[11,R[1114],E,R[1115],5,[[["self"],[R[1113]]],[R[79]]]],[11,R[1116],E,"Return the signature index for the given function index.",3,[[["self"],[R[54]],[R[28]]],[R[1113]]]],[11,"builder",E,E,4,[[["self"]],[R[1117]]]],[11,"return_mode",E,E,4,[[["self"]],["returnmode"]]],[0,"libcalls",R[1110],E,N,N],[5,"ceilf32","wasmer_clif_backend::libcalls",E,N,[[["f32"]],["f32"]]],[5,"floorf32",E,E,N,[[["f32"]],["f32"]]],[5,"truncf32",E,E,N,[[["f32"]],["f32"]]],[5,"nearbyintf32",E,"`f32.round()` doesn't have the correct behavior. Ideally,…",N,[[["f32"]],["f32"]]],[5,"ceilf64",E,E,N,[[["f64"]],["f64"]]],[5,"floorf64",E,E,N,[[["f64"]],["f64"]]],[5,"truncf64",E,E,N,[[["f64"]],["f64"]]],[5,"nearbyintf64",E,"`f64.round()` doesn't have the correct behavior. Ideally,…",N,[[["f64"]],["f64"]]],[0,R[16],R[1110],E,N,N],[3,"Module",R[1132],"This contains all of the items in a `ModuleInner` except…",N,N],[12,"info",E,E,7,N],[3,"Converter",E,E,N,N],[12,"0",E,E,8,N],[11,R[55],E,E,7,[[[R[23]]],[[R[22]],[R[2],[R[22],R[18]]],[R[18]]]]],[0,"relocation",R[1110],"The relocation package provide two structures: RelocSink,…",N,N],[3,R[1153],R[1122],E,N,N],[12,"reloc",E,"The relocation code.",9,N],[12,"offset",E,R[1118],9,N],[12,"addend",E,R[1119],9,N],[12,"target",E,R[1120],9,N],[3,R[1154],E,E,N,N],[12,"offset",E,R[1118],10,N],[12,"addend",E,R[1119],10,N],[12,"target",E,R[1120],10,N],[3,"RelocSink",E,"Implementation of a relocation sink that just saves all…",N,N],[12,R[1121],E,"Relocations recorded for the function.",11,N],[12,R[1123],E,E,11,N],[3,"TrapData",E,E,N,N],[12,"trapcode",E,E,12,N],[12,"srcloc",E,E,12,N],[3,"TrapSink",E,"Simple implementation of a TrapSink that saves the info…",N,N],[12,"trap_datas",E,E,13,N],[3,R[1155],E,E,N,N],[12,"trap_datas",E,E,14,N],[4,"Reloc",E,E,N,N],[13,"Abs8",E,E,15,N],[13,"X86PCRel4",E,E,15,N],[13,"X86CallPCRel4",E,E,15,N],[4,"LibCall",E,E,N,N],[13,"Probestack",E,E,16,N],[13,"CeilF32",E,E,16,N],[13,"CeilF64",E,E,16,N],[13,"FloorF32",E,E,16,N],[13,"FloorF64",E,E,16,N],[13,"TruncF32",E,E,16,N],[13,"TruncF64",E,E,16,N],[13,"NearestF32",E,E,16,N],[13,"NearestF64",E,E,16,N],[4,"VmCallKind",E,E,N,N],[13,"StaticMemoryGrow",E,E,17,N],[13,"StaticMemorySize",E,E,17,N],[13,"SharedStaticMemoryGrow",E,E,17,N],[13,"SharedStaticMemorySize",E,E,17,N],[13,"DynamicMemoryGrow",E,E,17,N],[13,"DynamicMemorySize",E,E,17,N],[4,"VmCall",E,E,N,N],[13,"Local",E,E,18,N],[13,"Import",E,E,18,N],[4,R[1156],E,"Specify the type of relocation",N,N],[13,"Intrinsic",E,E,19,N],[13,"LibCall",E,E,19,N],[13,"VmCall",E,E,19,N],[13,"Signature",E,E,19,N],[4,"TrapCode",E,E,N,N],[13,"StackOverflow",E,E,20,N],[13,"HeapOutOfBounds",E,E,20,N],[13,"TableOutOfBounds",E,E,20,N],[13,"OutOfBounds",E,E,20,N],[13,"IndirectCallToNull",E,E,20,N],[13,"BadSignature",E,E,20,N],[13,"IntegerOverflow",E,E,20,N],[13,"IntegerDivisionByZero",E,E,20,N],[13,"BadConversionToInteger",E,E,20,N],[13,"Interrupt",E,E,20,N],[13,"UnreachableCodeReached",E,E,20,N],[13,"User",E,E,20,N],[0,"call_names",E,E,N,N],[17,"LOCAL_NAMESPACE","wasmer_clif_backend::relocation::call_names",E,N,N],[17,"IMPORT_NAMESPACE",E,E,N,N],[17,"SIG_NAMESPACE",E,E,N,N],[17,"STATIC_MEM_GROW",E,E,N,N],[17,"STATIC_MEM_SIZE",E,E,N,N],[17,"SHARED_STATIC_MEM_GROW",E,E,N,N],[17,"SHARED_STATIC_MEM_SIZE",E,E,N,N],[17,"DYNAMIC_MEM_GROW",E,E,N,N],[17,"DYNAMIC_MEM_SIZE",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_Reloc",R[1122],E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Reloc",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_LibCall",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_LibCall",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_ExternalRelocation",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_ExternalRelocation",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_VmCallKind",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_VmCallKind",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_VmCall",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_VmCall",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_RelocationType",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_RelocationType",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_TrapCode",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_TrapCode",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_TrapData",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_TrapData",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_TrapSink",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_TrapSink",E,E,N,N],[11,"new",E,E,11,[[],["self"]]],[11,"new",E,E,13,[[],["trapsink"]]],[11,"lookup",E,E,13,[[["self"],["usize"]],[["trapdata"],[R[26],["trapdata"]]]]],[11,"drain_local",E,E,13,[[["self"],["localtrapsink"],["usize"]]]],[11,"new",E,E,14,[[],["self"]]],[0,"resolver",R[1110],E,N,N],[3,R[1157],R[1133],E,N,N],[12,"map",E,E,21,N],[12,R[96],E,E,21,N],[12,R[1123],E,E,21,N],[12,R[1121],E,E,21,N],[12,"import_len",E,E,21,N],[3,R[1161],E,E,N,N],[3,R[1158],E,"Resolves a function index to a function address.",N,N],[12,"map",E,E,22,N],[12,R[96],E,E,22,N],[5,"lookup_func",E,E,N,[[[R[45]],[R[96]],[R[39]]],[[R[89],["func"]],[R[26],[R[89]]]]]],[5,"round_up",E,E,N,[[["usize"]],["usize"]]],[5,"__rust_probestack",E,E,N,N],[11,"new_from_backend_cache",E,E,21,[[[R[28]],[R[96]],[R[1124]]],[[R[2],[R[18]]],[R[18]]]]],[11,"new",E,E,21,[[[R[39]],[R[1143]],["map",[R[39],R[1143]]],[R[28]],[R[1129]]],[R[17]]]],[11,"relocate_locals",E,E,21,[[["self"]]]],[11,R[58],E,E,21,[[["arc",[R[1125]]],[R[1125]],[R[1126]],[R[45]]],[R[17]]]],[11,"lookup",E,E,22,[[["self"],[R[39]]],[[R[89],["func"]],[R[26],[R[89]]]]]],[0,"signal",R[1110],E,N,N],[3,"Caller",R[1127],E,N,N],[12,"handler_data",E,E,23,N],[12,R[1125],E,E,23,N],[12,"resolver",E,E,23,N],[3,R[1159],E,E,N,N],[12,"trap_data",E,E,24,N],[12,"exec_buffer_ptr",E,E,24,N],[12,"exec_buffer_size",E,E,24,N],[4,R[569],E,E,N,N],[13,"Trap",E,E,25,N],[13,"Error",E,E,25,N],[0,"unix",E,R[1167],N,N],[5,R[1103],"wasmer_clif_backend::signal::unix",E,N,[[["c_int"]]]],[5,R[1164],E,E,N,[[]]],[5,R[1168],E,E,N,[[]]],[5,R[1169],E,E,N,[[[R[1126]]],[[R[2],[R[528]]],[R[528]]]]],[5,"do_unwind",E,"Unwinds to last protected_call.",N,[[["i32"]]]],[5,"get_faulting_addr_and_ip",E,E,N,[[]]],[5,"setjmp",E,E,N,N],[5,"longjmp",E,E,N,N],[7,"SIGHANDLER_INIT",E,E,N,N],[17,R[1165],E,E,N,N],[17,"SETJMP_BUFFER",E,E,N,N],[17,"CAUGHT_ADDRESSES",E,E,N,N],[17,"CURRENT_EXECUTABLE_BUFFER",E,E,N,N],[17,R[1170],R[1127],E,N,N],[11,"new",E,E,23,[[[R[1126]],["arc",[R[1125]]],[R[1125]],["funcresolver"]],["self"]]],[11,"new",E,E,24,[[["trapsink"],["usize"],["arc",["trapsink"]]],["self"]]],[11,"lookup",E,E,24,[[["self"]],[["trapdata"],[R[26],["trapdata"]]]]],[0,R[169],R[1110],E,N,N],[3,R[1162],R[1134],E,N,N],[3,R[1160],E,E,N,N],[12,R[96],E,E,26,N],[12,"offsets",E,E,26,N],[5,"generate_func",E,"This function generates a trampoline for the specific…",N,[[[R[90]]],[R[1143]]]],[5,"wasm_ty_to_clif",E,E,N,[[["type"]],["type"]]],[5,"generate_trampoline_signature",E,E,N,[[],[R[79]]]],[5,"generate_export_signature",E,E,N,[[[R[90]]],[R[79]]]],[5,"round_up",E,E,N,[[["usize"]],["usize"]]],[11,"from_trampoline_cache",E,E,26,[[[R[1128]]],["self"]]],[11,"to_trampoline_cache",E,E,26,[[["self"]],[R[1128]]]],[11,"new",E,E,26,[[[R[1129]],[R[28]]],["self"]]],[11,"lookup",E,E,26,[[["self"],[R[40]]],[[R[26],[R[169]]],[R[169]]]]],[6,"CraneliftCompiler",R[1110],"Streaming compiler implementation for the Cranelift…",N,N],[17,"VERSION",E,R[616],N,N],[11,"from",R[1130],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[3],E,E,0,[[[U]],[R[2]]]],[11,R[4],E,E,0,[[],[R[2]]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[R[8]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[3],E,E,1,[[[U]],[R[2]]]],[11,R[4],E,E,1,[[],[R[2]]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[R[8]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[3],E,E,2,[[[U]],[R[2]]]],[11,R[4],E,E,2,[[],[R[2]]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[R[8]]]],[11,"from",R[1131],E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[3],E,E,3,[[[U]],[R[2]]]],[11,R[4],E,E,3,[[],[R[2]]]],[11,R[5],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"]],[R[8]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[3],E,E,4,[[[U]],[R[2]]]],[11,R[4],E,E,4,[[],[R[2]]]],[11,R[5],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[7],E,E,4,[[["self"]],[R[8]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[3],E,E,5,[[[U]],[R[2]]]],[11,R[4],E,E,5,[[],[R[2]]]],[11,R[5],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[7],E,E,5,[[["self"]],[R[8]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[3],E,E,6,[[[U]],[R[2]]]],[11,R[4],E,E,6,[[],[R[2]]]],[11,R[5],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[7],E,E,6,[[["self"]],[R[8]]]],[11,"from",R[1132],E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[3],E,E,7,[[[U]],[R[2]]]],[11,R[4],E,E,7,[[],[R[2]]]],[11,R[5],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[7],E,E,7,[[["self"]],[R[8]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[3],E,E,8,[[[U]],[R[2]]]],[11,R[4],E,E,8,[[],[R[2]]]],[11,R[5],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[7],E,E,8,[[["self"]],[R[8]]]],[11,"from",R[1122],E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[247],E,E,9,[[["self"]],[T]]],[11,R[246],E,E,9,[[["self"],[T]]]],[11,R[3],E,E,9,[[[U]],[R[2]]]],[11,R[4],E,E,9,[[],[R[2]]]],[11,R[5],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[T]]],[11,R[7],E,E,9,[[["self"]],[R[8]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[3],E,E,10,[[[U]],[R[2]]]],[11,R[4],E,E,10,[[],[R[2]]]],[11,R[5],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[T]]],[11,R[7],E,E,10,[[["self"]],[R[8]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[3],E,E,11,[[[U]],[R[2]]]],[11,R[4],E,E,11,[[],[R[2]]]],[11,R[5],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[T]]],[11,R[7],E,E,11,[[["self"]],[R[8]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[247],E,E,12,[[["self"]],[T]]],[11,R[246],E,E,12,[[["self"],[T]]]],[11,R[3],E,E,12,[[[U]],[R[2]]]],[11,R[4],E,E,12,[[],[R[2]]]],[11,R[5],E,E,12,[[["self"]],[T]]],[11,R[6],E,E,12,[[["self"]],[T]]],[11,R[7],E,E,12,[[["self"]],[R[8]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[3],E,E,13,[[[U]],[R[2]]]],[11,R[4],E,E,13,[[],[R[2]]]],[11,R[5],E,E,13,[[["self"]],[T]]],[11,R[6],E,E,13,[[["self"]],[T]]],[11,R[7],E,E,13,[[["self"]],[R[8]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[3],E,E,14,[[[U]],[R[2]]]],[11,R[4],E,E,14,[[],[R[2]]]],[11,R[5],E,E,14,[[["self"]],[T]]],[11,R[6],E,E,14,[[["self"]],[T]]],[11,R[7],E,E,14,[[["self"]],[R[8]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[247],E,E,15,[[["self"]],[T]]],[11,R[246],E,E,15,[[["self"],[T]]]],[11,R[3],E,E,15,[[[U]],[R[2]]]],[11,R[4],E,E,15,[[],[R[2]]]],[11,R[5],E,E,15,[[["self"]],[T]]],[11,R[6],E,E,15,[[["self"]],[T]]],[11,R[7],E,E,15,[[["self"]],[R[8]]]],[11,R[248],E,E,15,[[["self"],["k"]],["bool"]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[247],E,E,16,[[["self"]],[T]]],[11,R[246],E,E,16,[[["self"],[T]]]],[11,R[3],E,E,16,[[[U]],[R[2]]]],[11,R[4],E,E,16,[[],[R[2]]]],[11,R[5],E,E,16,[[["self"]],[T]]],[11,R[6],E,E,16,[[["self"]],[T]]],[11,R[7],E,E,16,[[["self"]],[R[8]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[247],E,E,17,[[["self"]],[T]]],[11,R[246],E,E,17,[[["self"],[T]]]],[11,R[3],E,E,17,[[[U]],[R[2]]]],[11,R[4],E,E,17,[[],[R[2]]]],[11,R[5],E,E,17,[[["self"]],[T]]],[11,R[6],E,E,17,[[["self"]],[T]]],[11,R[7],E,E,17,[[["self"]],[R[8]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[247],E,E,18,[[["self"]],[T]]],[11,R[246],E,E,18,[[["self"],[T]]]],[11,R[3],E,E,18,[[[U]],[R[2]]]],[11,R[4],E,E,18,[[],[R[2]]]],[11,R[5],E,E,18,[[["self"]],[T]]],[11,R[6],E,E,18,[[["self"]],[T]]],[11,R[7],E,E,18,[[["self"]],[R[8]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[247],E,E,19,[[["self"]],[T]]],[11,R[246],E,E,19,[[["self"],[T]]]],[11,R[3],E,E,19,[[[U]],[R[2]]]],[11,R[4],E,E,19,[[],[R[2]]]],[11,R[5],E,E,19,[[["self"]],[T]]],[11,R[6],E,E,19,[[["self"]],[T]]],[11,R[7],E,E,19,[[["self"]],[R[8]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[247],E,E,20,[[["self"]],[T]]],[11,R[246],E,E,20,[[["self"],[T]]]],[11,R[3],E,E,20,[[[U]],[R[2]]]],[11,R[4],E,E,20,[[],[R[2]]]],[11,R[5],E,E,20,[[["self"]],[T]]],[11,R[6],E,E,20,[[["self"]],[T]]],[11,R[7],E,E,20,[[["self"]],[R[8]]]],[11,"from",R[1133],E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[3],E,E,21,[[[U]],[R[2]]]],[11,R[4],E,E,21,[[],[R[2]]]],[11,R[5],E,E,21,[[["self"]],[T]]],[11,R[6],E,E,21,[[["self"]],[T]]],[11,R[7],E,E,21,[[["self"]],[R[8]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[3],E,E,27,[[[U]],[R[2]]]],[11,R[4],E,E,27,[[],[R[2]]]],[11,R[5],E,E,27,[[["self"]],[T]]],[11,R[6],E,E,27,[[["self"]],[T]]],[11,R[7],E,E,27,[[["self"]],[R[8]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[3],E,E,22,[[[U]],[R[2]]]],[11,R[4],E,E,22,[[],[R[2]]]],[11,R[5],E,E,22,[[["self"]],[T]]],[11,R[6],E,E,22,[[["self"]],[T]]],[11,R[7],E,E,22,[[["self"]],[R[8]]]],[11,"from",R[1127],E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[3],E,E,23,[[[U]],[R[2]]]],[11,R[4],E,E,23,[[],[R[2]]]],[11,R[5],E,E,23,[[["self"]],[T]]],[11,R[6],E,E,23,[[["self"]],[T]]],[11,R[7],E,E,23,[[["self"]],[R[8]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[247],E,E,24,[[["self"]],[T]]],[11,R[246],E,E,24,[[["self"],[T]]]],[11,R[3],E,E,24,[[[U]],[R[2]]]],[11,R[4],E,E,24,[[],[R[2]]]],[11,R[5],E,E,24,[[["self"]],[T]]],[11,R[6],E,E,24,[[["self"]],[T]]],[11,R[7],E,E,24,[[["self"]],[R[8]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[3],E,E,25,[[[U]],[R[2]]]],[11,R[4],E,E,25,[[],[R[2]]]],[11,R[5],E,E,25,[[["self"]],[T]]],[11,R[6],E,E,25,[[["self"]],[T]]],[11,R[7],E,E,25,[[["self"]],[R[8]]]],[11,"from",R[1134],E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[3],E,E,28,[[[U]],[R[2]]]],[11,R[4],E,E,28,[[],[R[2]]]],[11,R[5],E,E,28,[[["self"]],[T]]],[11,R[6],E,E,28,[[["self"]],[T]]],[11,R[7],E,E,28,[[["self"]],[R[8]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[3],E,E,26,[[[U]],[R[2]]]],[11,R[4],E,E,26,[[],[R[2]]]],[11,R[5],E,E,26,[[["self"]],[T]]],[11,R[6],E,E,26,[[["self"]],[T]]],[11,R[7],E,E,26,[[["self"]],[R[8]]]],[11,"from",R[1131],E,6,[[[R[279]]],[R[485]]]],[11,"from",E,E,6,[[["wasmerror"]],[R[485]]]],[11,"clone",R[1122],E,15,[[["self"]],["reloc"]]],[11,"clone",E,E,16,[[["self"]],["libcall"]]],[11,"clone",E,E,9,[[["self"]],["externalrelocation"]]],[11,"clone",E,E,17,[[["self"]],["vmcallkind"]]],[11,"clone",E,E,18,[[["self"]],["vmcall"]]],[11,"clone",E,E,19,[[["self"]],["relocationtype"]]],[11,"clone",E,E,20,[[["self"]],["trapcode"]]],[11,"clone",E,E,12,[[["self"]],["trapdata"]]],[11,"clone",R[1127],E,24,[[["self"]],[R[1126]]]],[11,"eq",R[1122],E,15,[[["self"],["reloc"]],["bool"]]],[11,R[303],E,E,15,[[["self"]]]],[11,"fmt",R[1131],E,6,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",R[1122],E,15,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,16,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,9,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,17,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,18,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,19,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,20,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,12,[[["self"],[R[304]]],[R[2]]]],[11,R[306],R[1130],E,1,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,2,[[["self"],["__s"]],[R[2]]]],[11,R[306],R[1122],E,15,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,16,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,9,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,17,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,18,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,19,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,20,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,12,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,13,[[["self"],["__s"]],[R[2]]]],[11,R[307],R[1130],E,1,[[["__d"]],[R[2]]]],[11,R[307],E,E,2,[[["__d"]],[R[2]]]],[11,R[307],R[1122],E,15,[[["__d"]],[R[2]]]],[11,R[307],E,E,16,[[["__d"]],[R[2]]]],[11,R[307],E,E,9,[[["__d"]],[R[2]]]],[11,R[307],E,E,17,[[["__d"]],[R[2]]]],[11,R[307],E,E,18,[[["__d"]],[R[2]]]],[11,R[307],E,E,19,[[["__d"]],[R[2]]]],[11,R[307],E,E,20,[[["__d"]],[R[2]]]],[11,R[307],E,E,12,[[["__d"]],[R[2]]]],[11,R[307],E,E,13,[[["__d"]],[R[2]]]],[11,"get_func",R[1127],E,23,[[["self"],[R[39]],[R[28]]],[[R[89],["func"]],[R[26],[R[89]]]]]],[11,R[162],E,E,23,[[["self"],[R[40]],[R[28]]],[[R[26],["wasm"]],["wasm"]]]],[11,R[537],E,E,23,[[["self"],["box",["any"]],["any"]]]],[11,R[544],R[1130],E,0,[[["self"]],[[R[2],["error"]],["error"]]]],[11,"new",R[1131],E,3,[[],["self"]]],[11,R[546],E,E,3,[[[R[0]],[R[26],[R[0]]]],["self"]]],[11,R[238],E,E,3,[[],["str"]]],[11,R[547],E,E,3,[[["self"],[R[28]]],[[R[2],[R[485]]],[R[485]]]]],[11,R[548],E,E,3,[[["self"],["arc",["rwlock"]],["rwlock",[R[28]]]],[[R[2],[R[1135],R[485]]],[R[485]],[R[1135]]]]],[11,R[58],E,E,3,[[[R[28]]],[[R[2],[R[485]]],[R[485]]]]],[11,R[550],E,E,3,[[["self"],["map",[R[40],R[90]]],[R[40]],[R[90]]],[[R[2],[R[485]]],[R[485]]]]],[11,R[551],E,E,3,[[["self"],["map",[R[54],R[40]]],[R[54]],[R[40]]],[[R[2],[R[485]]],[R[485]]]]],[11,R[552],E,E,3,[[["self"]],[[R[2],[R[485]]],[R[485]]]]],[11,R[55],E,E,3,[[[R[23]],["token"]],[[R[22]],[R[2],[R[22],R[18]]],[R[18]]]]],[11,R[554],E,E,4,[[["self"],["wptype"]],[[R[2],[R[485]]],[R[485]]]]],[11,R[555],E,E,4,[[["self"],["wptype"]],[[R[2],[R[485]]],[R[485]]]]],[11,R[556],E,E,4,[[["self"],["wptype"],["usize"]],[[R[2],[R[485]]],[R[485]]]]],[11,R[557],E,E,4,[[["self"],[R[28]]],[[R[2],[R[485]]],[R[485]]]]],[11,R[56],E,E,4,[[["self"],[R[28]],["event"]],[[R[2],[R[485]]],[R[485]]]]],[11,R[58],E,E,4,[[["self"]],[[R[2],[R[485]]],[R[485]]]]],[11,"reloc_ebb",R[1122],E,11,[[["self"],[R[1136]],["reloc"]]]],[11,R[1137],E,E,11,[[["self"],[R[1138]],["addend"],[R[1136]],["reloc"]]]],[11,R[1139],E,E,11,[[["self"],["u32"],["reloc"]]]],[11,"reloc_jt",E,E,11,[[["self"],["jumptable"],[R[1136]],["reloc"]]]],[11,"reloc_ebb",R[1134],E,28,[[["self"],["u32"],["reloc"]]]],[11,R[1137],E,E,28,[[["self"],["u32"],["reloc"],["i64"],[R[1138]]]]],[11,R[1139],E,E,28,[[["self"],["u32"],["reloc"]]]],[11,"reloc_jt",E,E,28,[[["self"],["u32"],["reloc"],["jumptable"]]]],[11,"trap",R[1122],E,14,[[["self"],["u32"],["trapcode"],["sourceloc"]]]],[11,"add_stackmap",R[1133],E,27,[[["self"],["u32"],[R[1163]]]]],[11,"make_global",R[1131],R[1141],5,[[["self"],[R[1143]],[R[187]]],[[R[1142],[R[1140]]],[R[1140]]]]],[11,"make_heap",E,R[1141],5,[[["self"],[R[1143]],[R[184]]],[["heap"],[R[1142],["heap"]]]]],[11,"make_table",E,R[1141],5,[[["self"],[R[1143]],[R[186]]],[["table"],[R[1142],["table"]]]]],[11,"make_indirect_sig",E,"Sets up a signature definition in `func`'s preamble.",5,[[["self"],[R[1143]],[R[1113]]],[[R[1142],["sigref"]],["sigref"]]]],[11,"make_direct_func",E,"Sets up an external function definition in the preamble of…",5,[[["self"],[R[1143]],[R[54]]],[[R[1142],["funcref"]],["funcref"]]]],[11,"translate_call_indirect",E,"Generates an indirect call IR with `callee` and `call_args`.",5,[[["self"],[R[1113]],["sigref"],["value"],["table"],[R[1144]],[R[186]]],[["inst"],[R[1142],["inst"]]]]],[11,"translate_call",E,"Generates a call IR with `callee` and `call_args` and…",5,[[["self"],[R[1144]],[R[54]],["funcref"]],[["inst"],[R[1142],["inst"]]]]],[11,"translate_memory_grow",E,"Generates code corresponding to wasm `memory.grow`.",5,[[["self"],["heap"],[R[1144]],[R[184]],["value"]],[[R[1142],["value"]],["value"]]]],[11,"translate_memory_size",E,"Generates code corresponding to wasm `memory.size`.",5,[[["self"],["heap"],[R[1144]],[R[184]]],[[R[1142],["value"]],["value"]]]],[11,"translate_memory_copy",E,E,5,[[["self"],["heap"],[R[1144]],[R[184]],["value"]],[R[1142]]]],[11,"translate_memory_fill",E,E,5,[[["self"],["heap"],[R[1144]],[R[184]],["value"]],[R[1142]]]],[11,"translate_memory_init",E,E,5,[[["self"],["heap"],["u32"],[R[1144]],[R[184]],["value"]],[R[1142]]]],[11,"translate_data_drop",E,E,5,[[["self"],[R[1144]],["u32"]],[R[1142]]]],[11,"translate_table_size",E,E,5,[[["self"],["table"],[R[1144]],[R[186]]],[[R[1142],["value"]],["value"]]]],[11,"translate_table_copy",E,E,5,[[["self"],["table"],[R[1144]],[R[186]],["value"]],[R[1142]]]],[11,"translate_table_init",E,E,5,[[["self"],["u32"],["table"],[R[1144]],[R[186]],["value"]],[R[1142]]]],[11,"translate_elem_drop",E,E,5,[[["self"],[R[1144]],["u32"]],[R[1142]]]],[11,R[1145],E,"Gets configuration information needed for compiling…",5,[[["self"]],["targetfrontendconfig"]]],[11,R[1146],E,"Gets native pointers types.",5,[[["self"]],["type"]]],[11,"pointer_bytes",E,"Gets the size of a native pointer in bytes.",5,[[["self"]],["u8"]]],[11,"reference_type",E,"Return Cranelift reference type.",5,[[["self"]],["type"]]]],"p":[[3,R[1147]],[3,R[1148]],[3,R[1149]],[3,R[1150]],[3,R[1151]],[3,R[1152]],[3,R[562]],[3,"Module"],[3,"Converter"],[3,R[1153]],[3,R[1154]],[3,"RelocSink"],[3,"TrapData"],[3,"TrapSink"],[3,R[1155]],[4,"Reloc"],[4,"LibCall"],[4,"VmCallKind"],[4,"VmCall"],[4,R[1156]],[4,"TrapCode"],[3,R[1157]],[3,R[1158]],[3,"Caller"],[3,R[1159]],[4,R[569]],[3,R[1160]],[3,R[1161]],[3,R[1162]]]};
searchIndex["wasmer_dev_utils"]={"doc":E,"i":[[0,"file_descriptor",R[10],E,N,N],[3,R[13],R[11],E,N,N],[12,"0",E,E,0,N],[11,"new",E,E,0,[[["c_int"]],["filedescriptor"]]],[0,"stdio",R[10],E,N,N],[3,R[14],R[12],E,N,N],[12,"stdout_backup",E,E,1,N],[12,"stderr_backup",E,E,1,N],[12,"stdout_reader",E,E,1,N],[12,"stderr_reader",E,E,1,N],[11,"pipe",E,E,1,[[]]],[11,"new",E,E,1,[[],["self"]]],[11,"end",E,E,1,[[],[["error"],[R[2],["error"]]]]],[11,"from",R[11],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[3],E,E,0,[[[U]],[R[2]]]],[11,R[4],E,E,0,[[],[R[2]]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[R[8]]]],[11,"from",R[12],E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[3],E,E,1,[[[U]],[R[2]]]],[11,R[4],E,E,1,[[],[R[2]]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[R[8]]]],[11,"read",R[11],E,0,[[["self"]],[[R[2],["usize"]],["usize"]]]]],"p":[[3,R[13]],[3,R[14]]]};
searchIndex["wasmer_emscripten"]={"doc":E,"i":[[3,R[599],R[579],E,N,N],[12,R[129],E,E,0,N],[3,R[608],E,E,N,N],[12,R[201],E,E,1,N],[12,"malloc",E,E,1,N],[12,"free",E,E,1,N],[12,"memalign",E,E,1,N],[12,"memset",E,E,1,N],[12,"stack_alloc",E,E,1,N],[12,"jumps",E,E,1,N],[12,"opened_dirs",E,E,1,N],[12,"dyn_call_i",E,E,1,N],[12,"dyn_call_ii",E,E,1,N],[12,"dyn_call_iii",E,E,1,N],[12,"dyn_call_iiii",E,E,1,N],[12,"dyn_call_iifi",E,E,1,N],[12,"dyn_call_v",E,E,1,N],[12,"dyn_call_vi",E,E,1,N],[12,"dyn_call_vii",E,E,1,N],[12,"dyn_call_viii",E,E,1,N],[12,"dyn_call_viiii",E,E,1,N],[12,"dyn_call_dii",E,E,1,N],[12,"dyn_call_diiii",E,E,1,N],[12,"dyn_call_iiiii",E,E,1,N],[12,"dyn_call_iiiiii",E,E,1,N],[12,"dyn_call_iiiiiii",E,E,1,N],[12,"dyn_call_iiiiiiii",E,E,1,N],[12,"dyn_call_iiiiiiiii",E,E,1,N],[12,"dyn_call_iiiiiiiiii",E,E,1,N],[12,"dyn_call_iiiiiiiiiii",E,E,1,N],[12,"dyn_call_vd",E,E,1,N],[12,"dyn_call_viiiii",E,E,1,N],[12,"dyn_call_viiiiii",E,E,1,N],[12,"dyn_call_viiiiiii",E,E,1,N],[12,"dyn_call_viiiiiiii",E,E,1,N],[12,"dyn_call_viiiiiiiii",E,E,1,N],[12,"dyn_call_viiiiiiiiii",E,E,1,N],[12,"dyn_call_iij",E,E,1,N],[12,"dyn_call_iji",E,E,1,N],[12,"dyn_call_iiji",E,E,1,N],[12,"dyn_call_iiijj",E,E,1,N],[12,"dyn_call_j",E,E,1,N],[12,"dyn_call_ji",E,E,1,N],[12,"dyn_call_jii",E,E,1,N],[12,"dyn_call_jij",E,E,1,N],[12,"dyn_call_jjj",E,E,1,N],[12,"dyn_call_viiij",E,E,1,N],[12,"dyn_call_viiijiiii",E,E,1,N],[12,"dyn_call_viiijiiiiii",E,E,1,N],[12,"dyn_call_viij",E,E,1,N],[12,"dyn_call_viiji",E,E,1,N],[12,"dyn_call_viijiii",E,E,1,N],[12,"dyn_call_viijj",E,E,1,N],[12,"dyn_call_vj",E,E,1,N],[12,"dyn_call_vjji",E,E,1,N],[12,"dyn_call_vij",E,E,1,N],[12,"dyn_call_viji",E,E,1,N],[12,"dyn_call_vijiii",E,E,1,N],[12,"dyn_call_vijj",E,E,1,N],[12,"dyn_call_viid",E,E,1,N],[12,"dyn_call_vidd",E,E,1,N],[12,"dyn_call_viidii",E,E,1,N],[12,"dyn_call_viidddddddd",E,E,1,N],[12,"temp_ret_0",E,E,1,N],[12,"stack_save",E,E,1,N],[12,"stack_restore",E,E,1,N],[12,"set_threw",E,E,1,N],[12,"mapped_dirs",E,E,1,N],[3,R[609],E,E,N,N],[12,"abort",E,E,2,N],[12,"stacktop",E,E,2,N],[12,"stack_max",E,E,2,N],[12,"dynamictop_ptr",E,E,2,N],[12,"dynamic_base",E,E,2,N],[12,R[615],E,E,2,N],[12,"table_base",E,E,2,N],[12,"temp_double_ptr",E,E,2,N],[12,"use_old_abort_on_cannot_grow_memory",E,E,2,N],[3,R[610],E,E,N,N],[12,"data",E,E,3,N],[12,R[96],E,E,3,N],[12,"table",E,E,3,N],[12,"memory_min",E,E,3,N],[12,R[436],E,E,3,N],[12,"null_func_names",E,E,3,N],[5,R[586],E,E,N,[[["u32"]],["u32"]]],[5,R[587],E,E,N,[[["u32"],["u32"]],["u32"]]],[5,R[598],E,E,N,[[["str"],["ctx"]]]],[5,R[597],E,E,N,[[["u32"],["ctx"]]]],[5,R[594],E,E,N,[[[R[16]]],[[R[0]],[R[2],[R[0]]]]]],[5,R[595],E,R[596],N,[[[R[16]]],[[R[0]],[R[2],[R[26],R[0]]],[R[26]]]]],[5,R[593],E,E,N,[[[R[16]]],[[R[2],[R[0]]],[R[0]]]]],[5,R[591],E,R[592],N,[[[R[16]]],["bool"]]],[5,"set_up_emscripten",E,"Call the global constructors for C++ and set up the…",N,[[[R[92]]],[R[91]]]],[5,"emscripten_call_main",E,"Call the main function in emscripten, assumes that the…",N,[[[R[92]],["str"]],[R[91]]]],[5,"run_emscripten_instance",E,"Top level function to execute emscripten",N,[[[R[0]],[R[578]],[R[16]],["vec",["str"]],["vec"],[R[92]],["str"],[R[26],[R[0]]]],[R[91]]]],[5,"store_module_arguments",E,E,N,[[["ctx"],["vec",["str"]],["str"]]]],[5,"emscripten_set_up_memory",E,E,N,[[[R[96]],[R[600]]],[[R[2],[R[0]]],[R[0]]]]],[5,"generate_emscripten_env",E,E,N,[[[R[578]]],[R[37]]]],[5,"nullfunc",E,E,N,[[["ctx"],["u32"]]]],[0,"macros",E,E,N,N],[0,"bitwise",E,E,N,N],[5,"_llvm_bswap_i64","wasmer_emscripten::bitwise","emscripten: _llvm_bswap_i64",N,[[["ctx"],["i32"]],["i32"]]],[0,"emscripten_target",R[579],E,N,N],[5,"asm_const_i","wasmer_emscripten::emscripten_target",E,N,[[["ctx"],["i32"]],["i32"]]],[5,"exit_with_live_runtime",E,E,N,[[["ctx"]]]],[5,"setTempRet0",E,E,N,[[["ctx"],["i32"]]]],[5,"getTempRet0",E,E,N,[[["ctx"]],["i32"]]],[5,"_alarm",E,E,N,[[["ctx"],["u32"]],["i32"]]],[5,"_atexit",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"__Unwind_Backtrace",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"__Unwind_FindEnclosingFunction",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"__Unwind_GetIPInfo",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___cxa_find_matching_catch_2",E,E,N,[[["ctx"]],["i32"]]],[5,"___cxa_find_matching_catch_3",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___cxa_free_exception",E,E,N,[[["ctx"],["i32"]]]],[5,"___resumeException",E,E,N,[[["ctx"],["i32"]]]],[5,"_dladdr",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___gxx_personality_v0",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_getdtablesize",E,E,N,[[["ctx"]],["i32"]]],[5,"_gethostbyaddr",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_gethostbyname",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_gethostbyname_r",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_getloadavg",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_getnameinfo",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"invoke_i",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"invoke_ii",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"invoke_iii",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"invoke_iiii",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"invoke_iifi",E,E,N,[[["i32"],["ctx"],["f64"]],["i32"]]],[5,"invoke_v",E,E,N,[[["ctx"],["i32"]]]],[5,"invoke_vi",E,E,N,[[["ctx"],["i32"]]]],[5,"invoke_vii",E,E,N,[[["ctx"],["i32"]]]],[5,"invoke_viii",E,E,N,[[["ctx"],["i32"]]]],[5,"invoke_viiii",E,E,N,[[["ctx"],["i32"]]]],[5,"invoke_dii",E,E,N,[[["ctx"],["i32"]],["f64"]]],[5,"invoke_diiii",E,E,N,[[["ctx"],["i32"]],["f64"]]],[5,"invoke_iiiii",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"invoke_iiiiii",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"invoke_iiiiiii",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"invoke_iiiiiiii",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"invoke_iiiiiiiii",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"invoke_iiiiiiiiii",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"invoke_iiiiiiiiiii",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"invoke_vd",E,E,N,[[["ctx"],["f64"],["i32"]]]],[5,"invoke_viiiii",E,E,N,[[["ctx"],["i32"]]]],[5,"invoke_viiiiii",E,E,N,[[["ctx"],["i32"]]]],[5,"invoke_viiiiiii",E,E,N,[[["ctx"],["i32"]]]],[5,"invoke_viiiiiiii",E,E,N,[[["ctx"],["i32"]]]],[5,"invoke_viiiiiiiii",E,E,N,[[["ctx"],["i32"]]]],[5,"invoke_viiiiiiiiii",E,E,N,[[["ctx"],["i32"]]]],[5,"invoke_iij",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"invoke_iji",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"invoke_iiji",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"invoke_iiijj",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"invoke_j",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"invoke_ji",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"invoke_jii",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"invoke_jij",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"invoke_jjj",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"invoke_viiij",E,E,N,[[["ctx"],["i32"]]]],[5,"invoke_viiijiiii",E,E,N,[[["ctx"],["i32"]]]],[5,"invoke_viiijiiiiii",E,E,N,[[["ctx"],["i32"]]]],[5,"invoke_viij",E,E,N,[[["ctx"],["i32"]]]],[5,"invoke_viiji",E,E,N,[[["ctx"],["i32"]]]],[5,"invoke_viijiii",E,E,N,[[["ctx"],["i32"]]]],[5,"invoke_viijj",E,E,N,[[["ctx"],["i32"]]]],[5,"invoke_vj",E,E,N,[[["ctx"],["i32"]]]],[5,"invoke_vjji",E,E,N,[[["ctx"],["i32"]]]],[5,"invoke_vij",E,E,N,[[["ctx"],["i32"]]]],[5,"invoke_viji",E,E,N,[[["ctx"],["i32"]]]],[5,"invoke_vijiii",E,E,N,[[["ctx"],["i32"]]]],[5,"invoke_vijj",E,E,N,[[["ctx"],["i32"]]]],[5,"invoke_vidd",E,E,N,[[["i32"],["ctx"],["f64"]]]],[5,"invoke_viid",E,E,N,[[["ctx"],["f64"],["i32"]]]],[5,"invoke_viidii",E,E,N,[[["i32"],["ctx"],["f64"]]]],[5,"invoke_viidddddddd",E,E,N,[[["i32"],["ctx"],["f64"]]]],[0,"env",R[579],E,N,N],[3,R[611],R[602],E,N,N],[12,"ai_flags",E,E,4,N],[12,"ai_family",E,E,4,N],[12,"ai_socktype",E,E,4,N],[12,"ai_protocol",E,E,4,N],[12,"ai_addrlen",E,E,4,N],[12,"ai_addr",E,E,4,N],[12,"ai_canonname",E,E,4,N],[12,"ai_next",E,E,4,N],[3,R[612],E,E,N,N],[12,"sa_family",E,E,5,N],[12,"sa_data",E,E,5,N],[5,"call_malloc",E,E,N,[[["ctx"],["u32"]],["u32"]]],[5,"call_malloc_with_cast",E,E,N,[[["ctx"],["u32"]],[["copy"],[R[752]]]]],[5,"call_memalign",E,E,N,[[["ctx"],["u32"]],["u32"]]],[5,"call_memset",E,E,N,[[["ctx"],["u32"]],["u32"]]],[5,"get_emscripten_data",E,E,N,[[["ctx"]],[R[601]]]],[5,"_getpagesize",E,E,N,[[["ctx"]],["u32"]]],[5,"_times",E,E,N,[[["ctx"],["u32"]],["u32"]]],[5,"___build_environment",E,E,N,[[["ctx"],["c_int"]]]],[5,"___assert_fail",E,E,N,[[["ctx"],["c_int"]]]],[5,"_pathconf",E,E,N,[[["ctx"],["c_int"]],["c_int"]]],[5,"_fpathconf",E,E,N,[[["ctx"],["c_int"]],["c_int"]]],[0,"unix",E,E,N,N],[5,"_getenv","wasmer_emscripten::env::unix","emscripten: _getenv // (name: *const char) -> *const c_char;",N,[[["ctx"],["i32"]],["u32"]]],[5,"_setenv",E,"emscripten: _setenv // (name: *const char, name: *const…",N,[[["ctx"],["c_int"]],["c_int"]]],[5,"_putenv",E,"emscripten: _putenv // (name: *const char);",N,[[["ctx"],["c_int"]],["c_int"]]],[5,"_unsetenv",E,"emscripten: _unsetenv // (name: *const char);",N,[[["ctx"],["c_int"]],["c_int"]]],[5,"_getpwnam",E,E,N,[[["ctx"],["c_int"]],["c_int"]]],[5,"_getgrnam",E,E,N,[[["ctx"],["c_int"]],["c_int"]]],[5,"_sysconf",E,E,N,[[["ctx"],["c_int"]],["i32"]]],[5,"_gai_strerror",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_getaddrinfo",E,E,N,[[[R[752],["c_char"]],["c_char"],[R[752],[R[580]]],[R[580]],[R[752],[R[752]]],["ctx"]],["i32"]]],[0,"errno",R[579],E,N,N],[5,"___seterrno","wasmer_emscripten::errno",E,N,[[["ctx"],["i32"]]]],[0,"exception",R[579],E,N,N],[5,"___cxa_allocate_exception","wasmer_emscripten::exception","emscripten: ___cxa_allocate_exception",N,[[["ctx"],["u32"]],["u32"]]],[5,"___cxa_current_primary_exception",E,E,N,[[["ctx"]],["u32"]]],[5,"___cxa_decrement_exception_refcount",E,E,N,[[["ctx"],["u32"]]]],[5,"___cxa_increment_exception_refcount",E,E,N,[[["ctx"],["u32"]]]],[5,"___cxa_rethrow_primary_exception",E,E,N,[[["ctx"],["u32"]]]],[5,"___cxa_throw",E,"emscripten: ___cxa_throw TODO: We don't have support for…",N,[[["ctx"],["u32"]]]],[5,"___cxa_begin_catch",E,E,N,[[["ctx"],["u32"]],["i32"]]],[5,"___cxa_end_catch",E,E,N,[[["ctx"]]]],[5,"___cxa_uncaught_exception",E,E,N,[[["ctx"]],["i32"]]],[5,"___cxa_pure_virtual",E,E,N,[[["ctx"]]]],[0,"exec",R[579],E,N,N],[5,"execvp","wasmer_emscripten::exec",E,N,[[["ctx"],["u32"]],["i32"]]],[5,"execl",E,"execl",N,[[[R[588]],["ctx"],["i32"]],["i32"]]],[5,"execle",E,"execle",N,[[[R[588]],["ctx"],["i32"]],["i32"]]],[0,"exit",R[579],E,N,N],[5,"exit","wasmer_emscripten::exit",E,N,[[["ctx"],["i32"]]]],[0,"inet",R[579],E,N,N],[5,"addr","wasmer_emscripten::inet",E,N,[[["ctx"],["i32"]],["i32"]]],[0,"io",R[579],E,N,N],[5,R[581],"wasmer_emscripten::io",R[581],N,[[["ctx"],["i32"]],["i32"]]],[5,R[582],E,R[582],N,[[["ctx"],["i32"]],["i32"]]],[5,R[583],E,R[583],N,[[["ctx"],["i32"]],["i32"]]],[5,R[584],E,R[584],N,[[["ctx"],["i32"]],["i32"]]],[5,"tzset",E,"tzset",N,[[["ctx"]]]],[5,"strptime",E,"strptime",N,[[["ctx"],["i32"]],["i32"]]],[0,"unix",E,E,N,N],[5,"putchar","wasmer_emscripten::io::unix","putchar",N,[[["ctx"],["i32"]]]],[5,"printf",E,"printf",N,[[["ctx"],["i32"]],["i32"]]],[5,"chroot",E,"chroot",N,[[["ctx"],["i32"]],["i32"]]],[5,"getpwuid",E,"getpwuid",N,[[["ctx"],["i32"]],["i32"]]],[0,"jmp",R[579],E,N,N],[5,"__setjmp","wasmer_emscripten::jmp","setjmp",N,[[["ctx"],["u32"]],["c_int"]]],[5,"__longjmp",E,"longjmp",N,[[["ctx"],["u32"],["c_int"]]]],[5,"_longjmp",E,"_longjmp",N,[[["ctx"],["c_int"],["i32"]],[R[2]]]],[0,"libc",R[579],E,N,N],[5,"current_sigrtmax","wasmer_emscripten::libc",E,N,[[["ctx"]],["i32"]]],[5,"current_sigrtmin",E,E,N,[[["ctx"]],["i32"]]],[5,"endpwent",E,E,N,[[["ctx"]]]],[5,"execv",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"fexecve",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"fpathconf",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"getitimer",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"getpwent",E,E,N,[[["ctx"]],["i32"]]],[5,"killpg",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"pathconf",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"setpwent",E,E,N,[[["ctx"]]]],[5,"sigismember",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"sigpending",E,E,N,[[["ctx"],["i32"]],["i32"]]],[0,"linking",R[579],E,N,N],[5,"_dlopen","wasmer_emscripten::linking","emscripten: dlopen(filename: *const c_char, flag: c_int)…",N,[[["ctx"],["u32"]],["i32"]]],[5,"_dlclose",E,"emscripten: dlclose(handle: *mut c_void) -> c_int",N,[[["ctx"],["u32"]],["i32"]]],[5,"_dlsym",E,"emscripten: dlsym(handle: *mut c_void, symbol: *const…",N,[[["ctx"],["u32"]],["i32"]]],[5,"_dlerror",E,"emscripten: dlerror() -> *mut c_char",N,[[["ctx"]],["i32"]]],[0,"lock",R[579],E,N,N],[5,"___lock","wasmer_emscripten::lock",E,N,[[["ctx"],["c_int"]]]],[5,"___unlock",E,E,N,[[["ctx"],["c_int"]]]],[5,"___wait",E,E,N,[[["ctx"],["u32"]]]],[5,"_flock",E,E,N,[[["ctx"],["u32"]],["u32"]]],[0,"math",R[579],E,N,N],[5,"_llvm_copysign_f32","wasmer_emscripten::math",E,N,[[["ctx"],["f64"]],["f64"]]],[5,"_llvm_copysign_f64",E,E,N,[[["ctx"],["f64"]],["f64"]]],[5,"_llvm_log10_f64",E,"emscripten: _llvm_log10_f64",N,[[["ctx"],["f64"]],["f64"]]],[5,"_llvm_log2_f64",E,"emscripten: _llvm_log2_f64",N,[[["ctx"],["f64"]],["f64"]]],[5,"_llvm_sin_f64",E,"emscripten: _llvm_sin_f64",N,[[["ctx"],["f64"]],["f64"]]],[5,"_llvm_cos_f64",E,"emscripten: _llvm_cos_f64",N,[[["ctx"],["f64"]],["f64"]]],[5,"_llvm_log10_f32",E,E,N,[[["ctx"],["f64"]],["f64"]]],[5,"_llvm_log2_f32",E,E,N,[[["ctx"],["f64"]],["f64"]]],[5,"_llvm_exp2_f32",E,E,N,[[["f32"],["ctx"]],["f32"]]],[5,"_llvm_exp2_f64",E,E,N,[[["ctx"],["f64"]],["f64"]]],[5,"_llvm_trunc_f64",E,E,N,[[["ctx"],["f64"]],["f64"]]],[5,"_llvm_fma_f64",E,E,N,[[["ctx"],["f64"]],["f64"]]],[5,"_emscripten_random",E,E,N,[[["ctx"]],["f64"]]],[5,"f64_rem",E,E,N,[[["ctx"],["f64"]],["f64"]]],[5,"pow",E,E,N,[[["ctx"],["f64"]],["f64"]]],[5,"exp",E,E,N,[[["ctx"],["f64"]],["f64"]]],[5,"log",E,E,N,[[["ctx"],["f64"]],["f64"]]],[5,"sqrt",E,E,N,[[["ctx"],["f64"]],["f64"]]],[5,"floor",E,E,N,[[["ctx"],["f64"]],["f64"]]],[5,"fabs",E,E,N,[[["ctx"],["f64"]],["f64"]]],[5,"f64_to_int",E,E,N,[[["ctx"],["f64"]],["i32"]]],[0,R[96],R[579],E,N,N],[5,"_emscripten_memcpy_big","wasmer_emscripten::memory","emscripten: _emscripten_memcpy_big",N,[[["ctx"],["u32"]],["u32"]]],[5,"_emscripten_get_heap_size",E,"emscripten: _emscripten_get_heap_size",N,[[["ctx"]],["u32"]]],[5,"align_up",E,E,N,[[["usize"]],["usize"]]],[5,"_emscripten_resize_heap",E,"emscripten: _emscripten_resize_heap Note: this function…",N,[[["ctx"],["u32"]],["u32"]]],[5,"sbrk",E,"emscripten: sbrk",N,[[["ctx"],["i32"]],["i32"]]],[5,"get_total_memory",E,"emscripten: getTotalMemory",N,[[["ctx"]],["u32"]]],[5,"enlarge_memory",E,"emscripten: enlargeMemory",N,[[["ctx"]],["u32"]]],[5,"abort_on_cannot_grow_memory",E,R[585],N,[[["ctx"],["u32"]],["u32"]]],[5,"abort_on_cannot_grow_memory_old",E,R[585],N,[[["ctx"]],["u32"]]],[5,"segfault",E,"emscripten: segfault",N,[[["ctx"]]]],[5,"alignfault",E,"emscripten: alignfault",N,[[["ctx"]]]],[5,"ftfault",E,"emscripten: ftfault",N,[[["ctx"]]]],[5,"___map_file",E,"emscripten: ___map_file",N,[[["ctx"],["u32"]],["c_int"]]],[0,"process",R[579],E,N,N],[5,"abort_with_message","wasmer_emscripten::process",E,N,[[["ctx"],["str"]]]],[5,"em_abort",E,"The name of this call is `abort` but we want to avoid…",N,[[["ctx"],["u32"]]]],[5,"_abort",E,E,N,[[["ctx"]]]],[5,"_prctl",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_fork",E,E,N,[[["ctx"]],["pid_t"]]],[5,"_endgrent",E,E,N,[[["ctx"]]]],[5,"_execve",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_exit",E,E,N,[[["ctx"],["c_int"]]]],[5,"_kill",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_sched_yield",E,E,N,[[["ctx"]],["i32"]]],[5,"_llvm_stacksave",E,E,N,[[["ctx"]],["i32"]]],[5,"_llvm_stackrestore",E,E,N,[[["ctx"],["i32"]]]],[5,"_raise",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_sem_init",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_sem_destroy",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_sem_post",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_sem_wait",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_getgrent",E,E,N,[[["ctx"]],["c_int"]]],[5,"_setgrent",E,E,N,[[["ctx"]]]],[5,"_setgroups",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_setitimer",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_usleep",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_nanosleep",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_utime",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_utimes",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_wait",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_wait3",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_wait4",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_waitid",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_waitpid",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"abort_stack_overflow",E,E,N,[[["ctx"],["c_int"]]]],[5,"_llvm_trap",E,E,N,[[["ctx"]]]],[5,"_llvm_eh_typeid_for",E,E,N,[[["ctx"],["u32"]],["i32"]]],[5,"_system",E,E,N,[[["ctx"],["i32"]],["c_int"]]],[5,"_popen",E,E,N,[[["ctx"],["i32"]],["c_int"]]],[6,"PidT",E,E,N,N],[0,"pthread",R[579],E,N,N],[5,"_pthread_attr_destroy","wasmer_emscripten::pthread",E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_pthread_attr_getstack",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_pthread_attr_init",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_pthread_attr_setstacksize",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_pthread_cleanup_pop",E,E,N,[[["ctx"],["i32"]]]],[5,"_pthread_cleanup_push",E,E,N,[[["ctx"],["i32"]]]],[5,"_pthread_cond_destroy",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_pthread_cond_init",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_pthread_cond_signal",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_pthread_cond_timedwait",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_pthread_cond_wait",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_pthread_condattr_destroy",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_pthread_condattr_init",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_pthread_condattr_setclock",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_pthread_create",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_pthread_detach",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_pthread_equal",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_pthread_exit",E,E,N,[[["ctx"],["i32"]]]],[5,"_pthread_getattr_np",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_pthread_getspecific",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_pthread_join",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_pthread_self",E,E,N,[[["ctx"]],["i32"]]],[5,"_pthread_key_create",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_pthread_mutex_destroy",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_pthread_mutex_init",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_pthread_mutexattr_destroy",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_pthread_mutexattr_init",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_pthread_mutexattr_settype",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_pthread_once",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_pthread_rwlock_destroy",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_pthread_rwlock_init",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_pthread_rwlock_rdlock",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_pthread_rwlock_unlock",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_pthread_rwlock_wrlock",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_pthread_setcancelstate",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_pthread_setspecific",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_pthread_sigmask",E,E,N,[[["ctx"],["i32"]],["i32"]]],[0,"ptr",R[579],R[620],N,N],[3,"Array",R[603],"Array.",N,N],[3,"WasmPtr",E,E,N,N],[12,"0",E,E,6,N],[11,"new",E,E,6,[[["u32"]],["self"]]],[11,"offset",E,E,6,[[],["u32"]]],[11,"deref",E,E,6,[[[R[96]]],[["cell"],[R[26],["cell"]]]]],[11,R[105],E,E,6,[[[R[96]]],[[R[26],["cell"]],["cell"]]]],[11,"deref",E,E,6,[[[R[96]],["u32"]],[R[26]]]],[11,R[105],E,E,6,[[[R[96]],["u32"]],[R[26]]]],[11,R[614],E,E,6,[[[R[96]],["u32"]],[[R[26],["str"]],["str"]]]],[0,"signal",R[579],E,N,N],[5,"_sigemptyset","wasmer_emscripten::signal",E,N,[[["ctx"],["u32"]],["i32"]]],[5,"_sigaction",E,E,N,[[["ctx"],["u32"]],["i32"]]],[5,"_siginterrupt",E,E,N,[[["ctx"],["u32"]],["i32"]]],[5,"_sigaddset",E,E,N,[[["ctx"],["u32"]],["i32"]]],[5,"_sigsuspend",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_sigprocmask",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_signal",E,E,N,[[["ctx"],["u32"],["i32"]],["i32"]]],[0,"storage",R[579],E,N,N],[5,R[586],"wasmer_emscripten::storage",E,N,[[["u32"]],["u32"]]],[5,R[587],E,E,N,[[["u32"],["u32"]],["u32"]]],[0,"syscalls",R[579],E,N,N],[5,"___syscall1","wasmer_emscripten::syscalls","exit",N,[[["ctx"],["c_int"],[R[588]]]]],[5,"___syscall3",E,"read",N,[[[R[588]],["ctx"],["i32"]],["i32"]]],[5,"___syscall4",E,"write",N,[[["ctx"],["c_int"],[R[588]]],["c_int"]]],[5,"___syscall6",E,"close",N,[[["ctx"],["c_int"],[R[588]]],["c_int"]]],[5,"___syscall12",E,E,N,[[["ctx"],["c_int"],[R[588]]],["c_int"]]],[5,"___syscall10",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall14",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall15",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall20",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall21",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall25",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall29",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall32",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,R[589],E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall36",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall38",E,E,N,[[["ctx"],["c_int"],[R[588]]],["i32"]]],[5,"___syscall40",E,E,N,[[["ctx"],["c_int"],[R[588]]],["c_int"]]],[5,"___syscall42",E,E,N,[[["ctx"],["c_int"],[R[588]]],["c_int"]]],[5,"___syscall51",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall52",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall53",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall60",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall63",E,E,N,[[["ctx"],["c_int"],[R[588]]],["c_int"]]],[5,"___syscall64",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall66",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall75",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall91",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall96",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall97",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall110",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall121",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall125",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall133",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall144",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall147",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall150",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall151",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall152",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall153",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall163",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall183",E,E,N,[[["ctx"],["c_int"],[R[588]]],["i32"]]],[5,"___syscall192",E,E,N,[[["ctx"],["c_int"],[R[588]]],["c_int"]]],[5,"___syscall140",E,"lseek",N,[[[R[588]],["ctx"],["i32"]],["i32"]]],[5,"___syscall145",E,"readv",N,[[["ctx"],["c_int"],[R[588]]],["i32"]]],[5,"___syscall146",E,E,N,[[[R[588]],["ctx"],["i32"]],["i32"]]],[5,"___syscall191",E,E,N,[[[R[588]],["ctx"],["i32"]],["i32"]]],[5,"___syscall193",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall195",E,E,N,[[["ctx"],["c_int"],[R[588]]],["c_int"]]],[5,"___syscall197",E,E,N,[[["ctx"],["c_int"],[R[588]]],["c_int"]]],[5,"___syscall209",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall211",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall218",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall268",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall269",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall272",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall295",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall296",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall297",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall298",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall300",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall301",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall302",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall303",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall304",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall305",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall306",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall307",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall308",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall320",E,E,N,[[["ctx"],["c_int"],[R[588]]],["c_int"]]],[5,"___syscall331",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall333",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall334",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall337",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall340",E,E,N,[[["ctx"],["c_int"],[R[588]]],["c_int"]]],[5,"___syscall345",E,E,N,[[["ctx"],["i32"]],["i32"]]],[0,"unix",E,E,N,N],[3,"EmPollFd",R[604],E,N,N],[12,"fd",E,E,7,N],[12,"events",E,E,7,N],[12,"revents",E,E,7,N],[5,"translate_ioctl",E,E,N,[[["u32"]],["c_ulong"]]],[5,"___syscall5",E,"open",N,[[["ctx"],["c_int"],[R[588]]],["c_int"]]],[5,"___syscall9",E,"link",N,[[["ctx"],["c_int"],[R[588]]],["c_int"]]],[5,"___syscall77",E,"getrusage",N,[[["ctx"],["c_int"],[R[588]]],["c_int"]]],[5,"___syscall83",E,"symlink",N,[[["ctx"],["c_int"],[R[588]]],["c_int"]]],[5,"___syscall85",E,"readlink",N,[[["ctx"],["c_int"],[R[588]]],["i32"]]],[5,"___syscall194",E,"ftruncate64",N,[[["ctx"],["c_int"],[R[588]]],["c_int"]]],[5,"___syscall198",E,"lchown",N,[[["ctx"],["c_int"],[R[588]]],["c_int"]]],[5,"___syscall205",E,"getgroups",N,[[["ctx"],["c_int"],[R[588]]],["c_int"]]],[5,"___syscall212",E,E,N,[[["ctx"],["c_int"],[R[588]]],["c_int"]]],[5,"___syscall219",E,"madvise",N,[[["ctx"],["c_int"],[R[588]]],["c_int"]]],[5,R[589],E,"access",N,[[["ctx"],["c_int"],[R[588]]],["c_int"]]],[5,"___syscall34",E,"nice",N,[[["ctx"],["c_int"],[R[588]]],["c_int"]]],[5,"___syscall39",E,E,N,[[["ctx"],["c_int"],[R[588]]],["c_int"]]],[5,"___syscall41",E,"dup",N,[[["ctx"],["c_int"],[R[588]]],["c_int"]]],[5,"___syscall200",E,"getgid32",N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall201",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall202",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall207",E,"fchown",N,[[["ctx"],["c_int"],[R[588]]],["c_int"]]],[5,"___syscall330",E,"dup3",N,[[["ctx"],["c_int"],[R[588]]],["pid_t"]]],[5,"___syscall54",E,"ioctl",N,[[["ctx"],["c_int"],[R[588]]],["c_int"]]],[5,"___syscall102",E,E,N,[[["ctx"],["c_int"],[R[588]]],["c_int"]]],[5,"translate_socket_name_flag",E,"OSX and BSD have completely different values, we must…",N,[[["i32"]],["i32"]]],[5,"___syscall132",E,"getpgid",N,[[["ctx"],["c_int"],[R[588]]],["c_int"]]],[5,"___syscall168",E,"poll",N,[[[R[588]],["ctx"],["i32"]],["i32"]]],[5,"___syscall180",E,E,N,[[["ctx"],["c_int"],[R[588]]],["c_int"]]],[5,"___syscall181",E,E,N,[[["ctx"],["c_int"],[R[588]]],["c_int"]]],[5,"___syscall94",E,"fchmod",N,[[["ctx"],["c_int"],[R[588]]],["c_int"]]],[5,"___syscall114",E,"wait4",N,[[["ctx"],["c_int"],[R[588]]],["pid_t"]]],[5,"___syscall118",E,"fsync",N,[[["ctx"],["c_int"],[R[588]]],["c_int"]]],[5,"___syscall142",E,E,N,[[["ctx"],["c_int"],[R[588]]],["c_int"]]],[5,"___syscall148",E,"fdatasync",N,[[["ctx"],["c_int"],[R[588]]],["c_int"]]],[5,"___syscall57",E,E,N,[[["ctx"],["c_int"],[R[588]]],["c_int"]]],[5,"___syscall122",E,"uname",N,[[["ctx"],["c_int"],[R[588]]],["c_int"]]],[5,"___syscall196",E,"lstat64",N,[[[R[588]],["ctx"],["i32"]],["i32"]]],[5,"___syscall199",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___syscall220",E,E,N,[[[R[588]],["ctx"],["i32"]],["i32"]]],[5,"___syscall221",E,E,N,[[["ctx"],["c_int"],[R[588]]],["c_int"]]],[5,"___syscall324",E,"fallocate",N,[[["ctx"],["c_int"],[R[588]]],["c_int"]]],[17,"TCGETS",E,E,N,N],[17,"TCSETSW",E,E,N,N],[17,"WASM_FIONBIO",E,E,N,N],[17,"WASM_FIOCLEX",E,E,N,N],[17,"WASM_TIOCSPGRP",E,E,N,N],[17,"WASM_TIOCGWINSZ",E,E,N,N],[17,"WASM_TCGETS",E,E,N,N],[17,"WASM_TCSETSW",E,E,N,N],[17,"SO_NOSIGPIPE",E,E,N,N],[17,"SOCK_NON_BLOCK",E,E,N,N],[17,"SOCK_CLOEXC",E,E,N,N],[0,"time",R[579],E,N,N],[3,"guest_tm",R[605],E,N,N],[12,"tm_sec",E,E,8,N],[12,"tm_min",E,E,8,N],[12,"tm_hour",E,E,8,N],[12,"tm_mday",E,E,8,N],[12,"tm_mon",E,E,8,N],[12,"tm_year",E,E,8,N],[12,"tm_wday",E,E,8,N],[12,"tm_yday",E,E,8,N],[12,"tm_isdst",E,E,8,N],[12,"tm_gmtoff",E,E,8,N],[12,"tm_zone",E,E,8,N],[5,"_gettimeofday",E,"emscripten: _gettimeofday",N,[[["ctx"],["c_int"]],["c_int"]]],[5,"_clock_getres",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_clock_gettime",E,"emscripten: _clock_gettime",N,[[[R[590]],["ctx"],["c_int"]],["c_int"]]],[5,"_clock_settime",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"___clock_gettime",E,"emscripten: ___clock_gettime",N,[[[R[590]],["ctx"],["c_int"]],["c_int"]]],[5,"_clock",E,"emscripten: _clock",N,[[["ctx"]],["c_int"]]],[5,"_difftime",E,"emscripten: _difftime",N,[[["ctx"],["u32"]],["f64"]]],[5,"_gmtime_r",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_mktime",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_gmtime",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_tvset",E,"emscripten: _tvset",N,[[["ctx"]]]],[5,"fmt_time",E,"formats time as a C string",N,[[["ctx"],["u32"]]]],[5,"_asctime",E,"emscripten: _asctime",N,[[["ctx"],["u32"]],["u32"]]],[5,"_asctime_r",E,"emscripten: _asctime_r",N,[[["ctx"],["u32"]],["u32"]]],[5,"_localtime",E,"emscripten: _localtime",N,[[["ctx"],["u32"]],["c_int"]]],[5,"_localtime_r",E,"emscripten: _localtime_r",N,[[["ctx"],["u32"]],["c_int"]]],[5,"_time",E,"emscripten: _time",N,[[["ctx"],["u32"]],["i32"]]],[5,"_ctime_r",E,E,N,[[["ctx"],["u32"]],["u32"]]],[5,"_ctime",E,E,N,[[["ctx"],["u32"]],["u32"]]],[5,"_timegm",E,"emscripten: _timegm",N,[[["ctx"],["u32"]],["i32"]]],[5,"_strftime",E,"emscripten: _strftime",N,[[["u32"],["ctx"],["c_int"]],["i32"]]],[5,"_strftime_l",E,"emscripten: _strftime_l",N,[[["u32"],["ctx"],["c_int"]],["i32"]]],[0,"ucontext",R[579],E,N,N],[5,"_getcontext","wasmer_emscripten::ucontext",E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_makecontext",E,E,N,[[["ctx"],["i32"]]]],[5,"_setcontext",E,E,N,[[["ctx"],["i32"]],["i32"]]],[5,"_swapcontext",E,E,N,[[["ctx"],["i32"]],["i32"]]],[0,"unistd",R[579],E,N,N],[5,"confstr","wasmer_emscripten::unistd",E,N,[[["ctx"],["i32"]],["i32"]]],[0,"utils",R[579],E,N,N],[3,R[613],R[606],E,N,N],[12,"st_dev",E,E,9,N],[12,"__st_dev_padding",E,E,9,N],[12,"__st_ino_truncated",E,E,9,N],[12,"st_mode",E,E,9,N],[12,R[771],E,E,9,N],[12,"st_uid",E,E,9,N],[12,"st_gid",E,E,9,N],[12,"st_rdev",E,E,9,N],[12,"__st_rdev_padding",E,E,9,N],[12,"st_size",E,E,9,N],[12,"st_blksize",E,E,9,N],[12,"st_blocks",E,E,9,N],[12,"st_atime",E,E,9,N],[12,"st_mtime",E,E,9,N],[12,"st_ctime",E,E,9,N],[12,"st_ino",E,E,9,N],[5,R[591],E,R[592],N,[[[R[16]]],["bool"]]],[5,R[593],E,E,N,[[[R[16]]],[[R[2],[R[0]]],[R[0]]]]],[5,R[594],E,E,N,[[[R[16]]],[[R[0]],[R[2],[R[0]]]]]],[5,R[595],E,R[596],N,[[[R[16]]],[[R[0]],[R[2],[R[26],R[0]]],[R[26]]]]],[5,"write_to_buf",E,E,N,[[["u32"],["ctx"]],["u32"]]],[5,"copy_cstr_into_wasm",E,"This function expects nullbyte to be appended.",N,[[["ctx"]],["u32"]]],[5,R[597],E,E,N,[[["u32"],["ctx"]]]],[5,R[598],E,E,N,[[["str"],["ctx"]]]],[5,"copy_terminated_array_of_cstrs",E,E,N,[[["ctx"]],["u32"]]],[5,"copy_stat_into_wasm",E,E,N,[[["ctx"],["u32"],["stat"]]]],[5,"read_string_from_wasm",E,E,N,[[["u32"],[R[96]]],[R[0]]]],[5,"get_cstr_path",E,"This function trys to find an entry in mapdir translating…",N,[[["ctx"]],[["cstring"],[R[26],["cstring"]]]]],[5,"get_current_directory",E,"gets the current directory handles mapdir logic",N,[[["ctx"]],[[R[26],[R[618]]],[R[618]]]]],[0,R[588],R[579],E,N,N],[3,"VarArgs",R[607],E,N,N],[12,"pointer",E,E,10,N],[11,"get",E,E,10,[[["self"],["ctx"]],["sized"]]],[11,"get_str",E,E,10,[[["self"],["ctx"]]]],[7,R[599],R[579],E,N,N],[17,"TOTAL_STACK",E,E,N,N],[17,"STATIC_BUMP",E,E,N,N],[17,"GLOBAL_BASE",E,E,N,N],[17,"STATIC_BASE",E,E,N,N],[17,"VERSION",E,R[616],N,N],[11,"new",E,E,1,[[[R[0]],[R[600]],[R[92]],["hashmap",[R[0],R[618]]],[R[618]]],[R[601]]]],[11,"new",E,E,3,[[[R[16]]],[[R[2],[R[0]]],[R[0]]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[3],E,E,0,[[[U]],[R[2]]]],[11,R[4],E,E,0,[[],[R[2]]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[R[8]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[3],E,E,1,[[[U]],[R[2]]]],[11,R[4],E,E,1,[[],[R[2]]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[R[8]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[3],E,E,2,[[[U]],[R[2]]]],[11,R[4],E,E,2,[[],[R[2]]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[R[8]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[3],E,E,3,[[[U]],[R[2]]]],[11,R[4],E,E,3,[[],[R[2]]]],[11,R[5],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"]],[R[8]]]],[11,"from",R[602],E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[247],E,E,4,[[["self"]],[T]]],[11,R[246],E,E,4,[[["self"],[T]]]],[11,R[3],E,E,4,[[[U]],[R[2]]]],[11,R[4],E,E,4,[[],[R[2]]]],[11,R[5],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[7],E,E,4,[[["self"]],[R[8]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[247],E,E,5,[[["self"]],[T]]],[11,R[246],E,E,5,[[["self"],[T]]]],[11,R[3],E,E,5,[[[U]],[R[2]]]],[11,R[4],E,E,5,[[],[R[2]]]],[11,R[5],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[7],E,E,5,[[["self"]],[R[8]]]],[11,"from",R[603],E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[3],E,E,11,[[[U]],[R[2]]]],[11,R[4],E,E,11,[[],[R[2]]]],[11,R[5],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[T]]],[11,R[7],E,E,11,[[["self"]],[R[8]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[247],E,E,6,[[["self"]],[T]]],[11,R[246],E,E,6,[[["self"],[T]]]],[11,R[3],E,E,6,[[[U]],[R[2]]]],[11,R[4],E,E,6,[[],[R[2]]]],[11,R[5],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[7],E,E,6,[[["self"]],[R[8]]]],[11,R[258],E,E,6,[[],["a"]]],[11,R[259],E,E,6,[[]]],[11,R[260],E,E,6,[[],["a"]]],[11,R[261],E,E,6,[[]]],[11,"types",E,E,6,[[]]],[11,"call",E,E,6,[[[R[89],["func"]],["wasm"],["func"]],[[R[168]],[R[2],[R[168]]]]]],[11,"report",E,E,6,[[],[[R[2],[R[262]]],[R[262]]]]],[11,R[248],E,E,6,[[["self"],["k"]],["bool"]]],[11,"from",R[604],E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[247],E,E,7,[[["self"]],[T]]],[11,R[246],E,E,7,[[["self"],[T]]]],[11,R[3],E,E,7,[[[U]],[R[2]]]],[11,R[4],E,E,7,[[],[R[2]]]],[11,R[5],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[7],E,E,7,[[["self"]],[R[8]]]],[11,"from",R[605],E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[3],E,E,8,[[[U]],[R[2]]]],[11,R[4],E,E,8,[[],[R[2]]]],[11,R[5],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[7],E,E,8,[[["self"]],[R[8]]]],[11,"from",R[606],E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[3],E,E,9,[[[U]],[R[2]]]],[11,R[4],E,E,9,[[],[R[2]]]],[11,R[5],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[T]]],[11,R[7],E,E,9,[[["self"]],[R[8]]]],[11,"from",R[607],E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[247],E,E,10,[[["self"]],[T]]],[11,R[246],E,E,10,[[["self"],[T]]]],[11,R[3],E,E,10,[[[U]],[R[2]]]],[11,R[4],E,E,10,[[],[R[2]]]],[11,R[5],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[T]]],[11,R[7],E,E,10,[[["self"]],[R[8]]]],[11,R[258],E,E,10,[[],["a"]]],[11,R[259],E,E,10,[[]]],[11,R[260],E,E,10,[[],["a"]]],[11,R[261],E,E,10,[[]]],[11,"types",E,E,10,[[]]],[11,"call",E,E,10,[[[R[89],["func"]],["wasm"],["func"]],[[R[168]],[R[2],[R[168]]]]]],[11,"report",E,E,10,[[],[[R[2],[R[262]]],[R[262]]]]],[11,"clone",R[602],E,4,[[["self"]],[R[580]]]],[11,"clone",E,E,5,[[["self"]],["emsockaddr"]]],[11,"clone",R[603],E,6,[[["self"]],["self"]]],[11,"clone",R[604],E,7,[[["self"]],["empollfd"]]],[11,"clone",R[607],E,10,[[["self"]],[R[588]]]],[11,"eq",R[603],E,6,[[["self"]],["bool"]]],[11,"deref",R[579],E,0,[[["self"]],[R[90]]]],[11,"fmt",R[602],E,4,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,5,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",R[603],E,6,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",R[604],E,7,[[["self"],[R[304]]],[R[2]]]],[11,R[275],R[603],E,6,[[]]],[11,R[276],E,E,6,[[],["self"]]],[11,R[275],R[607],E,10,[[]]],[11,R[276],E,E,10,[[],["self"]]],[11,R[305],R[579],E,0,[[["self"]]]]],"p":[[3,R[599]],[3,R[608]],[3,R[609]],[3,R[610]],[3,R[611]],[3,R[612]],[3,"WasmPtr"],[3,"EmPollFd"],[3,"guest_tm"],[3,R[613]],[3,"VarArgs"],[3,"Array"]]};
searchIndex["wasmer_emscripten_tests"]={"doc":E,"i":[],"p":[]};
searchIndex["wasmer_kernel_loader"]={"doc":E,"i":[[3,R[457],R[440],E,N,N],[3,R[444],E,E,N,N],[12,"context",E,E,0,N],[12,"offsets",E,E,0,N],[12,"param_counts",E,E,0,N],[0,"service",E,E,N,N],[3,R[445],R[441],E,N,N],[12,"code",E,E,1,N],[12,"code_len",E,E,1,N],[12,R[96],E,E,1,N],[12,"memory_len",E,E,1,N],[12,R[436],E,E,1,N],[12,"table",E,E,1,N],[12,"table_count",E,E,1,N],[12,R[201],E,E,1,N],[12,"global_count",E,E,1,N],[12,R[458],E,E,1,N],[12,"imported_func_count",E,E,1,N],[12,R[196],E,E,1,N],[12,R[459],E,E,1,N],[3,R[446],E,E,N,N],[12,R[437],E,E,2,N],[12,"params",E,E,2,N],[12,R[435],E,E,2,N],[12,R[2],E,E,2,N],[3,R[447],E,E,N,N],[12,"success",E,E,3,N],[12,"retval",E,E,3,N],[3,R[448],E,E,N,N],[12,"out",E,E,4,N],[12,"offset",E,E,4,N],[12,"len",E,E,4,N],[3,R[449],E,E,N,N],[12,"_in",E,E,5,N],[12,"offset",E,E,5,N],[12,"len",E,E,5,N],[3,R[450],E,E,N,N],[12,"name",E,E,6,N],[12,R[435],E,E,6,N],[3,R[451],E,E,N,N],[12,"offset",E,E,7,N],[12,"sig_id",E,E,7,N],[3,R[452],E,E,N,N],[12,"code",E,E,8,N],[12,R[96],E,E,8,N],[12,R[436],E,E,8,N],[12,R[201],E,E,8,N],[12,"imports",E,E,8,N],[12,R[196],E,E,8,N],[12,"table",E,E,8,N],[3,R[453],E,E,N,N],[12,"name",E,E,9,N],[12,R[435],E,E,9,N],[3,R[454],E,E,N,N],[12,R[437],E,E,10,N],[12,"params",E,E,10,N],[3,R[455],E,E,N,N],[12,"dev",E,E,11,N],[4,"Command",E,E,N,N],[13,"LoadCode",E,E,12,N],[13,"RunCode",E,E,12,N],[13,"ReadMemory",E,E,12,N],[13,"WriteMemory",E,E,12,N],[4,R[456],E,E,N,N],[13,"Io",E,E,13,N],[13,"Code",E,E,13,N],[13,R[624],E,E,13,N],[13,"Rejected",E,E,13,N],[6,"ServiceResult",E,E,N,N],[11,"new",E,E,11,[[["loadprofile"]],[[R[439],[R[438]]],[R[438]]]]],[11,"run_code",E,E,11,[[["self"],["runprofile"]],[[R[439],["u128"]],["u128"]]]],[11,R[442],E,E,11,[[["self"],["u32"]],[["vec",["u8"]],[R[439],["vec"]]]]],[11,R[443],E,E,11,[[["self"],["u32"]],[R[439]]]],[11,"from",R[440],E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[3],E,E,14,[[[U]],[R[2]]]],[11,R[4],E,E,14,[[],[R[2]]]],[11,R[5],E,E,14,[[["self"]],[T]]],[11,R[6],E,E,14,[[["self"]],[T]]],[11,R[7],E,E,14,[[["self"]],[R[8]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[3],E,E,0,[[[U]],[R[2]]]],[11,R[4],E,E,0,[[],[R[2]]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[R[8]]]],[11,"from",R[441],E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[3],E,E,1,[[[U]],[R[2]]]],[11,R[4],E,E,1,[[],[R[2]]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[R[8]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[3],E,E,2,[[[U]],[R[2]]]],[11,R[4],E,E,2,[[],[R[2]]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[R[8]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[3],E,E,3,[[[U]],[R[2]]]],[11,R[4],E,E,3,[[],[R[2]]]],[11,R[5],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"]],[R[8]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[3],E,E,4,[[[U]],[R[2]]]],[11,R[4],E,E,4,[[],[R[2]]]],[11,R[5],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[7],E,E,4,[[["self"]],[R[8]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[3],E,E,5,[[[U]],[R[2]]]],[11,R[4],E,E,5,[[],[R[2]]]],[11,R[5],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[7],E,E,5,[[["self"]],[R[8]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[3],E,E,6,[[[U]],[R[2]]]],[11,R[4],E,E,6,[[],[R[2]]]],[11,R[5],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[7],E,E,6,[[["self"]],[R[8]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[3],E,E,7,[[[U]],[R[2]]]],[11,R[4],E,E,7,[[],[R[2]]]],[11,R[5],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[7],E,E,7,[[["self"]],[R[8]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[3],E,E,8,[[[U]],[R[2]]]],[11,R[4],E,E,8,[[],[R[2]]]],[11,R[5],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[7],E,E,8,[[["self"]],[R[8]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[3],E,E,9,[[[U]],[R[2]]]],[11,R[4],E,E,9,[[],[R[2]]]],[11,R[5],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[T]]],[11,R[7],E,E,9,[[["self"]],[R[8]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[3],E,E,10,[[[U]],[R[2]]]],[11,R[4],E,E,10,[[],[R[2]]]],[11,R[5],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[T]]],[11,R[7],E,E,10,[[["self"]],[R[8]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[3],E,E,11,[[[U]],[R[2]]]],[11,R[4],E,E,11,[[],[R[2]]]],[11,R[5],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[T]]],[11,R[7],E,E,11,[[["self"]],[R[8]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[3],E,E,12,[[[U]],[R[2]]]],[11,R[4],E,E,12,[[],[R[2]]]],[11,R[5],E,E,12,[[["self"]],[T]]],[11,R[6],E,E,12,[[["self"]],[T]]],[11,R[7],E,E,12,[[["self"]],[R[8]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[252],E,E,13,[[["self"]],[R[0]]]],[11,R[3],E,E,13,[[[U]],[R[2]]]],[11,R[4],E,E,13,[[],[R[2]]]],[11,R[5],E,E,13,[[["self"]],[T]]],[11,R[6],E,E,13,[[["self"]],[T]]],[11,R[7],E,E,13,[[["self"]],[R[8]]]],[11,"from",E,E,13,[[["error"]],["serviceerror"]]],[11,"fmt",E,E,13,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,13,[[["self"],[R[304]]],[R[2]]]],[11,"description",E,E,13,[[["self"]],["str"]]],[11,"load",R[440],E,14,[[["self"],["ctx"],[R[28]],[R[95]]],[R[2]]]],[11,"call",E,E,0,[[["self"],["usize"]],[[R[0]],[R[2],["u128",R[0]]],["u128"]]]],[11,R[442],E,E,0,[[["self"],["u32"]],[["vec",["u8"]],[R[0]],[R[2],["vec",R[0]]]]]],[11,R[443],E,E,0,[[["self"],["u32"]],[[R[2],[R[0]]],[R[0]]]]]],"p":[[3,R[444]],[3,R[445]],[3,R[446]],[3,R[447]],[3,R[448]],[3,R[449]],[3,R[450]],[3,R[451]],[3,R[452]],[3,R[453]],[3,R[454]],[3,R[455]],[4,"Command"],[4,R[456]],[3,R[457]]]};
searchIndex["wasmer_llvm_backend"]={"doc":E,"i":[[3,R[330],R[1039],E,N,N],[12,"context",E,E,0,N],[12,"builder",E,E,0,N],[12,R[1044],E,E,0,N],[12,R[1038],E,E,0,N],[12,"state",E,E,0,N],[12,R[1037],E,E,0,N],[12,R[1143],E,E,0,N],[12,"func_sig",E,E,0,N],[12,R[460],E,E,0,N],[12,"locals",E,E,0,N],[12,R[468],E,E,0,N],[12,"ctx",E,E,0,N],[12,R[472],E,E,0,N],[12,R[1045],E,E,0,N],[12,"index",E,E,0,N],[12,R[1046],E,E,0,N],[12,R[478],E,E,0,N],[12,R[16],E,E,0,N],[3,R[327],E,E,N,N],[12,"context",E,E,1,N],[12,"builder",E,E,1,N],[12,R[1038],E,E,1,N],[12,R[465],E,E,1,N],[12,R[460],E,E,1,N],[12,R[1040],E,E,1,N],[12,R[462],E,E,1,N],[12,R[1037],E,E,1,N],[12,R[466],E,E,1,N],[12,R[1041],E,E,1,N],[12,R[16],E,E,1,N],[12,R[1045],E,E,1,N],[12,R[478],E,E,1,N],[12,R[1042],E,E,1,N],[12,R[1043],E,E,1,N],[3,R[1088],E,E,N,N],[12,"callbacks",E,E,2,N],[0,"backend",E,E,N,N],[3,R[1089],R[1077],E,N,N],[12,R[16],E,E,3,N],[12,"buffer",E,E,3,N],[12,"msm",E,E,3,N],[12,"local_func_id_to_offset",E,E,3,N],[3,"LLVMCache",E,E,N,N],[12,"buffer",E,E,4,N],[4,"Buffer",E,E,N,N],[13,"LlvmMemory",E,E,5,N],[13,"Memory",E,E,5,N],[5,"get_callbacks",E,E,N,[[],["callbacks"]]],[5,"module_load",E,E,N,N],[5,"module_delete",E,E,N,N],[5,"get_func_symbol",E,E,N,N],[5,"llvm_backend_get_stack_map_ptr",E,E,N,N],[5,"llvm_backend_get_stack_map_size",E,E,N,N],[5,"llvm_backend_get_code_ptr",E,E,N,N],[5,"llvm_backend_get_code_size",E,E,N,N],[5,R[1066],E,E,N,N],[5,R[1057],E,E,N,N],[5,"throw_any",E,"This should be the same as spliting up the fat pointer…",N,N],[5,"invoke_trampoline",E,E,N,N],[7,"SIGNAL_HANDLER_INSTALLED",E,E,N,N],[11,"new",E,E,3,[[[R[1051]],["rc",["refcell"]],["targetmachine"],[R[1038]],[R[26]],[R[28]],["refcell",[R[16]]]]]],[11,"from_buffer",E,E,3,[[[R[96]]],[[R[0]],[R[2],[R[0]]]]]],[0,"code",R[1039],E,N,N],[3,R[562],R[1078],E,N,N],[12,"message",E,E,6,N],[3,"LLVMModuleCodeGenerator",E,E,N,N],[12,"context",E,E,1,N],[12,"builder",E,E,1,N],[12,R[1038],E,E,1,N],[12,R[465],E,E,1,N],[12,R[460],E,E,1,N],[12,R[1040],E,E,1,N],[12,R[462],E,E,1,N],[12,R[1037],E,E,1,N],[12,R[466],E,E,1,N],[12,R[1041],E,E,1,N],[12,R[16],E,E,1,N],[12,R[1045],E,E,1,N],[12,R[478],E,E,1,N],[12,R[1042],E,E,1,N],[12,R[1043],E,E,1,N],[3,"LLVMFunctionCodeGenerator",E,E,N,N],[12,"context",E,E,0,N],[12,"builder",E,E,0,N],[12,R[1044],E,E,0,N],[12,R[1038],E,E,0,N],[12,"state",E,E,0,N],[12,R[1037],E,E,0,N],[12,R[1143],E,E,0,N],[12,"func_sig",E,E,0,N],[12,R[460],E,E,0,N],[12,"locals",E,E,0,N],[12,R[468],E,E,0,N],[12,"ctx",E,E,0,N],[12,R[472],E,E,0,N],[12,R[1045],E,E,0,N],[12,"index",E,E,0,N],[12,R[1046],E,E,0,N],[12,R[478],E,E,0,N],[12,R[16],E,E,0,N],[5,"func_sig_to_llvm",E,E,N,[[[R[1038]],[R[90]],["context"]],["functiontype"]]],[5,"type_to_llvm",E,E,N,[[[R[1038]],["type"]],["basictypeenum"]]],[5,"splat_vector",E,E,N,[[["vectortype"],["builder"],[R[1038]],[R[1048]],["str"]],["vectorvalue"]]],[5,"trunc_sat",E,E,N,[[["str"],["builder"],[R[1038]],["floatmathtype"],["u64"],["intvalue"]],["intvalue"]]],[5,"trunc_sat_scalar",E,E,N,[[["str"],["builder"],["inttype"],["u64"],["floatvalue"]],["intvalue"]]],[5,"trap_if_not_representable_as_int",E,E,N,[[[R[1047]],["builder"],[R[1038]],["context"],["floatvalue"],["u64"]]]],[5,"trap_if_zero_or_overflow",E,E,N,[[[R[1047]],["builder"],[R[1038]],["context"],["intvalue"]]]],[5,"trap_if_zero",E,E,N,[[[R[1047]],["builder"],[R[1038]],["context"],["intvalue"]]]],[5,"v128_into_int_vec",E,E,N,[[["vectortype"],["builder"],[R[1038]],[R[1048]],[R[1049]]]]],[5,"v128_into_i8x16",E,E,N,[[["builder"],[R[1038]],[R[1048]],[R[1049]]]]],[5,"v128_into_i16x8",E,E,N,[[["builder"],[R[1038]],[R[1048]],[R[1049]]]]],[5,"v128_into_i32x4",E,E,N,[[["builder"],[R[1038]],[R[1048]],[R[1049]]]]],[5,"v128_into_i64x2",E,E,N,[[["builder"],[R[1038]],[R[1048]],[R[1049]]]]],[5,"v128_into_f32x4",E,E,N,[[["builder"],[R[1038]],[R[1048]],[R[1049]]]]],[5,"v128_into_f64x2",E,E,N,[[["builder"],[R[1038]],[R[1048]],[R[1049]]]]],[5,"apply_pending_canonicalization",E,E,N,[[["builder"],[R[1038]],[R[1048]],[R[1049]]],[R[1048]]]],[5,"canonicalize_nans",E,E,N,[[[R[1048]],["builder"],[R[1038]]],[R[1048]]]],[5,"resolve_memory_ptr",E,E,N,[[[R[1047]],["refcell",[R[16]]],["ctxtype"],["state"],["builder"],[R[1038]],[R[491]],["context"],["rc",["refcell"]],[R[1063]],["usize"]],[[R[1050]],[R[2],[R[1050],R[127]]],[R[127]]]]],[5,"emit_stack_map",E,E,N,[[[R[1051]],[R[28]],["state"],[R[1052]],["builder"],[R[1038]],["usize"],["ctxtype"]]]],[5,"finalize_opcode_stack_map",E,E,N,[[[R[1052]],["builder"],[R[1038]],["usize"],[R[1051]]]]],[5,"trap_if_misaligned",E,E,N,[[[R[1047]],["builder"],[R[1038]],[R[491]],["context"],[R[1050]]]]],[5,"callback_trampoline",E,E,N,[[]]],[5,"is_f32_arithmetic",E,E,N,[[["u32"]],["bool"]]],[5,"is_f64_arithmetic",E,E,N,[[["u64"]],["bool"]]],[7,R[1166],E,E,N,N],[17,"LEF32_GEQ_I32_MIN",E,R[1053],N,N],[17,"GEF32_LEQ_I32_MAX",E,R[1054],N,N],[17,"LEF64_GEQ_I32_MIN",E,R[1055],N,N],[17,"GEF64_LEQ_I32_MAX",E,R[1056],N,N],[17,"LEF32_GEQ_U32_MIN",E,R[1053],N,N],[17,"GEF32_LEQ_U32_MAX",E,R[1054],N,N],[17,"LEF64_GEQ_U32_MIN",E,R[1055],N,N],[17,"GEF64_LEQ_U32_MAX",E,R[1056],N,N],[17,"LEF32_GEQ_I64_MIN",E,R[1053],N,N],[17,"GEF32_LEQ_I64_MAX",E,R[1054],N,N],[17,"LEF64_GEQ_I64_MIN",E,R[1055],N,N],[17,"GEF64_LEQ_I64_MAX",E,R[1056],N,N],[17,"LEF32_GEQ_U64_MIN",E,R[1053],N,N],[17,"GEF32_LEQ_U64_MAX",E,R[1054],N,N],[17,"LEF64_GEQ_U64_MIN",E,R[1055],N,N],[17,"GEF64_LEQ_U64_MAX",E,R[1056],N,N],[0,R[1038],R[1039],"Code for dealing with [LLVM][llvm-intrinsics] and VM…",N,N],[3,R[401],R[1060],"Struct containing LLVM and VM intrinsics.",N,N],[12,"ctlz_i32",E,E,7,N],[12,"ctlz_i64",E,E,7,N],[12,"cttz_i32",E,E,7,N],[12,"cttz_i64",E,E,7,N],[12,"ctpop_i32",E,E,7,N],[12,"ctpop_i64",E,E,7,N],[12,"sqrt_f32",E,E,7,N],[12,"sqrt_f64",E,E,7,N],[12,"sqrt_f32x4",E,E,7,N],[12,"sqrt_f64x2",E,E,7,N],[12,"ceil_f32",E,E,7,N],[12,"ceil_f64",E,E,7,N],[12,"floor_f32",E,E,7,N],[12,"floor_f64",E,E,7,N],[12,"trunc_f32",E,E,7,N],[12,"trunc_f64",E,E,7,N],[12,"nearbyint_f32",E,E,7,N],[12,"nearbyint_f64",E,E,7,N],[12,"fabs_f32",E,E,7,N],[12,"fabs_f64",E,E,7,N],[12,"fabs_f32x4",E,E,7,N],[12,"fabs_f64x2",E,E,7,N],[12,"copysign_f32",E,E,7,N],[12,"copysign_f64",E,E,7,N],[12,"sadd_sat_i8x16",E,E,7,N],[12,"sadd_sat_i16x8",E,E,7,N],[12,"uadd_sat_i8x16",E,E,7,N],[12,"uadd_sat_i16x8",E,E,7,N],[12,"ssub_sat_i8x16",E,E,7,N],[12,"ssub_sat_i16x8",E,E,7,N],[12,"usub_sat_i8x16",E,E,7,N],[12,"usub_sat_i16x8",E,E,7,N],[12,"expect_i1",E,E,7,N],[12,"trap",E,E,7,N],[12,"void_ty",E,E,7,N],[12,"i1_ty",E,E,7,N],[12,"i8_ty",E,E,7,N],[12,"i16_ty",E,E,7,N],[12,"i32_ty",E,E,7,N],[12,"i64_ty",E,E,7,N],[12,"i128_ty",E,E,7,N],[12,"f32_ty",E,E,7,N],[12,"f64_ty",E,E,7,N],[12,"i1x128_ty",E,E,7,N],[12,"i8x16_ty",E,E,7,N],[12,"i16x8_ty",E,E,7,N],[12,"i32x4_ty",E,E,7,N],[12,"i64x2_ty",E,E,7,N],[12,"f32x4_ty",E,E,7,N],[12,"f64x2_ty",E,E,7,N],[12,"i8_ptr_ty",E,E,7,N],[12,"i16_ptr_ty",E,E,7,N],[12,"i32_ptr_ty",E,E,7,N],[12,"i64_ptr_ty",E,E,7,N],[12,"i128_ptr_ty",E,E,7,N],[12,"f32_ptr_ty",E,E,7,N],[12,"f64_ptr_ty",E,E,7,N],[12,"anyfunc_ty",E,E,7,N],[12,"i1_zero",E,E,7,N],[12,"i8_zero",E,E,7,N],[12,"i32_zero",E,E,7,N],[12,"i64_zero",E,E,7,N],[12,"i128_zero",E,E,7,N],[12,"f32_zero",E,E,7,N],[12,"f64_zero",E,E,7,N],[12,"f32x4_zero",E,E,7,N],[12,"f64x2_zero",E,E,7,N],[12,"trap_unreachable",E,E,7,N],[12,"trap_call_indirect_sig",E,E,7,N],[12,"trap_call_indirect_oob",E,E,7,N],[12,"trap_memory_oob",E,E,7,N],[12,"trap_illegal_arithmetic",E,E,7,N],[12,"trap_misaligned_atomic",E,E,7,N],[12,"memory_grow_dynamic_local",E,E,7,N],[12,"memory_grow_static_local",E,E,7,N],[12,"memory_grow_shared_local",E,E,7,N],[12,"memory_grow_dynamic_import",E,E,7,N],[12,"memory_grow_static_import",E,E,7,N],[12,"memory_grow_shared_import",E,E,7,N],[12,"memory_size_dynamic_local",E,E,7,N],[12,"memory_size_static_local",E,E,7,N],[12,"memory_size_shared_local",E,E,7,N],[12,"memory_size_dynamic_import",E,E,7,N],[12,"memory_size_static_import",E,E,7,N],[12,"memory_size_shared_import",E,E,7,N],[12,R[1066],E,E,7,N],[12,R[1057],E,E,7,N],[12,"experimental_stackmap",E,E,7,N],[12,"ctx_ptr_ty",E,E,7,N],[3,"TableCache",E,E,N,N],[12,R[1058],E,E,8,N],[12,R[1059],E,E,8,N],[3,R[1090],E,E,N,N],[12,"func_ptr",E,E,9,N],[12,"ctx_ptr",E,E,9,N],[3,"CtxType",E,E,N,N],[12,"ctx_ptr_value",E,E,10,N],[12,"info",E,E,10,N],[12,"cache_builder",E,E,10,N],[12,"cached_signal_mem",E,E,10,N],[12,"cached_memories",E,E,10,N],[12,"cached_tables",E,E,10,N],[12,"cached_sigindices",E,E,10,N],[12,"cached_globals",E,E,10,N],[12,"cached_imported_functions",E,E,10,N],[4,R[1091],E,E,N,N],[13,"Dynamic",E,"The memory moves around.",11,N],[12,R[1058],R[1061],E,11,N],[12,R[1059],E,E,11,N],[12,"minimum",E,E,11,N],[12,"maximum",E,E,11,N],[13,"Static",R[1060],"The memory is always in the same place.",11,N],[12,"base_ptr",R[1061],E,11,N],[12,"bounds",E,E,11,N],[12,"minimum",E,E,11,N],[12,"maximum",E,E,11,N],[4,R[1092],R[1060],E,N,N],[13,"Mut",E,E,12,N],[12,"ptr_to_value",R[1062],E,12,N],[13,"Const",R[1060],E,12,N],[12,"value",R[1062],E,12,N],[5,"type_to_llvm_ptr",R[1060],E,N,[[[R[1038]],["type"]],[R[1063]]]],[5,"offset_to_index",E,E,N,[[["u8"]],["u32"]]],[5,"tbaa_label",E,E,N,[[["instructionvalue"],["rc"],[R[1038]],[R[26],["u32"]],["u32"],["str"]]]],[11,"declare",E,"Create an [`Intrinsics`] for the given [`Context`].",7,[[[R[16]],["context"]],["self"]]],[11,"new",E,E,10,[[[R[28]],[R[1047]],["builder"]],["ctxtype"]]],[11,"basic",E,E,10,[[["self"]],[R[1048]]]],[11,"signal_mem",E,E,10,[[["self"]],[R[1050]]]],[11,R[96],E,E,10,[[["self"],[R[1038]],["refcell",[R[16]]],["rc",["refcell"]],[R[184]]],[R[1083]]]],[11,"table_prepare",E,E,10,[[["self"],[R[1038]],[R[186]],["refcell",[R[16]]],["rc",["refcell"]]]]],[11,"table",E,E,10,[[["self"],["builder"],[R[1038]],[R[186]],["refcell",[R[16]]],["rc",["refcell"]]]]],[11,"dynamic_sigindex",E,E,10,[[["self"],[R[40]],[R[1038]]],["intvalue"]]],[11,"global_cache",E,E,10,[[["self"],[R[1038]],[R[187]],["refcell",[R[16]]],["rc",["refcell"]]],[R[1084]]]],[11,R[1101],E,E,10,[[["self"],[R[1038]],["refcell",[R[16]]],["rc",["refcell"]],[R[47]]]]],[11,"internal_field",E,E,10,[[["self"],["builder"],["usize"],[R[1038]],["refcell",[R[16]]],["rc",["refcell"]]],[R[1050]]]],[0,"platform",R[1039],E,N,N],[0,"common",R[1064],E,N,N],[5,R[1102],"wasmer_llvm_backend::platform::common",E,N,[[["usize"]],["usize"]]],[0,"unix",R[1064],E,N,N],[5,"visit_fde","wasmer_llvm_backend::platform::unix",E,N,[[["usize"]]]],[5,"install_signal_handler",E,E,N,[[]]],[5,R[1103],E,E,N,[[["c_int"]]]],[5,R[1073],E,E,N,[[["usize"],[R[1085]],["usize"]],[R[1065]]]],[5,R[1074],E,E,N,[[["usize"],[R[1085]]],[R[1065]]]],[5,R[1075],E,E,N,[[["usize"]],[R[1065]]]],[5,R[1066],E,E,N,N],[0,"read_info",R[1039],E,N,N],[5,"blocktype_to_type","wasmer_llvm_backend::read_info",E,N,[[["wptypeorfunctype"]],[[R[127]],[R[2],["type",R[127]]],["type"]]]],[0,R[1163],R[1039],E,N,N],[3,R[1093],R[1079],E,N,N],[12,"entries",E,E,13,N],[3,R[1094],E,E,N,N],[12,"kind",E,E,14,N],[12,R[228],E,E,14,N],[12,R[1046],E,E,14,N],[12,"value_semantics",E,E,14,N],[12,"local_count",E,E,14,N],[12,"stack_count",E,E,14,N],[12,"is_start",E,E,14,N],[3,"StackMap",E,E,N,N],[12,"version",E,E,15,N],[12,"stk_size_records",E,E,15,N],[12,"constants",E,E,15,N],[12,"stk_map_records",E,E,15,N],[3,R[1095],E,E,N,N],[12,"function_address",E,E,16,N],[12,"stack_size",E,E,16,N],[12,"record_count",E,E,16,N],[3,"Constant",E,E,N,N],[12,"large_constant",E,E,17,N],[3,R[1096],E,E,N,N],[12,"patchpoint_id",E,E,18,N],[12,"instruction_offset",E,E,18,N],[12,"locations",E,E,18,N],[12,"live_outs",E,E,18,N],[3,"Location",E,E,N,N],[12,"ty",E,E,19,N],[12,"location_size",E,E,19,N],[12,R[1067],E,E,19,N],[12,"offset_or_small_constant",E,E,19,N],[3,"LiveOut",E,E,N,N],[12,R[1067],E,E,20,N],[12,"size_in_bytes",E,E,20,N],[4,R[1097],E,E,N,N],[13,"WasmLocal",E,E,21,N],[13,"WasmStack",E,E,21,N],[13,"Ctx",E,E,21,N],[13,"SignalMem",E,E,21,N],[13,"PointerToMemoryBase",E,E,21,N],[13,"PointerToMemoryBound",E,E,21,N],[13,"MemoryBase",E,E,21,N],[13,"MemoryBound",E,E,21,N],[13,"PointerToGlobal",E,E,21,N],[13,"Global",E,E,21,N],[13,"PointerToTableBase",E,E,21,N],[13,"PointerToTableBound",E,E,21,N],[13,"ImportedFuncPointer",E,E,21,N],[13,"ImportedFuncCtx",E,E,21,N],[13,"DynamicSigindice",E,E,21,N],[4,R[1098],E,E,N,N],[13,"FunctionHeader",E,E,22,N],[13,"Loop",E,E,22,N],[13,"Call",E,E,22,N],[13,"Trappable",E,E,22,N],[4,R[1099],E,E,N,N],[13,"Register",E,E,23,N],[13,"Direct",E,E,23,N],[13,"Indirect",E,E,23,N],[13,"Constant",E,E,23,N],[13,"ConstantIndex",E,E,23,N],[5,"deref_global",E,E,N,[[[R[28]],["usize"],["bool"]],[["vec",["usize"]],["usize"]]]],[5,"deref_table_base",E,E,N,[[[R[28]],["usize"],["bool"]],[["vec",["usize"]],["usize"]]]],[5,"deref_table_bound",E,E,N,[[[R[28]],["usize"],["bool"]],[["vec",["usize"]],["usize"]]]],[11,"populate_msm",E,E,14,[[["self"],[R[26]],[R[28]],[R[24]],[R[1081]],[R[1082]],["usize"],[R[1163]]]]],[11,"parse",E,E,15,[[],[[R[1163]],[R[2],[R[1163]]]]]],[0,"state",R[1039],E,N,N],[3,"ExtraInfo",R[1068],E,N,N],[12,"state",E,E,24,N],[3,"State",E,E,N,N],[12,"stack",E,E,25,N],[12,R[471],E,E,25,N],[12,"value_counter",E,E,25,N],[12,"reachable",E,E,25,N],[4,R[560],E,E,N,N],[13,"Block",E,E,26,N],[12,"next",R[1069],E,26,N],[12,"phis",E,E,26,N],[12,R[1070],E,E,26,N],[13,"Loop",R[1068],E,26,N],[12,"body",R[1069],E,26,N],[12,"next",E,E,26,N],[12,"phis",E,E,26,N],[12,R[1070],E,E,26,N],[13,"IfElse",R[1068],E,26,N],[12,"if_then",R[1069],E,26,N],[12,"if_else",E,E,26,N],[12,"next",E,E,26,N],[12,"phis",E,E,26,N],[12,R[1070],E,E,26,N],[12,"if_else_state",E,E,26,N],[4,R[564],R[1068],E,N,N],[13,"If",E,E,27,N],[13,"Else",E,E,27,N],[11,"code_after",E,E,26,[[["self"]],[R[1072]]]],[11,"br_dest",E,E,26,[[["self"]],[R[1072]]]],[11,"phis",E,E,26,[[["self"]]]],[11,"is_loop",E,E,26,[[["self"]],["bool"]]],[11,"pending_f32_nan",E,E,24,[[],[R[1049]]]],[11,"pending_f64_nan",E,E,24,[[],[R[1049]]]],[11,"arithmetic_f32",E,E,24,[[],[R[1049]]]],[11,"arithmetic_f64",E,E,24,[[],[R[1049]]]],[11,"has_pending_f32_nan",E,E,24,[[["self"]],["bool"]]],[11,"has_pending_f64_nan",E,E,24,[[["self"]],["bool"]]],[11,"is_arithmetic_f32",E,E,24,[[["self"]],["bool"]]],[11,"is_arithmetic_f64",E,E,24,[[["self"]],["bool"]]],[11,"strip_pending",E,E,24,[[["self"]],[R[1049]]]],[11,"new",E,E,25,[[],["self"]]],[11,"reset_stack",E,E,25,[[["self"],[R[1071]]]]],[11,"outermost_frame",E,E,25,[[["self"]],[[R[2],[R[1071],R[127]]],[R[1071]],[R[127]]]]],[11,"frame_at_depth",E,E,25,[[["self"],["u32"]],[[R[2],[R[1071],R[127]]],[R[1071]],[R[127]]]]],[11,"frame_at_depth_mut",E,E,25,[[["self"],["u32"]],[[R[127]],[R[1071]],[R[2],[R[1071],R[127]]]]]],[11,"pop_frame",E,E,25,[[["self"]],[[R[1071]],[R[2],[R[1071],R[127]]],[R[127]]]]],[11,"var_name",E,E,25,[[["self"]],[R[0]]]],[11,"push1",E,E,25,[[["self"],["basicvalue"]]]],[11,"push1_extra",E,E,25,[[["self"],["basicvalue"],[R[1049]]]]],[11,"pop1",E,E,25,[[["self"]],[[R[2],[R[1048],R[127]]],[R[1048]],[R[127]]]]],[11,"pop1_extra",E,E,25,[[["self"]],[[R[127]],[R[2],[R[127]]]]]],[11,"pop2",E,E,25,[[["self"]],[[R[2],[R[127]]],[R[127]]]]],[11,"pop2_extra",E,E,25,[[["self"]],[[R[2],[R[127]]],[R[127]]]]],[11,"pop3_extra",E,E,25,[[["self"]],[[R[2],[R[127]]],[R[127]]]]],[11,"peek1_extra",E,E,25,[[["self"]],[[R[127]],[R[2],[R[127]]]]]],[11,"peekn",E,E,25,[[["self"],["usize"]],[[R[2],["vec",R[127]]],["vec",[R[1048]]],[R[127]]]]],[11,"peekn_extra",E,E,25,[[["self"],["usize"]],[[R[127]],[R[2],[R[127]]]]]],[11,"popn_save_extra",E,E,25,[[["self"],["usize"]],[[R[2],["vec",R[127]]],[R[127]],["vec"]]]],[11,"popn",E,E,25,[[["self"],["usize"]],[[R[2],[R[127]]],[R[127]]]]],[11,"push_block",E,E,25,[[["self"],[R[1072]],["smallvec"]]]],[11,"push_loop",E,E,25,[[["self"],[R[1072]],["smallvec"]]]],[11,"push_if",E,E,25,[[["self"],[R[1072]],["smallvec"]]]],[0,"structs",R[1039],E,N,N],[3,"LLVMModule",R[1080],E,N,N],[12,"_private",E,E,28,N],[3,"Callbacks",E,E,N,N],[12,R[1073],E,E,29,N],[12,R[1074],E,E,29,N],[12,R[1075],E,E,29,N],[12,"lookup_vm_symbol",E,E,29,N],[12,"visit_fde",E,E,29,N],[4,"MemProtect",E,E,N,N],[13,"NONE",E,E,30,N],[13,"READ",E,E,30,N],[13,"READ_WRITE",E,E,30,N],[13,"READ_EXECUTE",E,E,30,N],[4,"LLVMResult",E,E,N,N],[13,"OK",E,E,31,N],[13,"ALLOCATE_FAILURE",E,E,31,N],[13,"PROTECT_FAILURE",E,E,31,N],[13,"DEALLOC_FAILURE",E,E,31,N],[13,"OBJECT_LOAD_FAILURE",E,E,31,N],[0,R[1125],R[1039],E,N,N],[5,"generate_trampolines","wasmer_llvm_backend::trampolines",E,N,[[["builder"],[R[1038]],[R[45]],[R[16]],[R[28]],["context"]],[[R[2],[R[0]]],[R[0]]]]],[5,"generate_trampoline",E,E,N,[[[R[1047]],["builder"],[R[90]],[R[1038]],["context"]],[[R[2],[R[0]]],[R[0]]]]],[6,"LLVMCompiler",R[1039],E,N,N],[6,"InkwellModule",E,E,N,N],[6,"InkwellMemoryBuffer",E,E,N,N],[8,R[1100],E,E,N,N],[11,"preopt_ir_callback",E,E,32,[[["self"],[R[1076]]]]],[11,"postopt_ir_callback",E,E,32,[[["self"],[R[1076]]]]],[11,"obj_memory_buffer_callback",E,E,32,[[["self"],["inkwellmemorybuffer"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[3],E,E,0,[[[U]],[R[2]]]],[11,R[4],E,E,0,[[],[R[2]]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[R[8]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[3],E,E,1,[[[U]],[R[2]]]],[11,R[4],E,E,1,[[],[R[2]]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[R[8]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[3],E,E,2,[[[U]],[R[2]]]],[11,R[4],E,E,2,[[],[R[2]]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[R[8]]]],[11,"from",R[1077],E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[3],E,E,3,[[[U]],[R[2]]]],[11,R[4],E,E,3,[[],[R[2]]]],[11,R[5],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"]],[R[8]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[3],E,E,4,[[[U]],[R[2]]]],[11,R[4],E,E,4,[[],[R[2]]]],[11,R[5],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[7],E,E,4,[[["self"]],[R[8]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[3],E,E,5,[[[U]],[R[2]]]],[11,R[4],E,E,5,[[],[R[2]]]],[11,R[5],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[7],E,E,5,[[["self"]],[R[8]]]],[11,"from",R[1078],E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[3],E,E,6,[[[U]],[R[2]]]],[11,R[4],E,E,6,[[],[R[2]]]],[11,R[5],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[7],E,E,6,[[["self"]],[R[8]]]],[11,"from",R[1060],E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[3],E,E,7,[[[U]],[R[2]]]],[11,R[4],E,E,7,[[],[R[2]]]],[11,R[5],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[7],E,E,7,[[["self"]],[R[8]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[3],E,E,8,[[[U]],[R[2]]]],[11,R[4],E,E,8,[[],[R[2]]]],[11,R[5],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[7],E,E,8,[[["self"]],[R[8]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[3],E,E,9,[[[U]],[R[2]]]],[11,R[4],E,E,9,[[],[R[2]]]],[11,R[5],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[T]]],[11,R[7],E,E,9,[[["self"]],[R[8]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[3],E,E,10,[[[U]],[R[2]]]],[11,R[4],E,E,10,[[],[R[2]]]],[11,R[5],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[T]]],[11,R[7],E,E,10,[[["self"]],[R[8]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[247],E,E,11,[[["self"]],[T]]],[11,R[246],E,E,11,[[["self"],[T]]]],[11,R[3],E,E,11,[[[U]],[R[2]]]],[11,R[4],E,E,11,[[],[R[2]]]],[11,R[5],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[T]]],[11,R[7],E,E,11,[[["self"]],[R[8]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[247],E,E,12,[[["self"]],[T]]],[11,R[246],E,E,12,[[["self"],[T]]]],[11,R[3],E,E,12,[[[U]],[R[2]]]],[11,R[4],E,E,12,[[],[R[2]]]],[11,R[5],E,E,12,[[["self"]],[T]]],[11,R[6],E,E,12,[[["self"]],[T]]],[11,R[7],E,E,12,[[["self"]],[R[8]]]],[11,"from",R[1079],E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[247],E,E,13,[[["self"]],[T]]],[11,R[246],E,E,13,[[["self"],[T]]]],[11,R[3],E,E,13,[[[U]],[R[2]]]],[11,R[4],E,E,13,[[],[R[2]]]],[11,R[5],E,E,13,[[["self"]],[T]]],[11,R[6],E,E,13,[[["self"]],[T]]],[11,R[7],E,E,13,[[["self"]],[R[8]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[247],E,E,14,[[["self"]],[T]]],[11,R[246],E,E,14,[[["self"],[T]]]],[11,R[3],E,E,14,[[[U]],[R[2]]]],[11,R[4],E,E,14,[[],[R[2]]]],[11,R[5],E,E,14,[[["self"]],[T]]],[11,R[6],E,E,14,[[["self"]],[T]]],[11,R[7],E,E,14,[[["self"]],[R[8]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[247],E,E,15,[[["self"]],[T]]],[11,R[246],E,E,15,[[["self"],[T]]]],[11,R[3],E,E,15,[[[U]],[R[2]]]],[11,R[4],E,E,15,[[],[R[2]]]],[11,R[5],E,E,15,[[["self"]],[T]]],[11,R[6],E,E,15,[[["self"]],[T]]],[11,R[7],E,E,15,[[["self"]],[R[8]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[247],E,E,16,[[["self"]],[T]]],[11,R[246],E,E,16,[[["self"],[T]]]],[11,R[3],E,E,16,[[[U]],[R[2]]]],[11,R[4],E,E,16,[[],[R[2]]]],[11,R[5],E,E,16,[[["self"]],[T]]],[11,R[6],E,E,16,[[["self"]],[T]]],[11,R[7],E,E,16,[[["self"]],[R[8]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[247],E,E,17,[[["self"]],[T]]],[11,R[246],E,E,17,[[["self"],[T]]]],[11,R[3],E,E,17,[[[U]],[R[2]]]],[11,R[4],E,E,17,[[],[R[2]]]],[11,R[5],E,E,17,[[["self"]],[T]]],[11,R[6],E,E,17,[[["self"]],[T]]],[11,R[7],E,E,17,[[["self"]],[R[8]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[247],E,E,18,[[["self"]],[T]]],[11,R[246],E,E,18,[[["self"],[T]]]],[11,R[3],E,E,18,[[[U]],[R[2]]]],[11,R[4],E,E,18,[[],[R[2]]]],[11,R[5],E,E,18,[[["self"]],[T]]],[11,R[6],E,E,18,[[["self"]],[T]]],[11,R[7],E,E,18,[[["self"]],[R[8]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[247],E,E,19,[[["self"]],[T]]],[11,R[246],E,E,19,[[["self"],[T]]]],[11,R[3],E,E,19,[[[U]],[R[2]]]],[11,R[4],E,E,19,[[],[R[2]]]],[11,R[5],E,E,19,[[["self"]],[T]]],[11,R[6],E,E,19,[[["self"]],[T]]],[11,R[7],E,E,19,[[["self"]],[R[8]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[247],E,E,20,[[["self"]],[T]]],[11,R[246],E,E,20,[[["self"],[T]]]],[11,R[3],E,E,20,[[[U]],[R[2]]]],[11,R[4],E,E,20,[[],[R[2]]]],[11,R[5],E,E,20,[[["self"]],[T]]],[11,R[6],E,E,20,[[["self"]],[T]]],[11,R[7],E,E,20,[[["self"]],[R[8]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[247],E,E,21,[[["self"]],[T]]],[11,R[246],E,E,21,[[["self"],[T]]]],[11,R[3],E,E,21,[[[U]],[R[2]]]],[11,R[4],E,E,21,[[],[R[2]]]],[11,R[5],E,E,21,[[["self"]],[T]]],[11,R[6],E,E,21,[[["self"]],[T]]],[11,R[7],E,E,21,[[["self"]],[R[8]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[247],E,E,22,[[["self"]],[T]]],[11,R[246],E,E,22,[[["self"],[T]]]],[11,R[3],E,E,22,[[[U]],[R[2]]]],[11,R[4],E,E,22,[[],[R[2]]]],[11,R[5],E,E,22,[[["self"]],[T]]],[11,R[6],E,E,22,[[["self"]],[T]]],[11,R[7],E,E,22,[[["self"]],[R[8]]]],[11,R[248],E,E,22,[[["self"],["k"]],["bool"]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[247],E,E,23,[[["self"]],[T]]],[11,R[246],E,E,23,[[["self"],[T]]]],[11,R[3],E,E,23,[[[U]],[R[2]]]],[11,R[4],E,E,23,[[],[R[2]]]],[11,R[5],E,E,23,[[["self"]],[T]]],[11,R[6],E,E,23,[[["self"]],[T]]],[11,R[7],E,E,23,[[["self"]],[R[8]]]],[11,"from",R[1068],E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[247],E,E,24,[[["self"]],[T]]],[11,R[246],E,E,24,[[["self"],[T]]]],[11,R[3],E,E,24,[[[U]],[R[2]]]],[11,R[4],E,E,24,[[],[R[2]]]],[11,R[5],E,E,24,[[["self"]],[T]]],[11,R[6],E,E,24,[[["self"]],[T]]],[11,R[7],E,E,24,[[["self"]],[R[8]]]],[11,R[248],E,E,24,[[["self"],["k"]],["bool"]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[3],E,E,25,[[[U]],[R[2]]]],[11,R[4],E,E,25,[[],[R[2]]]],[11,R[5],E,E,25,[[["self"]],[T]]],[11,R[6],E,E,25,[[["self"]],[T]]],[11,R[7],E,E,25,[[["self"]],[R[8]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[3],E,E,26,[[[U]],[R[2]]]],[11,R[4],E,E,26,[[],[R[2]]]],[11,R[5],E,E,26,[[["self"]],[T]]],[11,R[6],E,E,26,[[["self"]],[T]]],[11,R[7],E,E,26,[[["self"]],[R[8]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[3],E,E,27,[[[U]],[R[2]]]],[11,R[4],E,E,27,[[],[R[2]]]],[11,R[5],E,E,27,[[["self"]],[T]]],[11,R[6],E,E,27,[[["self"]],[T]]],[11,R[7],E,E,27,[[["self"]],[R[8]]]],[11,"from",R[1080],E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[3],E,E,28,[[[U]],[R[2]]]],[11,R[4],E,E,28,[[],[R[2]]]],[11,R[5],E,E,28,[[["self"]],[T]]],[11,R[6],E,E,28,[[["self"]],[T]]],[11,R[7],E,E,28,[[["self"]],[R[8]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[3],E,E,29,[[[U]],[R[2]]]],[11,R[4],E,E,29,[[],[R[2]]]],[11,R[5],E,E,29,[[["self"]],[T]]],[11,R[6],E,E,29,[[["self"]],[T]]],[11,R[7],E,E,29,[[["self"]],[R[8]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[247],E,E,30,[[["self"]],[T]]],[11,R[246],E,E,30,[[["self"],[T]]]],[11,R[3],E,E,30,[[[U]],[R[2]]]],[11,R[4],E,E,30,[[],[R[2]]]],[11,R[5],E,E,30,[[["self"]],[T]]],[11,R[6],E,E,30,[[["self"]],[T]]],[11,R[7],E,E,30,[[["self"]],[R[8]]]],[11,R[248],E,E,30,[[["self"],["k"]],["bool"]]],[11,"from",E,E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[247],E,E,31,[[["self"]],[T]]],[11,R[246],E,E,31,[[["self"],[T]]]],[11,R[3],E,E,31,[[[U]],[R[2]]]],[11,R[4],E,E,31,[[],[R[2]]]],[11,R[5],E,E,31,[[["self"]],[T]]],[11,R[6],E,E,31,[[["self"]],[T]]],[11,R[7],E,E,31,[[["self"]],[R[8]]]],[11,R[248],E,E,31,[[["self"],["k"]],["bool"]]],[11,"from",R[1078],E,6,[[[R[127]]],[R[485]]]],[11,"drop",R[1077],E,3,[[["self"]]]],[11,"drop",R[1039],E,1,[[["self"]]]],[11,R[285],R[1079],E,13,[[],[R[1051]]]],[11,R[285],E,E,15,[[],[R[1163]]]],[11,R[285],E,E,16,[[],[R[1081]]]],[11,R[285],E,E,17,[[],["constant"]]],[11,R[285],E,E,18,[[],[R[1082]]]],[11,R[285],E,E,20,[[],["liveout"]]],[11,R[285],R[1068],E,24,[[],[R[1049]]]],[11,"clone",R[1060],E,11,[[["self"]],[R[1083]]]],[11,"clone",E,E,12,[[["self"]],[R[1084]]]],[11,"clone",R[1079],E,13,[[["self"]],[R[1051]]]],[11,"clone",E,E,14,[[["self"]],["stackmapentry"]]],[11,"clone",E,E,21,[[["self"]],["valuesemantic"]]],[11,"clone",E,E,22,[[["self"]],[R[1052]]]],[11,"clone",E,E,15,[[["self"]],[R[1163]]]],[11,"clone",E,E,16,[[["self"]],[R[1081]]]],[11,"clone",E,E,17,[[["self"]],["constant"]]],[11,"clone",E,E,18,[[["self"]],[R[1082]]]],[11,"clone",E,E,19,[[["self"]],[R[483]]]],[11,"clone",E,E,20,[[["self"]],["liveout"]]],[11,"clone",E,E,23,[[["self"]],["locationtype"]]],[11,"clone",R[1068],E,24,[[["self"]],[R[1049]]]],[11,"clone",R[1080],E,30,[[["self"]],[R[1085]]]],[11,"clone",E,E,31,[[["self"]],[R[1065]]]],[11,"eq",R[1079],E,22,[[["self"],[R[1052]]],["bool"]]],[11,"eq",R[1068],E,24,[[["self"],[R[1049]]],["bool"]]],[11,"ne",E,E,24,[[["self"],[R[1049]]],["bool"]]],[11,"eq",R[1080],E,30,[[["self"],[R[1085]]],["bool"]]],[11,"eq",E,E,31,[[["self"],[R[1065]]],["bool"]]],[11,R[303],R[1079],E,22,[[["self"]]]],[11,R[303],R[1068],E,24,[[["self"]]]],[11,R[303],R[1080],E,30,[[["self"]]]],[11,R[303],E,E,31,[[["self"]]]],[11,"deref",R[1077],E,5,[[["self"]]]],[11,"fmt",R[1078],E,6,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",R[1079],E,13,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,14,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,21,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,22,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,15,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,16,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,17,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,18,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,19,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,20,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,23,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",R[1068],E,26,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,27,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,24,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,25,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",R[1080],E,30,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,31,[[["self"],[R[304]]],[R[2]]]],[11,"bitand",R[1068],E,24,[[],["self"]]],[11,"bitor",E,E,24,[[],["self"]]],[11,"bitor_assign",E,E,24,[[["self"]]]],[11,"hash",E,E,24,[[["self"],["__h"]]]],[11,"get_func",R[1077],E,3,[[["self"],[R[28]],[R[39]]],[[R[89],["func"]],[R[26],[R[89]]]]]],[11,R[162],E,E,3,[[["self"],[R[28]],[R[40]]],[[R[26],["wasm"]],["wasm"]]]],[11,"get_code",E,E,3,[[["self"]],[R[26]]]],[11,R[539],E,E,3,[[["self"]],[["vec",["usize"]],[R[26],["vec"]]]]],[11,R[533],E,E,3,[[["self"]],[[R[26],[R[24]]],[R[24]]]]],[11,R[537],E,E,3,[[["self"],["box",["any"]],["any"]]]],[11,R[544],E,E,4,[[["self"]],[[R[18]],[R[2],[R[18]]]]]],[11,"new",R[1039],E,1,[[],[R[1086]]]],[11,R[546],E,E,1,[[[R[0]],[R[26],[R[0]]]],[R[1086]]]],[11,R[238],E,E,1,[[],["str"]]],[11,R[547],E,E,1,[[["self"],[R[28]]],[[R[485]],[R[2],[R[485]]]]]],[11,R[548],E,E,1,[[["self"],["rwlock",[R[28]]],["arc",["rwlock"]]],[[R[1087]],[R[485]],[R[2],[R[1087],R[485]]]]]],[11,R[58],E,E,1,[[[R[28]]],[[R[485]],[R[2],[R[485]]]]]],[11,R[553],E,E,1,[[["self"],[R[21]]],[[R[485]],[R[2],[R[485]]]]]],[11,R[550],E,E,1,[[["self"],[R[40]],[R[90]],["map",[R[40],R[90]]]],[[R[485]],[R[2],[R[485]]]]]],[11,R[551],E,E,1,[[["self"],[R[40]],[R[54]],["map",[R[54],R[40]]]],[[R[485]],[R[2],[R[485]]]]]],[11,R[552],E,E,1,[[["self"]],[[R[485]],[R[2],[R[485]]]]]],[11,R[55],E,E,1,[[[R[23]],["token"]],[[R[18]],[R[22]],[R[2],[R[22],R[18]]]]]],[11,R[554],E,E,0,[[["self"],["wptype"]],[[R[485]],[R[2],[R[485]]]]]],[11,R[555],E,E,0,[[["self"],["wptype"]],[[R[485]],[R[2],[R[485]]]]]],[11,R[556],E,E,0,[[["self"],["wptype"],["usize"]],[[R[485]],[R[2],[R[485]]]]]],[11,R[557],E,E,0,[[["self"],[R[28]]],[[R[485]],[R[2],[R[485]]]]]],[11,R[56],E,E,0,[[["self"],["event"],[R[28]]],[[R[485]],[R[2],[R[485]]]]]],[11,R[58],E,E,0,[[["self"]],[[R[485]],[R[2],[R[485]]]]]]],"p":[[3,R[330]],[3,R[327]],[3,R[1088]],[3,R[1089]],[3,"LLVMCache"],[4,"Buffer"],[3,R[562]],[3,R[401]],[3,"TableCache"],[3,R[1090]],[3,"CtxType"],[4,R[1091]],[4,R[1092]],[3,R[1093]],[3,R[1094]],[3,"StackMap"],[3,R[1095]],[3,"Constant"],[3,R[1096]],[3,"Location"],[3,"LiveOut"],[4,R[1097]],[4,R[1098]],[4,R[1099]],[3,"ExtraInfo"],[3,"State"],[4,R[560]],[4,R[564]],[3,"LLVMModule"],[3,"Callbacks"],[4,"MemProtect"],[4,"LLVMResult"],[8,R[1100]]]};
searchIndex["wasmer_llvm_backend_tests"]={"doc":E,"i":[[5,"wat2wasm","wasmer_llvm_backend_tests",R[1497],N,[[["s"]],[["error"],["vec",["u8"]],[R[2],["vec","error"]]]]],[5,R[1498],E,E,N,[[]]]],"p":[]};
searchIndex["wasmer_middleware_common"]={"doc":E,"i":[[0,"block_trace",R[571],E,N,N],[3,R[575],R[572],E,N,N],[12,"func_idx",E,E,0,N],[12,"evt_idx",E,E,0,N],[11,"new",E,E,0,[[],["blocktrace"]]],[0,"call_trace",R[571],E,N,N],[3,R[576],R[573],E,N,N],[12,"counter",E,E,1,N],[11,"new",E,E,1,[[],["calltrace"]]],[0,"metering",R[571],E,N,N],[3,"Metering",R[574],"Metering is a compiler middleware that calculates the cost…",N,N],[12,"limit",E,E,2,N],[12,"current_block",E,E,2,N],[3,R[577],E,E,N,N],[5,"get_points_used",E,"Returns the number of points used by an Instance.",N,[[[R[92]]],["u64"]]],[5,"set_points_used",E,"Sets the number of points used by an Instance.",N,[[[R[92]],["u64"]]]],[5,"get_points_used_ctx",E,"Returns the number of points used in a Ctx.",N,[[["ctx"]],["u64"]]],[5,"set_points_used_ctx",E,"Sets the number of points used in a Ctx.",N,[[["ctx"],["u64"]]]],[7,"INTERNAL_FIELD",E,E,N,N],[11,"new",E,E,2,[[["u64"]],["metering"]]],[11,"from",R[572],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[3],E,E,0,[[[U]],[R[2]]]],[11,R[4],E,E,0,[[],[R[2]]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[R[8]]]],[11,"from",R[573],E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[3],E,E,1,[[[U]],[R[2]]]],[11,R[4],E,E,1,[[],[R[2]]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[R[8]]]],[11,"from",R[574],E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[3],E,E,2,[[[U]],[R[2]]]],[11,R[4],E,E,2,[[],[R[2]]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[R[8]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[247],E,E,3,[[["self"]],[T]]],[11,R[246],E,E,3,[[["self"],[T]]]],[11,R[3],E,E,3,[[[U]],[R[2]]]],[11,R[4],E,E,3,[[],[R[2]]]],[11,R[5],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"]],[R[8]]]],[11,"clone",E,E,3,[[["self"]],["executionlimitexceedederror"]]],[11,"fmt",E,E,3,[[["self"],[R[304]]],[R[2]]]],[11,R[56],R[572],E,0,[[["self"],["event"],[R[57]],[R[28]]],[R[2]]]],[11,R[56],R[573],E,1,[[["self"],["event"],[R[57]],[R[28]]],[R[2]]]],[11,R[56],R[574],E,2,[[["self"],["event"],[R[57]],[R[28]]],[R[2]]]]],"p":[[3,R[575]],[3,R[576]],[3,"Metering"],[3,R[577]]]};
searchIndex["wasmer_middleware_common_tests"]={"doc":E,"i":[],"p":[]};
searchIndex["wasmer_runtime"]={"doc":"Wasmer-runtime is a library that makes embedding…","i":[[4,R[315],R[1171],R[1220],N,N],[13,R[166],E,R[1221],0,N],[13,"Arithmetic",E,R[1222],0,N],[13,"Memory",E,R[1223],0,N],[3,"Features",E,R[1209],N,N],[12,"simd",E,R[1210],1,N],[12,"threads",E,R[1211],1,N],[3,R[325],E,R[1249],N,N],[12,"chain",E,E,2,N],[3,R[322],E,R[1247],N,N],[12,R[1248],E,E,3,N],[12,R[50],E,E,3,N],[12,R[51],E,E,3,N],[12,R[52],E,E,3,N],[12,R[53],E,E,3,N],[4,"Export",E,R[1336],N,N],[13,"Function",E,R[1337],4,N],[12,"func","wasmer_runtime::Export",R[1338],4,N],[12,"ctx",E,R[1339],4,N],[12,R[79],E,R[1340],4,N],[13,"Memory",R[1171],R[1341],4,N],[13,"Table",E,R[1342],4,N],[13,"Global",E,R[1343],4,N],[3,"Global",E,R[1173],N,N],[12,"desc",E,E,5,N],[12,"storage",E,E,5,N],[3,R[338],E,R[1350],N,N],[12,"map",E,E,6,N],[12,R[1351],E,E,6,N],[12,R[1352],E,R[1353],6,N],[8,R[341],E,R[1354],N,N],[10,R[272],E,R[1355],7,[[["self"],["str"]],[[R[26],[R[81]]],[R[81]]]]],[10,R[273],E,R[1356],7,[[["self"]],["vec"]]],[10,R[274],E,R[1357],7,[[["self"],["str"],[R[81]]],[R[26]]]],[3,"DynFunc",E,R[86],N,N],[12,R[79],E,E,8,N],[12,R[16],E,E,8,N],[12,R[87],E,E,8,N],[12,R[88],E,E,8,N],[3,R[82],E,R[83],N,N],[12,R[16],E,R[84],9,N],[12,"inner",E,E,9,N],[12,R[85],E,E,9,N],[3,"Array",E,"Array.",N,N],[3,"Item",E,"Item.",N,N],[3,"WasmPtr",E,R[1384],N,N],[12,"offset",E,E,10,N],[12,R[98],E,E,10,N],[3,"Memory",E,R[1172],N,N],[12,"desc",E,E,11,N],[12,"variant",E,E,11,N],[3,"Module",E,R[123],N,N],[12,"inner",E,E,12,N],[3,"Table",E,R[1174],N,N],[12,"desc",E,E,13,N],[12,"storage",E,E,13,N],[4,"Value",E,R[1175],N,N],[13,"I32",E,R[173],14,N],[13,"I64",E,R[174],14,N],[13,"F32",E,R[175],14,N],[13,"F64",E,R[176],14,N],[13,"V128",E,R[177],14,N],[3,"Ctx",E,R[1451],N,N],[12,R[99],E,R[1452],15,N],[12,R[198],E,E,15,N],[12,R[1453],E,R[1454],15,N],[12,R[200],E,R[1455],15,N],[12,R[16],E,R[1456],15,N],[12,"data",E,R[1457],15,N],[12,R[1458],E,R[1459],15,N],[3,"Func",E,R[164],N,N],[12,"inner",E,E,16,N],[12,"func",E,E,16,N],[12,R[205],E,E,16,N],[12,"vmctx",E,E,16,N],[12,R[98],E,E,16,N],[5,R[1205],E,R[1206],N,[[[R[15]]],[[R[2],[R[16],R[279]]],[R[279]],[R[16]]]]],[5,"validate",E,R[1208],N,[[],["bool"]]],[14,"func",E,R[1495],N,N],[14,"imports",E,R[1496],N,N],[5,R[1487],E,R[1488],N,[[],[[R[26],[R[219]]],[R[219]]]]],[5,R[1485],E,R[1486],N,[[[R[219]]]]],[3,R[419],E,R[1489],N,N],[12,"baseline",E,R[1490],17,N],[12,"msm",E,R[1491],17,N],[12,"base",E,R[1492],17,N],[12,"backend",E,R[1493],17,N],[12,R[229],E,R[1494],17,N],[8,"Compiler",E,E,N,N],[10,"compile",E,R[1224],18,[[["self"],[R[21]],["token"]],[[R[22]],[R[279]],[R[2],[R[22],R[279]]]]]],[10,R[55],E,E,18,[[["self"],["token"],[R[23]]],[[R[2],[R[22],"error"]],["error"],[R[22]]]]],[3,R[310],E,R[1212],N,N],[12,"symbol_map",E,R[1213],19,N],[12,R[476],E,R[1214],19,N],[12,R[477],E,R[1215],19,N],[12,R[478],E,R[1216],19,N],[12,R[479],E,R[1217],19,N],[12,R[19],E,E,19,N],[12,"triple",E,E,19,N],[12,"cpu_name",E,E,19,N],[12,R[1218],E,E,19,N],[12,R[1219],E,E,19,N],[4,"Backend",E,"Enum used to select which compiler should be used to…",N,N],[13,"Singlepass",E,"Singlepass backend",20,N],[13,"Cranelift",E,"Cranelift backend",20,N],[13,"LLVM",E,"LLVM backend",20,N],[13,"Auto",E,"Auto backend",20,N],[5,"compile",E,"Compile WebAssembly binary code into a [`Module`]. This…",N,[[],[[R[17],[R[16]]],[R[16]]]]],[5,R[1207],E,"The same as `compile` but takes a `CompilerConfig` for the…",N,[[[R[21]]],[[R[17],[R[16]]],[R[16]]]]],[5,R[1580],E,R[1581],N,[[[R[21]],[R[15]]],[[R[17],[R[16]]],[R[16]]]]],[5,R[1203],E,"Compile and instantiate WebAssembly code without creating…",N,[[[R[37]]],[[R[2],[R[92]]],[R[92]]]]],[5,"default_compiler",E,"Get a single instance of the default compiler to use.",N,[[]]],[5,"compiler_for_backend",E,"Get the `Compiler` as a trait object for the given…",N,[[["backend"]],[[R[26],["box"]],["box",[R[15]]]]]],[0,R[96],E,R[1383],N,N],[3,R[113],R[1195],R[114],N,N],[3,"Memory",E,R[1172],N,N],[12,"desc",E,E,11,N],[12,"variant",E,E,11,N],[3,R[115],E,R[116],N,N],[12,"ptr",E,E,21,N],[12,"length",E,E,21,N],[12,R[98],E,E,21,N],[0,"wasm",R[1171],"Various types exposed by the Wasmer Runtime.",N,N],[3,"Global",R[1194],R[1173],N,N],[12,"desc",E,E,5,N],[12,"storage",E,E,5,N],[3,"Table",E,R[1174],N,N],[12,"desc",E,E,13,N],[12,"storage",E,E,13,N],[3,"FuncSig",E,R[1193],N,N],[12,"params",E,E,22,N],[12,R[467],E,E,22,N],[3,R[378],E,R[1186],N,N],[12,"mutable",E,R[1187],23,N],[12,"ty",E,R[1411],23,N],[3,R[380],E,R[1188],N,N],[12,"minimum",E,R[1189],24,N],[12,"maximum",E,R[1190],24,N],[12,"shared",E,R[1191],24,N],[12,R[178],E,R[1192],24,N],[3,R[377],E,R[1182],N,N],[12,"element",E,R[1183],25,N],[12,"minimum",E,R[1184],25,N],[12,"maximum",E,R[1185],25,N],[4,"Type",E,R[1181],N,N],[13,"I32",E,R[173],26,N],[13,"I64",E,R[174],26,N],[13,"F32",E,R[175],26,N],[13,"F64",E,R[176],26,N],[13,"V128",E,R[177],26,N],[4,"Value",E,R[1175],N,N],[13,"I32",E,R[173],14,N],[13,"I64",E,R[174],14,N],[13,"F32",E,R[175],14,N],[13,"F64",E,R[176],14,N],[13,"V128",E,R[177],14,N],[0,"error",R[1171],R[1254],N,N],[4,"CacheError",R[1176],R[1228],N,N],[13,"IoError",E,R[1229],27,N],[13,R[1230],E,R[1231],27,N],[13,R[1232],E,R[1233],27,N],[13,"Unknown",E,R[1234],27,N],[13,R[1235],E,R[1236],27,N],[13,R[1237],E,R[1238],27,N],[13,R[1239],E,R[1240],27,N],[6,"Result",E,R[239],N,N],[6,R[1326],E,R[1327],N,N],[6,"LinkResult",E,R[1328],N,N],[6,R[1329],E,R[1330],N,N],[6,"CallResult",E,R[1331],N,N],[6,R[1332],E,R[1333],N,N],[6,R[1334],E,R[1335],N,N],[4,R[70],E,R[1255],N,N],[13,R[1256],E,R[1257],28,N],[12,"msg",R[1177],R[61],28,N],[13,R[1258],R[1176],R[1259],28,N],[12,"msg",R[1177],R[61],28,N],[4,R[71],R[1176],R[1260],N,N],[13,R[1261],E,R[1262],29,N],[12,R[62],R[1178],R[64],29,N],[12,"name",E,"Name.",29,N],[12,R[65],E,R[66],29,N],[12,"found",E,R[67],29,N],[13,R[1263],R[1176],R[1264],29,N],[12,R[62],R[1178],R[64],29,N],[12,"name",E,"Name.",29,N],[12,R[65],E,R[66],29,N],[12,"found",E,R[67],29,N],[13,R[1265],R[1176],R[1266],29,N],[12,R[62],R[1178],R[64],29,N],[12,"name",E,"Name.",29,N],[13,R[1267],R[1176],R[1268],29,N],[12,R[62],R[1178],R[64],29,N],[12,"name",E,"Name.",29,N],[12,R[65],E,R[66],29,N],[12,"found",E,R[67],29,N],[13,R[1269],R[1176],R[1270],29,N],[12,R[62],R[1178],R[64],29,N],[12,"name",E,"Name.",29,N],[12,R[65],E,R[66],29,N],[12,"found",E,R[67],29,N],[13,R[1271],R[1176],R[1272],29,N],[12,R[62],R[1178],R[64],29,N],[12,"name",E,"Name.",29,N],[12,R[65],E,R[66],29,N],[12,"found",E,R[67],29,N],[13,"Generic",R[1176],R[1273],29,N],[12,"message",R[1178],R[1274],29,N],[4,R[72],R[1176],R[1275],N,N],[13,"Trap",E,"Trap.",30,N],[12,"msg",R[1179],R[1276],30,N],[13,"Error",R[1176],"Error.",30,N],[12,"data",R[1179],R[1277],30,N],[4,R[73],R[1176],R[1278],N,N],[13,"Signature",E,R[1279],31,N],[12,R[65],R[1180],R[1280],31,N],[12,"found",E,R[1281],31,N],[13,R[1282],R[1176],R[1283],31,N],[12,"name",R[1180],"Name.",31,N],[13,R[1284],R[1176],R[1285],31,N],[12,"name",R[1180],"Name.",31,N],[4,R[74],R[1176],R[1286],N,N],[13,"Resolve",E,R[1287],32,N],[13,"Runtime",E,R[1288],32,N],[4,R[75],E,R[1289],N,N],[13,R[1290],E,R[1291],33,N],[13,R[1292],E,R[1293],33,N],[13,R[1294],E,R[1295],33,N],[4,"Error",E,R[1296],N,N],[13,R[70],E,R[1297],34,N],[13,R[71],E,R[1298],34,N],[13,R[72],E,R[1299],34,N],[13,R[73],E,R[1300],34,N],[13,R[74],E,R[1301],34,N],[13,R[75],E,R[1302],34,N],[4,R[331],E,R[1303],N,N],[13,R[1304],E,R[1305],35,N],[13,R[1306],E,R[1307],35,N],[13,R[76],E,R[1308],35,N],[13,R[1309],E,R[1310],35,N],[13,R[1311],E,R[77],35,N],[13,R[1312],E,R[1313],35,N],[4,R[332],E,R[1314],N,N],[13,R[76],E,R[1315],36,N],[4,R[333],E,R[1316],N,N],[13,R[1317],E,R[1318],37,N],[13,R[1319],E,R[1320],37,N],[4,R[334],E,R[77],N,N],[13,R[1321],E,R[1322],38,N],[4,R[335],E,R[1323],N,N],[13,R[1324],E,R[1325],39,N],[0,"units",R[1171],"Various unit types.",N,N],[3,"Bytes",R[1197],R[1447],N,N],[12,"0",E,E,40,N],[3,"Pages",E,R[1446],N,N],[12,"0",E,E,41,N],[0,"types",R[1171],"Types used in the Wasm runtime and conversion functions.",N,N],[4,"Type",R[1196],R[1181],N,N],[13,"I32",E,R[173],26,N],[13,"I64",E,R[174],26,N],[13,"F32",E,R[175],26,N],[13,"F64",E,R[176],26,N],[13,"V128",E,R[177],26,N],[4,"Value",E,R[1175],N,N],[13,"I32",E,R[173],14,N],[13,"I64",E,R[174],14,N],[13,"F32",E,R[175],14,N],[13,"F64",E,R[176],14,N],[13,"V128",E,R[177],14,N],[8,R[396],E,R[1422],N,N],[18,"TYPE",E,R[1423],42,N],[10,R[1424],E,R[1425],42,[[["u64"]],["self"]]],[10,"to_binary",E,R[1426],42,[[],["u64"]]],[8,R[397],E,R[1427],N,N],[16,"Native",E,R[1428],43,N],[10,R[276],E,R[1429],43,[[],["self"]]],[10,R[275],E,R[1430],43,[[]]],[8,"ValueType",E,R[1431],N,N],[4,R[393],E,R[1416],N,N],[13,R[206],E,R[1417],44,N],[3,R[377],E,R[1182],N,N],[12,"element",E,R[1183],25,N],[12,"minimum",E,R[1184],25,N],[12,"maximum",E,R[1185],25,N],[4,R[394],E,R[1418],N,N],[13,"Const",E,R[1419],45,N],[13,"GetGlobal",E,R[1420],45,N],[3,R[378],E,R[1186],N,N],[12,"mutable",E,R[1187],23,N],[12,"ty",E,R[1411],23,N],[3,R[379],E,R[1412],N,N],[12,"desc",E,R[1413],46,N],[12,"init",E,R[1414],46,N],[3,R[380],E,R[1188],N,N],[12,"minimum",E,R[1189],24,N],[12,"maximum",E,R[1190],24,N],[12,"shared",E,R[1191],24,N],[12,R[178],E,R[1192],24,N],[3,"FuncSig",E,R[1193],N,N],[12,"params",E,E,22,N],[12,R[467],E,E,22,N],[8,R[398],E,R[1432],N,N],[16,"Local",E,R[1433],47,N],[16,"Import",E,R[1434],47,N],[3,R[381],E,R[172],N,N],[12,"0",E,E,48,N],[3,R[382],E,R[172],N,N],[12,"0",E,E,49,N],[3,R[383],E,R[172],N,N],[12,"0",E,E,50,N],[3,R[384],E,R[172],N,N],[12,"0",E,E,51,N],[3,R[385],E,R[172],N,N],[12,"0",E,E,52,N],[3,R[386],E,R[172],N,N],[12,"0",E,E,53,N],[3,R[387],E,R[172],N,N],[12,"0",E,E,54,N],[3,R[388],E,R[172],N,N],[12,"0",E,E,55,N],[3,R[389],E,R[172],N,N],[12,"0",E,E,56,N],[3,R[390],E,R[172],N,N],[12,"0",E,E,57,N],[3,R[391],E,R[172],N,N],[12,"0",E,E,58,N],[3,R[392],E,R[172],N,N],[12,"0",E,E,59,N],[3,"SigIndex",E,R[1415],N,N],[12,"0",E,E,60,N],[4,R[395],E,R[1421],N,N],[13,"Local",E,"Local.",61,N],[13,"Import",E,"Import.",61,N],[0,"cache",R[1171],R[1225],N,N],[3,"Artifact",R[1198],R[1227],N,N],[12,"inner",E,E,62,N],[3,"WasmHash",E,R[1226],N,N],[12,"0",E,E,63,N],[3,R[1204],E,"Representation of a directory that contains compiled wasm…",N,N],[12,"path",E,E,64,N],[8,"Cache",E,"A generic cache for storing and loading compiled wasm…",N,N],[16,R[363],E,"Error type to return when load error occurs",65,N],[16,"StoreError",E,"Error type to return when store error occurs",65,N],[10,"load",E,"loads a module using the default `Backend`",65,[[["self"],[R[297]]],[[R[2],[R[16]]],[R[16]]]]],[10,R[1201],E,"loads a cached module using a specific `Backend`",65,[[["self"],[R[297]],["backend"]],[[R[2],[R[16]]],[R[16]]]]],[10,"store",E,"Store a module into the cache with the given key",65,[[["self"],[R[297]],[R[16]]],[R[2]]]],[11,"new",E,"Construct a new `FileSystemCache` around the specified…",64,[[["into",[R[618]]],[R[618]]],[R[2]]]],[17,"_IMPL_SERIALIZE_FOR_Backend",R[1171],E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Backend",E,E,N,N],[17,"VERSION",E,"The current version of this crate.",N,N],[11,"variants",E,"Get a list of the currently enabled (via feature flag)…",20,[[]]],[11,R[252],E,"Stable string representation of the backend. It can be…",20,[[["self"]],["str"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[247],E,E,0,[[["self"]],[T]]],[11,R[246],E,E,0,[[["self"],[T]]]],[11,R[3],E,E,0,[[[U]],[R[2]]]],[11,R[4],E,E,0,[[],[R[2]]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[R[8]]]],[11,R[248],E,E,0,[[["self"],["k"]],["bool"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[3],E,E,1,[[[U]],[R[2]]]],[11,R[4],E,E,1,[[],[R[2]]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[R[8]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[3],E,E,2,[[[U]],[R[2]]]],[11,R[4],E,E,2,[[],[R[2]]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[R[8]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[3],E,E,3,[[[U]],[R[2]]]],[11,R[4],E,E,3,[[],[R[2]]]],[11,R[5],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"]],[R[8]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[247],E,E,4,[[["self"]],[T]]],[11,R[246],E,E,4,[[["self"],[T]]]],[11,R[3],E,E,4,[[[U]],[R[2]]]],[11,R[4],E,E,4,[[],[R[2]]]],[11,R[5],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[7],E,E,4,[[["self"]],[R[8]]]],[11,"from",R[1194],E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[247],E,E,5,[[["self"]],[T]]],[11,R[246],E,E,5,[[["self"],[T]]]],[11,R[3],E,E,5,[[[U]],[R[2]]]],[11,R[4],E,E,5,[[],[R[2]]]],[11,R[5],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[7],E,E,5,[[["self"]],[R[8]]]],[11,"from",R[1171],E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[255],E,E,6,[[],["i"]]],[11,R[3],E,E,6,[[[U]],[R[2]]]],[11,R[4],E,E,6,[[],[R[2]]]],[11,R[5],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[7],E,E,6,[[["self"]],[R[8]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[3],E,E,8,[[[U]],[R[2]]]],[11,R[4],E,E,8,[[],[R[2]]]],[11,R[5],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[7],E,E,8,[[["self"]],[R[8]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[3],E,E,9,[[[U]],[R[2]]]],[11,R[4],E,E,9,[[],[R[2]]]],[11,R[5],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[T]]],[11,R[7],E,E,9,[[["self"]],[R[8]]]],[11,"from",E,E,66,[[[T]],[T]]],[11,"into",E,E,66,[[],[U]]],[11,R[3],E,E,66,[[[U]],[R[2]]]],[11,R[4],E,E,66,[[],[R[2]]]],[11,R[5],E,E,66,[[["self"]],[T]]],[11,R[6],E,E,66,[[["self"]],[T]]],[11,R[7],E,E,66,[[["self"]],[R[8]]]],[11,"from",E,E,67,[[[T]],[T]]],[11,"into",E,E,67,[[],[U]]],[11,R[3],E,E,67,[[[U]],[R[2]]]],[11,R[4],E,E,67,[[],[R[2]]]],[11,R[5],E,E,67,[[["self"]],[T]]],[11,R[6],E,E,67,[[["self"]],[T]]],[11,R[7],E,E,67,[[["self"]],[R[8]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[247],E,E,10,[[["self"]],[T]]],[11,R[246],E,E,10,[[["self"],[T]]]],[11,R[3],E,E,10,[[[U]],[R[2]]]],[11,R[4],E,E,10,[[],[R[2]]]],[11,R[5],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[T]]],[11,R[7],E,E,10,[[["self"]],[R[8]]]],[11,R[258],E,E,10,[[],["a"]]],[11,R[259],E,E,10,[[]]],[11,R[260],E,E,10,[[],["a"]]],[11,R[261],E,E,10,[[]]],[11,"types",E,E,10,[[]]],[11,"call",E,E,10,[[["func"],[R[89],["func"]],["wasm"]],[[R[2],[R[168]]],[R[168]]]]],[11,"report",E,E,10,[[],[[R[2],[R[262]]],[R[262]]]]],[11,R[248],E,E,10,[[["self"],["k"]],["bool"]]],[11,"from",R[1195],E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[247],E,E,11,[[["self"]],[T]]],[11,R[246],E,E,11,[[["self"],[T]]]],[11,R[3],E,E,11,[[[U]],[R[2]]]],[11,R[4],E,E,11,[[],[R[2]]]],[11,R[5],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[T]]],[11,R[7],E,E,11,[[["self"]],[R[8]]]],[11,"from",R[1171],E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[247],E,E,12,[[["self"]],[T]]],[11,R[246],E,E,12,[[["self"],[T]]]],[11,R[3],E,E,12,[[[U]],[R[2]]]],[11,R[4],E,E,12,[[],[R[2]]]],[11,R[5],E,E,12,[[["self"]],[T]]],[11,R[6],E,E,12,[[["self"]],[T]]],[11,R[7],E,E,12,[[["self"]],[R[8]]]],[11,"from",R[1194],E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[247],E,E,13,[[["self"]],[T]]],[11,R[246],E,E,13,[[["self"],[T]]]],[11,R[3],E,E,13,[[[U]],[R[2]]]],[11,R[4],E,E,13,[[],[R[2]]]],[11,R[5],E,E,13,[[["self"]],[T]]],[11,R[6],E,E,13,[[["self"]],[T]]],[11,R[7],E,E,13,[[["self"]],[R[8]]]],[11,"from",R[1196],E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[247],E,E,14,[[["self"]],[T]]],[11,R[246],E,E,14,[[["self"],[T]]]],[11,R[3],E,E,14,[[[U]],[R[2]]]],[11,R[4],E,E,14,[[],[R[2]]]],[11,R[5],E,E,14,[[["self"]],[T]]],[11,R[6],E,E,14,[[["self"]],[T]]],[11,R[7],E,E,14,[[["self"]],[R[8]]]],[11,"from",R[1171],E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[3],E,E,15,[[[U]],[R[2]]]],[11,R[4],E,E,15,[[],[R[2]]]],[11,R[5],E,E,15,[[["self"]],[T]]],[11,R[6],E,E,15,[[["self"]],[T]]],[11,R[7],E,E,15,[[["self"]],[R[8]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[3],E,E,16,[[[U]],[R[2]]]],[11,R[4],E,E,16,[[],[R[2]]]],[11,R[5],E,E,16,[[["self"]],[T]]],[11,R[6],E,E,16,[[["self"]],[T]]],[11,R[7],E,E,16,[[["self"]],[R[8]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[247],E,E,17,[[["self"]],[T]]],[11,R[246],E,E,17,[[["self"],[T]]]],[11,R[3],E,E,17,[[[U]],[R[2]]]],[11,R[4],E,E,17,[[],[R[2]]]],[11,R[5],E,E,17,[[["self"]],[T]]],[11,R[6],E,E,17,[[["self"]],[T]]],[11,R[7],E,E,17,[[["self"]],[R[8]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[3],E,E,19,[[[U]],[R[2]]]],[11,R[4],E,E,19,[[],[R[2]]]],[11,R[5],E,E,19,[[["self"]],[T]]],[11,R[6],E,E,19,[[["self"]],[T]]],[11,R[7],E,E,19,[[["self"]],[R[8]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[247],E,E,20,[[["self"]],[T]]],[11,R[246],E,E,20,[[["self"],[T]]]],[11,R[3],E,E,20,[[[U]],[R[2]]]],[11,R[4],E,E,20,[[],[R[2]]]],[11,R[5],E,E,20,[[["self"]],[T]]],[11,R[6],E,E,20,[[["self"]],[T]]],[11,R[7],E,E,20,[[["self"]],[R[8]]]],[11,R[248],E,E,20,[[["self"],["k"]],["bool"]]],[11,"from",R[1195],E,68,[[[T]],[T]]],[11,"into",E,E,68,[[],[U]]],[11,R[3],E,E,68,[[[U]],[R[2]]]],[11,R[4],E,E,68,[[],[R[2]]]],[11,R[5],E,E,68,[[["self"]],[T]]],[11,R[6],E,E,68,[[["self"]],[T]]],[11,R[7],E,E,68,[[["self"]],[R[8]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[3],E,E,21,[[[U]],[R[2]]]],[11,R[4],E,E,21,[[],[R[2]]]],[11,R[5],E,E,21,[[["self"]],[T]]],[11,R[6],E,E,21,[[["self"]],[T]]],[11,R[7],E,E,21,[[["self"]],[R[8]]]],[11,"from",R[1196],E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[247],E,E,22,[[["self"]],[T]]],[11,R[246],E,E,22,[[["self"],[T]]]],[11,R[252],E,E,22,[[["self"]],[R[0]]]],[11,R[3],E,E,22,[[[U]],[R[2]]]],[11,R[4],E,E,22,[[],[R[2]]]],[11,R[5],E,E,22,[[["self"]],[T]]],[11,R[6],E,E,22,[[["self"]],[T]]],[11,R[7],E,E,22,[[["self"]],[R[8]]]],[11,R[248],E,E,22,[[["self"],["k"]],["bool"]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[247],E,E,23,[[["self"]],[T]]],[11,R[246],E,E,23,[[["self"],[T]]]],[11,R[3],E,E,23,[[[U]],[R[2]]]],[11,R[4],E,E,23,[[],[R[2]]]],[11,R[5],E,E,23,[[["self"]],[T]]],[11,R[6],E,E,23,[[["self"]],[T]]],[11,R[7],E,E,23,[[["self"]],[R[8]]]],[11,R[248],E,E,23,[[["self"],["k"]],["bool"]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[247],E,E,24,[[["self"]],[T]]],[11,R[246],E,E,24,[[["self"],[T]]]],[11,R[3],E,E,24,[[[U]],[R[2]]]],[11,R[4],E,E,24,[[],[R[2]]]],[11,R[5],E,E,24,[[["self"]],[T]]],[11,R[6],E,E,24,[[["self"]],[T]]],[11,R[7],E,E,24,[[["self"]],[R[8]]]],[11,R[248],E,E,24,[[["self"],["k"]],["bool"]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[247],E,E,25,[[["self"]],[T]]],[11,R[246],E,E,25,[[["self"],[T]]]],[11,R[3],E,E,25,[[[U]],[R[2]]]],[11,R[4],E,E,25,[[],[R[2]]]],[11,R[5],E,E,25,[[["self"]],[T]]],[11,R[6],E,E,25,[[["self"]],[T]]],[11,R[7],E,E,25,[[["self"]],[R[8]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[247],E,E,26,[[["self"]],[T]]],[11,R[246],E,E,26,[[["self"],[T]]]],[11,R[252],E,E,26,[[["self"]],[R[0]]]],[11,R[3],E,E,26,[[[U]],[R[2]]]],[11,R[4],E,E,26,[[],[R[2]]]],[11,R[5],E,E,26,[[["self"]],[T]]],[11,R[6],E,E,26,[[["self"]],[T]]],[11,R[7],E,E,26,[[["self"]],[R[8]]]],[11,R[248],E,E,26,[[["self"],["k"]],["bool"]]],[11,"from",R[1176],E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[3],E,E,27,[[[U]],[R[2]]]],[11,R[4],E,E,27,[[],[R[2]]]],[11,R[5],E,E,27,[[["self"]],[T]]],[11,R[6],E,E,27,[[["self"]],[T]]],[11,R[7],E,E,27,[[["self"]],[R[8]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[247],E,E,28,[[["self"]],[T]]],[11,R[246],E,E,28,[[["self"],[T]]]],[11,R[252],E,E,28,[[["self"]],[R[0]]]],[11,R[3],E,E,28,[[[U]],[R[2]]]],[11,R[4],E,E,28,[[],[R[2]]]],[11,R[5],E,E,28,[[["self"]],[T]]],[11,R[6],E,E,28,[[["self"]],[T]]],[11,R[7],E,E,28,[[["self"]],[R[8]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[247],E,E,29,[[["self"]],[T]]],[11,R[246],E,E,29,[[["self"],[T]]]],[11,R[252],E,E,29,[[["self"]],[R[0]]]],[11,R[3],E,E,29,[[[U]],[R[2]]]],[11,R[4],E,E,29,[[],[R[2]]]],[11,R[5],E,E,29,[[["self"]],[T]]],[11,R[6],E,E,29,[[["self"]],[T]]],[11,R[7],E,E,29,[[["self"]],[R[8]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[252],E,E,30,[[["self"]],[R[0]]]],[11,R[3],E,E,30,[[[U]],[R[2]]]],[11,R[4],E,E,30,[[],[R[2]]]],[11,R[5],E,E,30,[[["self"]],[T]]],[11,R[6],E,E,30,[[["self"]],[T]]],[11,R[7],E,E,30,[[["self"]],[R[8]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[247],E,E,31,[[["self"]],[T]]],[11,R[246],E,E,31,[[["self"],[T]]]],[11,R[252],E,E,31,[[["self"]],[R[0]]]],[11,R[3],E,E,31,[[[U]],[R[2]]]],[11,R[4],E,E,31,[[],[R[2]]]],[11,R[5],E,E,31,[[["self"]],[T]]],[11,R[6],E,E,31,[[["self"]],[T]]],[11,R[7],E,E,31,[[["self"]],[R[8]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[252],E,E,32,[[["self"]],[R[0]]]],[11,R[3],E,E,32,[[[U]],[R[2]]]],[11,R[4],E,E,32,[[],[R[2]]]],[11,R[5],E,E,32,[[["self"]],[T]]],[11,R[6],E,E,32,[[["self"]],[T]]],[11,R[7],E,E,32,[[["self"]],[R[8]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[247],E,E,33,[[["self"]],[T]]],[11,R[246],E,E,33,[[["self"],[T]]]],[11,R[252],E,E,33,[[["self"]],[R[0]]]],[11,R[3],E,E,33,[[[U]],[R[2]]]],[11,R[4],E,E,33,[[],[R[2]]]],[11,R[5],E,E,33,[[["self"]],[T]]],[11,R[6],E,E,33,[[["self"]],[T]]],[11,R[7],E,E,33,[[["self"]],[R[8]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[252],E,E,34,[[["self"]],[R[0]]]],[11,R[3],E,E,34,[[[U]],[R[2]]]],[11,R[4],E,E,34,[[],[R[2]]]],[11,R[5],E,E,34,[[["self"]],[T]]],[11,R[6],E,E,34,[[["self"]],[T]]],[11,R[7],E,E,34,[[["self"]],[R[8]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[252],E,E,35,[[["self"]],[R[0]]]],[11,R[3],E,E,35,[[[U]],[R[2]]]],[11,R[4],E,E,35,[[],[R[2]]]],[11,R[5],E,E,35,[[["self"]],[T]]],[11,R[6],E,E,35,[[["self"]],[T]]],[11,R[7],E,E,35,[[["self"]],[R[8]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[252],E,E,36,[[["self"]],[R[0]]]],[11,R[3],E,E,36,[[[U]],[R[2]]]],[11,R[4],E,E,36,[[],[R[2]]]],[11,R[5],E,E,36,[[["self"]],[T]]],[11,R[6],E,E,36,[[["self"]],[T]]],[11,R[7],E,E,36,[[["self"]],[R[8]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[252],E,E,37,[[["self"]],[R[0]]]],[11,R[3],E,E,37,[[[U]],[R[2]]]],[11,R[4],E,E,37,[[],[R[2]]]],[11,R[5],E,E,37,[[["self"]],[T]]],[11,R[6],E,E,37,[[["self"]],[T]]],[11,R[7],E,E,37,[[["self"]],[R[8]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,R[252],E,E,38,[[["self"]],[R[0]]]],[11,R[3],E,E,38,[[[U]],[R[2]]]],[11,R[4],E,E,38,[[],[R[2]]]],[11,R[5],E,E,38,[[["self"]],[T]]],[11,R[6],E,E,38,[[["self"]],[T]]],[11,R[7],E,E,38,[[["self"]],[R[8]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[3],E,E,39,[[[U]],[R[2]]]],[11,R[4],E,E,39,[[],[R[2]]]],[11,R[5],E,E,39,[[["self"]],[T]]],[11,R[6],E,E,39,[[["self"]],[T]]],[11,R[7],E,E,39,[[["self"]],[R[8]]]],[11,"from",R[1197],E,40,[[[T]],[T]]],[11,"into",E,E,40,[[],[U]]],[11,R[247],E,E,40,[[["self"]],[T]]],[11,R[246],E,E,40,[[["self"],[T]]]],[11,R[3],E,E,40,[[[U]],[R[2]]]],[11,R[4],E,E,40,[[],[R[2]]]],[11,R[5],E,E,40,[[["self"]],[T]]],[11,R[6],E,E,40,[[["self"]],[T]]],[11,R[7],E,E,40,[[["self"]],[R[8]]]],[11,R[248],E,E,40,[[["self"],["k"]],["bool"]]],[11,"from",E,E,41,[[[T]],[T]]],[11,"into",E,E,41,[[],[U]]],[11,R[247],E,E,41,[[["self"]],[T]]],[11,R[246],E,E,41,[[["self"],[T]]]],[11,R[3],E,E,41,[[[U]],[R[2]]]],[11,R[4],E,E,41,[[],[R[2]]]],[11,R[5],E,E,41,[[["self"]],[T]]],[11,R[6],E,E,41,[[["self"]],[T]]],[11,R[7],E,E,41,[[["self"]],[R[8]]]],[11,R[248],E,E,41,[[["self"],["k"]],["bool"]]],[11,"from",R[1196],E,44,[[[T]],[T]]],[11,"into",E,E,44,[[],[U]]],[11,R[247],E,E,44,[[["self"]],[T]]],[11,R[246],E,E,44,[[["self"],[T]]]],[11,R[3],E,E,44,[[[U]],[R[2]]]],[11,R[4],E,E,44,[[],[R[2]]]],[11,R[5],E,E,44,[[["self"]],[T]]],[11,R[6],E,E,44,[[["self"]],[T]]],[11,R[7],E,E,44,[[["self"]],[R[8]]]],[11,R[248],E,E,44,[[["self"],["k"]],["bool"]]],[11,"from",E,E,45,[[[T]],[T]]],[11,"into",E,E,45,[[],[U]]],[11,R[247],E,E,45,[[["self"]],[T]]],[11,R[246],E,E,45,[[["self"],[T]]]],[11,R[3],E,E,45,[[[U]],[R[2]]]],[11,R[4],E,E,45,[[],[R[2]]]],[11,R[5],E,E,45,[[["self"]],[T]]],[11,R[6],E,E,45,[[["self"]],[T]]],[11,R[7],E,E,45,[[["self"]],[R[8]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,"into",E,E,46,[[],[U]]],[11,R[247],E,E,46,[[["self"]],[T]]],[11,R[246],E,E,46,[[["self"],[T]]]],[11,R[3],E,E,46,[[[U]],[R[2]]]],[11,R[4],E,E,46,[[],[R[2]]]],[11,R[5],E,E,46,[[["self"]],[T]]],[11,R[6],E,E,46,[[["self"]],[T]]],[11,R[7],E,E,46,[[["self"]],[R[8]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,"into",E,E,48,[[],[U]]],[11,R[247],E,E,48,[[["self"]],[T]]],[11,R[246],E,E,48,[[["self"],[T]]]],[11,R[3],E,E,48,[[[U]],[R[2]]]],[11,R[4],E,E,48,[[],[R[2]]]],[11,R[5],E,E,48,[[["self"]],[T]]],[11,R[6],E,E,48,[[["self"]],[T]]],[11,R[7],E,E,48,[[["self"]],[R[8]]]],[11,R[248],E,E,48,[[["self"],["k"]],["bool"]]],[11,"from",E,E,49,[[[T]],[T]]],[11,"into",E,E,49,[[],[U]]],[11,R[247],E,E,49,[[["self"]],[T]]],[11,R[246],E,E,49,[[["self"],[T]]]],[11,R[3],E,E,49,[[[U]],[R[2]]]],[11,R[4],E,E,49,[[],[R[2]]]],[11,R[5],E,E,49,[[["self"]],[T]]],[11,R[6],E,E,49,[[["self"]],[T]]],[11,R[7],E,E,49,[[["self"]],[R[8]]]],[11,R[248],E,E,49,[[["self"],["k"]],["bool"]]],[11,"from",E,E,50,[[[T]],[T]]],[11,"into",E,E,50,[[],[U]]],[11,R[247],E,E,50,[[["self"]],[T]]],[11,R[246],E,E,50,[[["self"],[T]]]],[11,R[3],E,E,50,[[[U]],[R[2]]]],[11,R[4],E,E,50,[[],[R[2]]]],[11,R[5],E,E,50,[[["self"]],[T]]],[11,R[6],E,E,50,[[["self"]],[T]]],[11,R[7],E,E,50,[[["self"]],[R[8]]]],[11,R[248],E,E,50,[[["self"],["k"]],["bool"]]],[11,"from",E,E,51,[[[T]],[T]]],[11,"into",E,E,51,[[],[U]]],[11,R[247],E,E,51,[[["self"]],[T]]],[11,R[246],E,E,51,[[["self"],[T]]]],[11,R[3],E,E,51,[[[U]],[R[2]]]],[11,R[4],E,E,51,[[],[R[2]]]],[11,R[5],E,E,51,[[["self"]],[T]]],[11,R[6],E,E,51,[[["self"]],[T]]],[11,R[7],E,E,51,[[["self"]],[R[8]]]],[11,R[248],E,E,51,[[["self"],["k"]],["bool"]]],[11,"from",E,E,52,[[[T]],[T]]],[11,"into",E,E,52,[[],[U]]],[11,R[247],E,E,52,[[["self"]],[T]]],[11,R[246],E,E,52,[[["self"],[T]]]],[11,R[3],E,E,52,[[[U]],[R[2]]]],[11,R[4],E,E,52,[[],[R[2]]]],[11,R[5],E,E,52,[[["self"]],[T]]],[11,R[6],E,E,52,[[["self"]],[T]]],[11,R[7],E,E,52,[[["self"]],[R[8]]]],[11,R[248],E,E,52,[[["self"],["k"]],["bool"]]],[11,"from",E,E,53,[[[T]],[T]]],[11,"into",E,E,53,[[],[U]]],[11,R[247],E,E,53,[[["self"]],[T]]],[11,R[246],E,E,53,[[["self"],[T]]]],[11,R[3],E,E,53,[[[U]],[R[2]]]],[11,R[4],E,E,53,[[],[R[2]]]],[11,R[5],E,E,53,[[["self"]],[T]]],[11,R[6],E,E,53,[[["self"]],[T]]],[11,R[7],E,E,53,[[["self"]],[R[8]]]],[11,R[248],E,E,53,[[["self"],["k"]],["bool"]]],[11,"from",E,E,54,[[[T]],[T]]],[11,"into",E,E,54,[[],[U]]],[11,R[247],E,E,54,[[["self"]],[T]]],[11,R[246],E,E,54,[[["self"],[T]]]],[11,R[3],E,E,54,[[[U]],[R[2]]]],[11,R[4],E,E,54,[[],[R[2]]]],[11,R[5],E,E,54,[[["self"]],[T]]],[11,R[6],E,E,54,[[["self"]],[T]]],[11,R[7],E,E,54,[[["self"]],[R[8]]]],[11,R[248],E,E,54,[[["self"],["k"]],["bool"]]],[11,"from",E,E,55,[[[T]],[T]]],[11,"into",E,E,55,[[],[U]]],[11,R[247],E,E,55,[[["self"]],[T]]],[11,R[246],E,E,55,[[["self"],[T]]]],[11,R[3],E,E,55,[[[U]],[R[2]]]],[11,R[4],E,E,55,[[],[R[2]]]],[11,R[5],E,E,55,[[["self"]],[T]]],[11,R[6],E,E,55,[[["self"]],[T]]],[11,R[7],E,E,55,[[["self"]],[R[8]]]],[11,R[248],E,E,55,[[["self"],["k"]],["bool"]]],[11,"from",E,E,56,[[[T]],[T]]],[11,"into",E,E,56,[[],[U]]],[11,R[247],E,E,56,[[["self"]],[T]]],[11,R[246],E,E,56,[[["self"],[T]]]],[11,R[3],E,E,56,[[[U]],[R[2]]]],[11,R[4],E,E,56,[[],[R[2]]]],[11,R[5],E,E,56,[[["self"]],[T]]],[11,R[6],E,E,56,[[["self"]],[T]]],[11,R[7],E,E,56,[[["self"]],[R[8]]]],[11,R[248],E,E,56,[[["self"],["k"]],["bool"]]],[11,"from",E,E,57,[[[T]],[T]]],[11,"into",E,E,57,[[],[U]]],[11,R[247],E,E,57,[[["self"]],[T]]],[11,R[246],E,E,57,[[["self"],[T]]]],[11,R[3],E,E,57,[[[U]],[R[2]]]],[11,R[4],E,E,57,[[],[R[2]]]],[11,R[5],E,E,57,[[["self"]],[T]]],[11,R[6],E,E,57,[[["self"]],[T]]],[11,R[7],E,E,57,[[["self"]],[R[8]]]],[11,R[248],E,E,57,[[["self"],["k"]],["bool"]]],[11,"from",E,E,58,[[[T]],[T]]],[11,"into",E,E,58,[[],[U]]],[11,R[247],E,E,58,[[["self"]],[T]]],[11,R[246],E,E,58,[[["self"],[T]]]],[11,R[3],E,E,58,[[[U]],[R[2]]]],[11,R[4],E,E,58,[[],[R[2]]]],[11,R[5],E,E,58,[[["self"]],[T]]],[11,R[6],E,E,58,[[["self"]],[T]]],[11,R[7],E,E,58,[[["self"]],[R[8]]]],[11,R[248],E,E,58,[[["self"],["k"]],["bool"]]],[11,"from",E,E,59,[[[T]],[T]]],[11,"into",E,E,59,[[],[U]]],[11,R[247],E,E,59,[[["self"]],[T]]],[11,R[246],E,E,59,[[["self"],[T]]]],[11,R[3],E,E,59,[[[U]],[R[2]]]],[11,R[4],E,E,59,[[],[R[2]]]],[11,R[5],E,E,59,[[["self"]],[T]]],[11,R[6],E,E,59,[[["self"]],[T]]],[11,R[7],E,E,59,[[["self"]],[R[8]]]],[11,R[248],E,E,59,[[["self"],["k"]],["bool"]]],[11,"from",E,E,60,[[[T]],[T]]],[11,"into",E,E,60,[[],[U]]],[11,R[247],E,E,60,[[["self"]],[T]]],[11,R[246],E,E,60,[[["self"],[T]]]],[11,R[3],E,E,60,[[[U]],[R[2]]]],[11,R[4],E,E,60,[[],[R[2]]]],[11,R[5],E,E,60,[[["self"]],[T]]],[11,R[6],E,E,60,[[["self"]],[T]]],[11,R[7],E,E,60,[[["self"]],[R[8]]]],[11,R[248],E,E,60,[[["self"],["k"]],["bool"]]],[11,"from",E,E,61,[[[T]],[T]]],[11,"into",E,E,61,[[],[U]]],[11,R[3],E,E,61,[[[U]],[R[2]]]],[11,R[4],E,E,61,[[],[R[2]]]],[11,R[5],E,E,61,[[["self"]],[T]]],[11,R[6],E,E,61,[[["self"]],[T]]],[11,R[7],E,E,61,[[["self"]],[R[8]]]],[11,"from",R[1198],E,62,[[[T]],[T]]],[11,"into",E,E,62,[[],[U]]],[11,R[3],E,E,62,[[[U]],[R[2]]]],[11,R[4],E,E,62,[[],[R[2]]]],[11,R[5],E,E,62,[[["self"]],[T]]],[11,R[6],E,E,62,[[["self"]],[T]]],[11,R[7],E,E,62,[[["self"]],[R[8]]]],[11,"from",E,E,63,[[[T]],[T]]],[11,"into",E,E,63,[[],[U]]],[11,R[247],E,E,63,[[["self"]],[T]]],[11,R[246],E,E,63,[[["self"],[T]]]],[11,R[3],E,E,63,[[[U]],[R[2]]]],[11,R[4],E,E,63,[[],[R[2]]]],[11,R[5],E,E,63,[[["self"]],[T]]],[11,R[6],E,E,63,[[["self"]],[T]]],[11,R[7],E,E,63,[[["self"]],[R[8]]]],[11,R[248],E,E,63,[[["self"],["k"]],["bool"]]],[11,"from",E,E,64,[[[T]],[T]]],[11,"into",E,E,64,[[],[U]]],[11,R[3],E,E,64,[[[U]],[R[2]]]],[11,R[4],E,E,64,[[],[R[2]]]],[11,R[5],E,E,64,[[["self"]],[T]]],[11,R[6],E,E,64,[[["self"]],[T]]],[11,R[7],E,E,64,[[["self"]],[R[8]]]],[11,R[307],R[1196],E,51,[[["__d"]],[[R[184]],[R[2],[R[184]]]]]],[11,R[307],E,E,25,[[["__d"]],[[R[2],[R[160]]],[R[160]]]]],[11,R[307],E,E,24,[[["__d"]],[[R[2],[R[108]]],[R[108]]]]],[11,R[307],E,E,52,[[["__d"]],[[R[43]],[R[2],[R[43]]]]]],[11,R[307],E,E,48,[[["__d"]],[[R[2],[R[54]]],[R[54]]]]],[11,R[307],R[1197],E,41,[[["__d"]],[[R[2],["pages"]],["pages"]]]],[11,R[307],R[1196],E,49,[[["__d"]],[[R[39]],[R[2],[R[39]]]]]],[11,R[307],E,E,14,[[["__d"]],[[R[2],["value"]],["value"]]]],[11,R[307],E,E,26,[[["__d"]],[["type"],[R[2],["type"]]]]],[11,R[307],E,E,45,[[["__d"]],[[R[2],[R[128]]],[R[128]]]]],[11,R[307],E,E,50,[[["__d"]],[[R[47]],[R[2],[R[47]]]]]],[11,R[307],E,E,23,[[["__d"]],[[R[2],[R[293]]],[R[293]]]]],[11,R[307],E,E,55,[[["__d"]],[[R[44]],[R[2],[R[44]]]]]],[11,R[307],R[1171],E,0,[[["__d"]],[[R[281]],[R[2],[R[281]]]]]],[11,R[307],R[1196],E,57,[[["__d"]],[[R[187]],[R[2],[R[187]]]]]],[11,R[307],E,E,46,[[["__d"]],[[R[2],[R[1199]]],[R[1199]]]]],[11,R[307],E,E,59,[[["__d"]],[[R[2],[R[284]]],[R[284]]]]],[11,R[307],R[1197],E,40,[[["__d"]],[["bytes"],[R[2],["bytes"]]]]],[11,R[307],R[1196],E,58,[[["__d"]],[[R[46]],[R[2],[R[46]]]]]],[11,R[307],E,E,44,[[["__d"]],[[R[301]],[R[2],[R[301]]]]]],[11,R[307],E,E,22,[[["__d"]],[[R[90]],[R[2],[R[90]]]]]],[11,R[307],E,E,56,[[["__d"]],[[R[283]],[R[2],[R[283]]]]]],[11,R[307],E,E,60,[[["__d"]],[[R[2],[R[40]]],[R[40]]]]],[11,R[307],E,E,54,[[["__d"]],[[R[2],[R[186]]],[R[186]]]]],[11,R[307],E,E,53,[[["__d"]],[[R[218]],[R[2],[R[218]]]]]],[11,R[307],R[1198],E,63,[[["__d"]],[[R[2],[R[297]]],[R[297]]]]],[11,"extend",R[1171],E,6,[[["self"],[T]]]],[11,"add",R[1197],E,41,[[[T]],["pages"]]],[11,"add",E,E,40,[[[T]],["bytes"]]],[11,R[255],R[1171],E,6,[[]]],[11,"new",R[1196],E,50,[[["usize"]],[R[47]]]],[11,"index",E,E,50,[[["self"]],["usize"]]],[11,"new",E,E,56,[[["usize"]],[R[283]]]],[11,"index",E,E,56,[[["self"]],["usize"]]],[11,"new",E,E,59,[[["usize"]],[R[284]]]],[11,"index",E,E,59,[[["self"]],["usize"]]],[11,"new",E,E,58,[[["usize"]],[R[46]]]],[11,"index",E,E,58,[[["self"]],["usize"]]],[11,"new",E,E,53,[[["usize"]],[R[218]]]],[11,"index",E,E,53,[[["self"]],["usize"]]],[11,"new",E,E,52,[[["usize"]],[R[43]]]],[11,"index",E,E,52,[[["self"]],["usize"]]],[11,"new",E,E,49,[[["usize"]],[R[39]]]],[11,"index",E,E,49,[[["self"]],["usize"]]],[11,"new",E,E,55,[[["usize"]],[R[44]]]],[11,"index",E,E,55,[[["self"]],["usize"]]],[11,"new",E,E,51,[[["usize"]],[R[184]]]],[11,"index",E,E,51,[[["self"]],["usize"]]],[11,"new",E,E,48,[[["usize"]],[R[54]]]],[11,"index",E,E,48,[[["self"]],["usize"]]],[11,"new",E,E,54,[[["usize"]],[R[186]]]],[11,"index",E,E,54,[[["self"]],["usize"]]],[11,"new",E,E,57,[[["usize"]],[R[187]]]],[11,"index",E,E,57,[[["self"]],["usize"]]],[11,"new",E,E,60,[[["usize"]],[R[40]]]],[11,"index",E,E,60,[[["self"]],["usize"]]],[11,R[285],R[1171],E,19,[[],[R[21]]]],[11,R[285],E,E,1,[[],[R[19]]]],[11,"from",R[1176],E,34,[[[R[279]]],["error"]]],[11,"from",R[1196],E,14,[[["i32"]],["value"]]],[11,"from",E,E,14,[[["u128"]],["value"]]],[11,"from",E,E,14,[[["f64"]],["value"]]],[11,"from",E,E,14,[[["i64"]],["value"]]],[11,"from",R[1197],E,40,[[["pages"]],["bytes"]]],[11,"from",R[1176],E,32,[[[R[168]]],[R[298]]]],[11,"from",E,E,37,[[["error"]],[R[153]]]],[11,"from",R[1197],E,41,[[["bytes"]],["pages"]]],[11,"from",R[1176],E,28,[[[R[126]]],[R[279]]]],[11,"from",E,E,27,[[["error"]],["error"]]],[11,"from",R[1196],E,14,[[["f32"]],["value"]]],[11,"from",R[1176],E,34,[[[R[298]]],["error"]]],[11,"from",E,E,34,[[[R[41]]],["error"]]],[11,"from",E,E,39,[[[R[127]]],["parseerror"]]],[11,"from",E,E,32,[[[R[278]]],[R[298]]]],[11,"from",E,E,34,[[[R[278]]],["error"]]],[11,"from",E,E,34,[[[R[168]]],["error"]]],[11,"from",E,E,34,[[["vec",[R[277]]],[R[277]]],["error"]]],[11,"fmt",E,E,34,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",E,E,27,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[1197],E,41,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[1176],E,36,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",E,E,31,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[1196],E,49,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[1194],E,13,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[1196],E,55,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[1176],E,38,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[1196],E,45,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",E,E,56,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",E,E,24,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[1176],E,29,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[1171],E,10,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[1196],E,26,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[1176],E,35,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[1196],E,58,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",E,E,22,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",E,E,23,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[1197],E,40,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[1196],E,14,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",E,E,44,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",E,E,50,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[1171],E,4,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[1196],E,46,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",E,E,51,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",E,E,52,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[1194],E,5,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[1176],E,30,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",E,E,32,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",E,E,33,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[1196],E,48,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[1171],E,0,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[1176],E,37,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[1195],E,11,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[1196],E,54,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[1171],E,1,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[1196],E,59,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[1176],E,28,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[1196],E,57,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",E,E,60,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[1171],E,19,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[1198],E,63,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[1196],E,53,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[1171],E,15,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[1176],E,39,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[1196],E,25,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[1176],E,28,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[1196],E,22,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[1176],E,38,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",E,E,37,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[1196],E,26,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[1176],E,30,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",E,E,32,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",E,E,33,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",E,E,36,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",E,E,29,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",E,E,31,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",E,E,34,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",E,E,35,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"hash",R[1196],E,59,[[["self"],["__h"]]]],[11,"hash",E,E,56,[[["self"],["__h"]]]],[11,"hash",E,E,22,[[["self"],["__h"]]]],[11,"hash",E,E,60,[[["self"],["__h"]]]],[11,"hash",E,E,51,[[["self"],["__h"]]]],[11,"hash",E,E,26,[[["self"],["__h"]]]],[11,"hash",E,E,57,[[["self"],["__h"]]]],[11,"hash",E,E,53,[[["self"],["__h"]]]],[11,"hash",E,E,54,[[["self"],["__h"]]]],[11,"hash",E,E,50,[[["self"],["__h"]]]],[11,"hash",E,E,48,[[["self"],["__h"]]]],[11,"hash",E,E,58,[[["self"],["__h"]]]],[11,"hash",E,E,52,[[["self"],["__h"]]]],[11,"hash",E,E,55,[[["self"],["__h"]]]],[11,"hash",E,E,49,[[["self"],["__h"]]]],[11,"hash",R[1198],E,63,[[["self"],["__h"]]]],[11,R[272],R[1171],E,9,[[["self"],["str"]],[[R[26],[R[81]]],[R[81]]]]],[11,R[273],E,E,9,[[["self"]],["vec"]]],[11,R[274],E,E,9,[[["self"],["str"],[R[81]]],[R[26]]]],[11,R[303],R[1196],E,49,[[["self"]]]],[11,R[303],E,E,26,[[["self"]]]],[11,R[303],E,E,59,[[["self"]]]],[11,R[303],R[1197],E,41,[[["self"]]]],[11,R[303],R[1171],E,0,[[["self"]]]],[11,R[303],R[1196],E,51,[[["self"]]]],[11,R[303],E,E,24,[[["self"]]]],[11,R[303],E,E,23,[[["self"]]]],[11,R[303],R[1197],E,40,[[["self"]]]],[11,R[303],R[1196],E,53,[[["self"]]]],[11,R[303],E,E,60,[[["self"]]]],[11,R[303],E,E,52,[[["self"]]]],[11,R[303],E,E,57,[[["self"]]]],[11,R[303],E,E,44,[[["self"]]]],[11,R[303],E,E,55,[[["self"]]]],[11,R[303],E,E,48,[[["self"]]]],[11,R[303],E,E,22,[[["self"]]]],[11,R[303],E,E,58,[[["self"]]]],[11,R[303],E,E,56,[[["self"]]]],[11,R[303],R[1198],E,63,[[["self"]]]],[11,R[303],R[1196],E,54,[[["self"]]]],[11,R[303],E,E,50,[[["self"]]]],[11,"eq",E,E,26,[[["self"],["type"]],["bool"]]],[11,"eq",R[1176],E,33,[[["self"],[R[41]]],["bool"]]],[11,"eq",R[1196],E,57,[[["self"],[R[187]]],["bool"]]],[11,"ne",E,E,57,[[["self"],[R[187]]],["bool"]]],[11,"eq",E,E,53,[[["self"],[R[218]]],["bool"]]],[11,"ne",E,E,53,[[["self"],[R[218]]],["bool"]]],[11,"eq",E,E,48,[[["self"],[R[54]]],["bool"]]],[11,"ne",E,E,48,[[["self"],[R[54]]],["bool"]]],[11,"eq",E,E,58,[[["self"],[R[46]]],["bool"]]],[11,"ne",E,E,58,[[["self"],[R[46]]],["bool"]]],[11,"eq",E,E,60,[[["self"],[R[40]]],["bool"]]],[11,"ne",E,E,60,[[["self"],[R[40]]],["bool"]]],[11,"eq",R[1197],E,41,[[["self"],["pages"]],["bool"]]],[11,"ne",E,E,41,[[["self"],["pages"]],["bool"]]],[11,"eq",R[1196],E,44,[[["self"],[R[301]]],["bool"]]],[11,"eq",R[1176],E,31,[[["self"],[R[278]]],["bool"]]],[11,"eq",R[1196],E,55,[[["self"],[R[44]]],["bool"]]],[11,"ne",E,E,55,[[["self"],[R[44]]],["bool"]]],[11,"eq",R[1171],E,0,[[["self"],[R[281]]],["bool"]]],[11,"eq",R[1196],E,23,[[["self"],[R[293]]],["bool"]]],[11,"ne",E,E,23,[[["self"],[R[293]]],["bool"]]],[11,"eq",R[1176],E,34,[[["self"],["error"]],["bool"]]],[11,"eq",R[1196],E,45,[[["self"],[R[128]]],["bool"]]],[11,"ne",E,E,45,[[["self"],[R[128]]],["bool"]]],[11,"eq",R[1176],E,28,[[["self"],[R[279]]],["bool"]]],[11,"eq",R[1196],E,59,[[["self"],[R[284]]],["bool"]]],[11,"ne",E,E,59,[[["self"],[R[284]]],["bool"]]],[11,"eq",R[1176],E,32,[[["self"],[R[298]]],["bool"]]],[11,"eq",R[1196],E,54,[[["self"],[R[186]]],["bool"]]],[11,"ne",E,E,54,[[["self"],[R[186]]],["bool"]]],[11,"eq",R[1197],E,40,[[["self"],["bytes"]],["bool"]]],[11,"ne",E,E,40,[[["self"],["bytes"]],["bool"]]],[11,"eq",R[1176],E,30,[[["self"],[R[168]]],["bool"]]],[11,"eq",R[1171],E,10,[[["self"],[R[752]]],["bool"]]],[11,"eq",R[1196],E,49,[[["self"],[R[39]]],["bool"]]],[11,"ne",E,E,49,[[["self"],[R[39]]],["bool"]]],[11,"eq",E,E,56,[[["self"],[R[283]]],["bool"]]],[11,"ne",E,E,56,[[["self"],[R[283]]],["bool"]]],[11,"eq",E,E,24,[[["self"],[R[108]]],["bool"]]],[11,"ne",E,E,24,[[["self"],[R[108]]],["bool"]]],[11,"eq",R[1176],E,29,[[["self"],[R[277]]],["bool"]]],[11,"eq",R[1196],E,22,[[["self"],[R[90]]],["bool"]]],[11,"ne",E,E,22,[[["self"],[R[90]]],["bool"]]],[11,"eq",E,E,51,[[["self"],[R[184]]],["bool"]]],[11,"ne",E,E,51,[[["self"],[R[184]]],["bool"]]],[11,"eq",R[1198],E,63,[[["self"],[R[297]]],["bool"]]],[11,"ne",E,E,63,[[["self"],[R[297]]],["bool"]]],[11,"eq",R[1196],E,52,[[["self"],[R[43]]],["bool"]]],[11,"ne",E,E,52,[[["self"],[R[43]]],["bool"]]],[11,"eq",E,E,14,[[["self"],["value"]],["bool"]]],[11,"ne",E,E,14,[[["self"],["value"]],["bool"]]],[11,"eq",E,E,50,[[["self"],[R[47]]],["bool"]]],[11,"ne",E,E,50,[[["self"],[R[47]]],["bool"]]],[11,"clone",E,E,25,[[["self"]],[R[160]]]],[11,"clone",E,E,60,[[["self"]],[R[40]]]],[11,"clone",E,E,23,[[["self"]],[R[293]]]],[11,"clone",E,E,50,[[["self"]],[R[47]]]],[11,"clone",R[1197],E,41,[[["self"]],["pages"]]],[11,"clone",R[1196],E,57,[[["self"]],[R[187]]]],[11,"clone",E,E,26,[[["self"]],["type"]]],[11,"clone",R[1176],E,28,[[["self"]],[R[279]]]],[11,"clone",E,E,31,[[["self"]],[R[278]]]],[11,"clone",R[1171],E,4,[[["self"]],[R[81]]]],[11,"clone",R[1196],E,59,[[["self"]],[R[284]]]],[11,"clone",R[1171],E,10,[[["self"]],[R[752]]]],[11,"clone",R[1196],E,51,[[["self"]],[R[184]]]],[11,"clone",R[1171],E,0,[[["self"]],[R[281]]]],[11,"clone",E,E,12,[[["self"]],[R[16]]]],[11,"clone",R[1196],E,56,[[["self"]],[R[283]]]],[11,"clone",R[1176],E,29,[[["self"]],[R[277]]]],[11,"clone",R[1196],E,44,[[["self"]],[R[301]]]],[11,"clone",R[1194],E,5,[[["self"]],["global"]]],[11,"clone",R[1171],E,17,[[["self"]],[R[219]]]],[11,"clone",R[1196],E,46,[[["self"]],[R[1199]]]],[11,"clone",E,E,54,[[["self"]],[R[186]]]],[11,"clone",R[1176],E,33,[[["self"]],[R[41]]]],[11,"clone",R[1196],E,58,[[["self"]],[R[46]]]],[11,"clone",E,E,14,[[["self"]],["value"]]],[11,"clone",E,E,55,[[["self"]],[R[44]]]],[11,"clone",R[1198],E,63,[[["self"]],[R[297]]]],[11,"clone",R[1197],E,40,[[["self"]],["bytes"]]],[11,"clone",R[1194],E,13,[[["self"]],["table"]]],[11,"clone",R[1195],E,11,[[["self"]],[R[96]]]],[11,"clone",R[1196],E,48,[[["self"]],[R[54]]]],[11,"clone",E,E,49,[[["self"]],[R[39]]]],[11,"clone",E,E,45,[[["self"]],[R[128]]]],[11,"clone",E,E,52,[[["self"]],[R[43]]]],[11,"clone",E,E,22,[[["self"]],[R[90]]]],[11,"clone",E,E,53,[[["self"]],[R[218]]]],[11,"clone",E,E,24,[[["self"]],[R[108]]]],[11,"deref",R[1195],E,21,[[["self"]]]],[11,"deref",E,E,21,[[["self"]]]],[11,"compile",R[1171],E,3,[[["self"],[R[21]],["token"]],[[R[22]],[R[279]],[R[2],[R[22],R[279]]]]]],[11,R[55],E,E,3,[[["self"],["token"],[R[23]]],[[R[2],[R[22],"error"]],["error"],[R[22]]]]],[11,R[306],R[1197],E,40,[[["self"],["__s"]],[R[2]]]],[11,R[306],R[1196],E,55,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,57,[[["self"],["__s"]],[R[2]]]],[11,R[306],R[1198],E,63,[[["self"],["__s"]],[R[2]]]],[11,R[306],R[1196],E,49,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,26,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,25,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,24,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,23,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,46,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,22,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,45,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,44,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,48,[[["self"],["__s"]],[R[2]]]],[11,R[306],R[1171],E,0,[[["self"],["__s"]],[R[2]]]],[11,R[306],R[1196],E,51,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,50,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,56,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,60,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,54,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,59,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,14,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,52,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,58,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,53,[[["self"],["__s"]],[R[2]]]],[11,R[306],R[1197],E,41,[[["self"],["__s"]],[R[2]]]],[11,R[241],R[1194],E,13,[[["self"]],[R[81]]]],[11,R[241],R[1195],E,11,[[["self"]],[R[81]]]],[11,R[241],R[1171],E,4,[[["self"]],[R[81]]]],[11,R[241],E,E,16,[[["self"]],[R[81]]]],[11,R[241],R[1194],E,5,[[["self"]],[R[81]]]],[11,R[275],R[1171],E,10,[[]]],[11,R[276],E,E,10,[[],[R[752]]]],[11,"drop",E,E,15,[[["self"]]]],[11,"sub",R[1197],E,41,[[[T]],["pages"]]],[11,"sub",E,E,40,[[[T]],["bytes"]]],[11,"into",R[1176],E,37,[[],[R[103]]]],[11,"into",E,E,38,[[],[R[103]]]],[11,"into",E,E,36,[[],[R[103]]]],[11,R[282],R[1196],E,53,[[["self"],[R[218]]],[[R[280]],[R[26],[R[280]]]]]],[11,"lt",E,E,53,[[["self"],[R[218]]],["bool"]]],[11,"le",E,E,53,[[["self"],[R[218]]],["bool"]]],[11,"gt",E,E,53,[[["self"],[R[218]]],["bool"]]],[11,"ge",E,E,53,[[["self"],[R[218]]],["bool"]]],[11,R[282],E,E,55,[[["self"],[R[44]]],[[R[280]],[R[26],[R[280]]]]]],[11,"lt",E,E,55,[[["self"],[R[44]]],["bool"]]],[11,"le",E,E,55,[[["self"],[R[44]]],["bool"]]],[11,"gt",E,E,55,[[["self"],[R[44]]],["bool"]]],[11,"ge",E,E,55,[[["self"],[R[44]]],["bool"]]],[11,R[282],E,E,54,[[["self"],[R[186]]],[[R[280]],[R[26],[R[280]]]]]],[11,"lt",E,E,54,[[["self"],[R[186]]],["bool"]]],[11,"le",E,E,54,[[["self"],[R[186]]],["bool"]]],[11,"gt",E,E,54,[[["self"],[R[186]]],["bool"]]],[11,"ge",E,E,54,[[["self"],[R[186]]],["bool"]]],[11,R[282],E,E,56,[[["self"],[R[283]]],[[R[280]],[R[26],[R[280]]]]]],[11,"lt",E,E,56,[[["self"],[R[283]]],["bool"]]],[11,"le",E,E,56,[[["self"],[R[283]]],["bool"]]],[11,"gt",E,E,56,[[["self"],[R[283]]],["bool"]]],[11,"ge",E,E,56,[[["self"],[R[283]]],["bool"]]],[11,R[282],E,E,59,[[["self"],[R[284]]],[[R[280]],[R[26],[R[280]]]]]],[11,"lt",E,E,59,[[["self"],[R[284]]],["bool"]]],[11,"le",E,E,59,[[["self"],[R[284]]],["bool"]]],[11,"gt",E,E,59,[[["self"],[R[284]]],["bool"]]],[11,"ge",E,E,59,[[["self"],[R[284]]],["bool"]]],[11,R[282],R[1197],E,41,[[["self"],["pages"]],[[R[280]],[R[26],[R[280]]]]]],[11,"lt",E,E,41,[[["self"],["pages"]],["bool"]]],[11,"le",E,E,41,[[["self"],["pages"]],["bool"]]],[11,"gt",E,E,41,[[["self"],["pages"]],["bool"]]],[11,"ge",E,E,41,[[["self"],["pages"]],["bool"]]],[11,R[282],E,E,40,[[["self"],["bytes"]],[[R[280]],[R[26],[R[280]]]]]],[11,"lt",E,E,40,[[["self"],["bytes"]],["bool"]]],[11,"le",E,E,40,[[["self"],["bytes"]],["bool"]]],[11,"gt",E,E,40,[[["self"],["bytes"]],["bool"]]],[11,"ge",E,E,40,[[["self"],["bytes"]],["bool"]]],[11,R[282],R[1196],E,52,[[["self"],[R[43]]],[[R[280]],[R[26],[R[280]]]]]],[11,"lt",E,E,52,[[["self"],[R[43]]],["bool"]]],[11,"le",E,E,52,[[["self"],[R[43]]],["bool"]]],[11,"gt",E,E,52,[[["self"],[R[43]]],["bool"]]],[11,"ge",E,E,52,[[["self"],[R[43]]],["bool"]]],[11,R[282],E,E,51,[[["self"],[R[184]]],[[R[280]],[R[26],[R[280]]]]]],[11,"lt",E,E,51,[[["self"],[R[184]]],["bool"]]],[11,"le",E,E,51,[[["self"],[R[184]]],["bool"]]],[11,"gt",E,E,51,[[["self"],[R[184]]],["bool"]]],[11,"ge",E,E,51,[[["self"],[R[184]]],["bool"]]],[11,R[282],E,E,50,[[["self"],[R[47]]],[[R[280]],[R[26],[R[280]]]]]],[11,"lt",E,E,50,[[["self"],[R[47]]],["bool"]]],[11,"le",E,E,50,[[["self"],[R[47]]],["bool"]]],[11,"gt",E,E,50,[[["self"],[R[47]]],["bool"]]],[11,"ge",E,E,50,[[["self"],[R[47]]],["bool"]]],[11,R[282],R[1171],E,0,[[["self"],[R[281]]],[[R[280]],[R[26],[R[280]]]]]],[11,R[282],R[1196],E,49,[[["self"],[R[39]]],[[R[280]],[R[26],[R[280]]]]]],[11,"lt",E,E,49,[[["self"],[R[39]]],["bool"]]],[11,"le",E,E,49,[[["self"],[R[39]]],["bool"]]],[11,"gt",E,E,49,[[["self"],[R[39]]],["bool"]]],[11,"ge",E,E,49,[[["self"],[R[39]]],["bool"]]],[11,R[282],E,E,58,[[["self"],[R[46]]],[[R[280]],[R[26],[R[280]]]]]],[11,"lt",E,E,58,[[["self"],[R[46]]],["bool"]]],[11,"le",E,E,58,[[["self"],[R[46]]],["bool"]]],[11,"gt",E,E,58,[[["self"],[R[46]]],["bool"]]],[11,"ge",E,E,58,[[["self"],[R[46]]],["bool"]]],[11,R[282],E,E,48,[[["self"],[R[54]]],[[R[280]],[R[26],[R[280]]]]]],[11,"lt",E,E,48,[[["self"],[R[54]]],["bool"]]],[11,"le",E,E,48,[[["self"],[R[54]]],["bool"]]],[11,"gt",E,E,48,[[["self"],[R[54]]],["bool"]]],[11,"ge",E,E,48,[[["self"],[R[54]]],["bool"]]],[11,R[282],E,E,57,[[["self"],[R[187]]],[[R[280]],[R[26],[R[280]]]]]],[11,"lt",E,E,57,[[["self"],[R[187]]],["bool"]]],[11,"le",E,E,57,[[["self"],[R[187]]],["bool"]]],[11,"gt",E,E,57,[[["self"],[R[187]]],["bool"]]],[11,"ge",E,E,57,[[["self"],[R[187]]],["bool"]]],[11,"cmp",E,E,48,[[["self"],[R[54]]],[R[280]]]],[11,"cmp",E,E,49,[[["self"],[R[39]]],[R[280]]]],[11,"cmp",R[1197],E,40,[[["self"],["bytes"]],[R[280]]]],[11,"cmp",R[1196],E,54,[[["self"],[R[186]]],[R[280]]]],[11,"cmp",R[1171],E,0,[[["self"],[R[281]]],[R[280]]]],[11,"cmp",R[1196],E,57,[[["self"],[R[187]]],[R[280]]]],[11,"cmp",E,E,55,[[["self"],[R[44]]],[R[280]]]],[11,"cmp",E,E,50,[[["self"],[R[47]]],[R[280]]]],[11,"cmp",R[1197],E,41,[[["self"],["pages"]],[R[280]]]],[11,"cmp",R[1196],E,58,[[["self"],[R[46]]],[R[280]]]],[11,"cmp",E,E,53,[[["self"],[R[218]]],[R[280]]]],[11,"cmp",E,E,52,[[["self"],[R[43]]],[R[280]]]],[11,"cmp",E,E,56,[[["self"],[R[283]]],[R[280]]]],[11,"cmp",E,E,59,[[["self"],[R[284]]],[R[280]]]],[11,"cmp",E,E,51,[[["self"],[R[184]]],[R[280]]]],[11,"from",E,E,26,[[["type"],[R[1200],["type"]]],["type"]]],[11,"from",E,E,48,[[[R[54]],[R[1200],[R[54]]]],[R[54]]]],[11,"from",E,E,57,[[[R[1200],[R[187]]],[R[187]]],[R[187]]]],[11,"from",E,E,22,[[[R[1200],[R[79]]],[R[79]]],[R[90]]]],[11,"from",E,E,54,[[[R[1200],[R[186]]],[R[186]]],[R[186]]]],[11,"from",E,E,51,[[[R[1200],[R[184]]],[R[184]]],[R[184]]]],[11,"from",E,E,60,[[[R[1200],[R[1113]]],[R[1113]]],[R[40]]]],[11,"load",R[1198],E,64,[[["self"],[R[297]]],[[R[16]],[R[18]],[R[2],[R[16],R[18]]]]]],[11,R[1201],E,E,64,[[["self"],[R[297]],["backend"]],[[R[16]],[R[18]],[R[2],[R[16],R[18]]]]]],[11,"store",E,E,64,[[["self"],[R[297]],[R[16]]],[[R[18]],[R[2],[R[18]]]]]],[11,R[285],R[1171],E,20,[[],["self"]]],[11,"clone",E,E,20,[[["self"]],["backend"]]],[11,"eq",E,E,20,[[["self"],["backend"]],["bool"]]],[11,R[303],E,E,20,[[["self"]]]],[11,"fmt",E,E,20,[[["self"],[R[304]]],[R[2]]]],[11,"from_str",E,E,20,[[["str"]],[[R[0]],["backend"],[R[2],["backend",R[0]]]]]],[11,R[306],E,E,20,[[["self"],["__s"]],[R[2]]]],[11,R[307],E,E,20,[[["__d"]],[R[2]]]],[11,"new",E,R[1252],2,[[],[R[125]]]],[11,"push",E,R[1253],2,[[["self"],["m"]]]],[11,"new",E,R[1251],3,[[["cgen"]],[R[1250]]]],[11,"new",R[1194],R[1344],5,[[["value"]],["global"]]],[11,R[1345],E,R[1346],5,[[["value"]],["global"]]],[11,R[118],E,R[1347],5,[[["self"]],[R[293]]]],[11,"set",E,R[1348],5,[[["self"],["value"]]]],[11,"get",E,R[1349],5,[[["self"]],["value"]]],[11,"new",R[1171],R[1358],6,[[],[R[37]]]],[11,R[209],E,R[1359],6,[[["f"]],[R[37]]]],[11,"register",E,R[1360],6,[[["self"],["s"],["n"]],[["box",[R[1361]]],[R[26],["box"]]]]],[11,R[1362],E,R[1363],6,[[["self"],["func"],["str"]],[R[26]]]],[11,R[1364],E,R[1365],6,[[["self"],["func"],["str"]],[R[26]]]],[11,"clone_ref",E,R[1366],6,[[["self"]],[R[37]]]],[11,"call",E,R[1380],8,[[["self"]],[[R[2],["vec",R[298]]],[R[298]],["vec",["value"]]]]],[11,R[79],E,R[1381],8,[[["self"]],[R[90]]]],[11,"raw",E,R[1382],8,[[["self"]]]],[11,"load",E,R[1367],9,[[["self"],[T]],[R[2]]]],[11,"func",E,R[1368],9,[[["self"],["str"]],[[R[278]],["func",["wasm"]],[R[2],["func",R[278]]]]]],[11,R[1369],E,R[1370],9,[[["self"],["str"]],[[R[278]],[R[2],["usize",R[278]]],["usize"]]]],[11,"dyn_func",E,R[1371],9,[[["self"],["str"]],[[R[2],["dynfunc",R[278]]],["dynfunc"],[R[278]]]]],[11,"call",E,R[1372],9,[[["self"],["str"]],[[R[2],["vec",R[298]]],[R[298]],["vec",["value"]]]]],[11,"context",E,R[1373],9,[[["self"]],["ctx"]]],[11,R[1374],E,R[1375],9,[[["self"]],["ctx"]]],[11,"exports",E,R[1376],9,[[["self"]],["exportiter"]]],[11,R[16],E,R[1377],9,[[["self"]],[R[16]]]],[11,R[211],E,R[1378],9,[[["self"],[R[94]]],["u64"]]],[11,R[212],E,R[1379],9,[[["self"],[R[94]],["u64"]]]],[11,"new",E,R[1385],10,[[["u32"]],[R[752]]]],[11,"offset",E,R[1386],10,[[],["u32"]]],[11,"deref",E,R[104],10,[[[R[96]]],[["cell"],[R[26],["cell"]]]]],[11,R[105],E,R[106],10,[[[R[96]]],[["cell"],[R[26],["cell"]]]]],[11,"deref",E,R[104],10,[[["u32"],[R[96]]],[R[26]]]],[11,R[105],E,R[106],10,[[["u32"],[R[96]]],[R[26]]]],[11,R[614],E,R[1387],10,[[["u32"],[R[96]]],[[R[26],["str"]],["str"]]]],[11,R[1388],E,R[1389],10,[[[R[96]]],[[R[26],["str"]],["str"]]]],[11,"new",R[1195],R[1391],11,[[[R[108]]],[[R[96]],[R[41]],[R[2],[R[96],R[41]]]]]],[11,R[118],E,R[1392],11,[[["self"]],[R[108]]]],[11,"grow",E,R[1393],11,[[["self"],["pages"]],[["pages"],[R[103]],[R[2],["pages",R[103]]]]]],[11,"size",E,R[1394],11,[[["self"]],["pages"]]],[11,"view",E,R[1395],11,[[["self"]],[[R[1202]],[R[119],[R[1202]]]]]],[11,R[1203],R[1171],R[1396],12,[[["self"],[R[37]]],[["error"],[R[2],[R[92],"error"]],[R[92]]]]],[11,"cache",E,R[1397],12,[[["self"]],[["error"],[R[2],[R[23],"error"]],[R[23]]]]],[11,"info",E,R[1398],12,[[["self"]],[R[28]]]],[11,"new",R[1194],R[1399],13,[[[R[160]]],[["table"],[R[2],["table",R[41]]],[R[41]]]]],[11,R[118],E,R[1400],13,[[["self"]],[R[160]]]],[11,"set",E,R[1401],13,[[["self"],["u32"],["element"]],[R[2]]]],[11,"size",E,R[1402],13,[[["self"]],["u32"]]],[11,"grow",E,R[1403],13,[[["self"],["u32"]],[["u32"],[R[2],["u32",R[103]]],[R[103]]]]],[11,R[1404],E,R[1405],13,[[["self"]]]],[11,"ty",R[1196],R[1435],14,[[["self"]],["type"]]],[11,"to_u128",E,R[1436],14,[[["self"]],["u128"]]],[11,"new",R[1171],E,15,[[[R[22]],[R[42]],[R[210]]],["ctx"]]],[11,R[209],E,E,15,[[[R[42]],[R[22]],[R[210]]],["ctx"]]],[11,R[96],E,R[1460],15,[[["self"],["u32"]],[R[96]]]],[11,R[1461],E,R[1462],15,[[["self"],["u32"]]]],[11,R[1463],E,R[1464],15,[[["self"]],[R[26]]]],[11,R[459],E,R[1465],15,[[["self"]],["usize"]]],[11,R[211],E,R[1466],15,[[["self"],[R[94]]],["u64"]]],[11,R[212],E,R[1467],15,[[["self"],[R[94]],["u64"]]]],[11,R[1468],E,R[1469],15,[[["self"],[R[186]]],[[R[2],["vec",R[298]]],[R[298]],["vec",["value"]]]]],[11,R[1470],E,E,15,[[],["u8"]]],[11,R[1471],E,E,15,[[],["u8"]]],[11,R[1472],E,E,15,[[],["u8"]]],[11,R[1473],E,E,15,[[],["u8"]]],[11,R[1474],E,E,15,[[],["u8"]]],[11,R[1475],E,E,15,[[],["u8"]]],[11,R[1476],E,E,15,[[],["u8"]]],[11,R[1477],E,E,15,[[],["u8"]]],[11,R[1478],E,E,15,[[],["u8"]]],[11,R[1479],E,E,15,[[],["u8"]]],[11,R[1480],E,E,15,[[],["u8"]]],[11,R[1481],E,E,15,[[],["u8"]]],[11,R[1482],E,E,15,[[],["u8"]]],[11,R[1483],E,E,15,[[],["u8"]]],[11,R[1484],E,E,15,[[],["u8"]]],[11,"new",E,R[1406],16,[[["f"]],[["func",["host"]],["host"]]]],[11,"params",E,R[1407],16,[[["self"]]]],[11,R[467],E,R[1408],16,[[["self"]]]],[11,R[1409],E,R[1410],16,[[["self"]],[[R[89],["func"]],["func"]]]],[11,"call",E,R[171],16,[[["self"]],[[R[2],[R[168]]],[R[168]]]]],[11,"call",E,R[171],16,[[["self"],["a"]],[[R[2],[R[168]]],[R[168]]]]],[11,"call",E,R[171],16,[[["self"],["a"],["b"]],[[R[2],[R[168]]],[R[168]]]]],[11,"call",E,R[171],16,[[["self"],["a"],["c"],["b"]],[[R[2],[R[168]]],[R[168]]]]],[11,"call",E,R[171],16,[[["self"],["a"],["c"],["d"],["b"]],[[R[2],[R[168]]],[R[168]]]]],[11,"call",E,R[171],16,[[["self"],["a"],["e"],["c"],["d"],["b"]],[[R[2],[R[168]]],[R[168]]]]],[11,"call",E,R[171],16,[[["self"],["a"],["e"],["c"],["d"],["b"],["f"]],[[R[2],[R[168]]],[R[168]]]]],[11,"call",E,R[171],16,[[["self"],["f"],["a"],["e"],["c"],["d"],["b"],["g"]],[[R[2],[R[168]]],[R[168]]]]],[11,"call",E,R[171],16,[[["self"],["h"],["f"],["a"],["e"],["c"],["d"],["b"],["g"]],[[R[2],[R[168]]],[R[168]]]]],[11,"call",E,R[171],16,[[["self"],["h"],["i"],["f"],["a"],["e"],["c"],["d"],["b"],["g"]],[[R[2],[R[168]]],[R[168]]]]],[11,"call",E,R[171],16,[[["self"],["h"],["i"],["f"],["a"],["j"],["e"],["c"],["d"],["b"],["g"]],[[R[2],[R[168]]],[R[168]]]]],[11,"call",E,R[171],16,[[["self"],["h"],["i"],["f"],["k"],["a"],["j"],["e"],["c"],["d"],["b"],["g"]],[[R[2],[R[168]]],[R[168]]]]],[11,"call",E,R[171],16,[[["self"],["h"],["i"],["f"],["k"],["a"],["j"],["l"],["e"],["c"],["d"],["b"],["g"]],[[R[2],[R[168]]],[R[168]]]]],[11,"call",E,R[171],16,[[["self"],["h"],["i"],["m"],["f"],["k"],["a"],["j"],["l"],["e"],["c"],["d"],["b"],["g"]],[[R[2],[R[168]]],[R[168]]]]],[11,"call",E,R[171],16,[[["m"],["k"],["a"],["e"],["c"],["i"],["g"],["self"],["f"],["l"],["j"],["n"],["d"],["b"],["h"]],[[R[2],[R[168]]],[R[168]]]]],[11,"call",E,R[171],16,[[["m"],["k"],["a"],["o"],["e"],["c"],["i"],["g"],["self"],["f"],["l"],["j"],["n"],["d"],["b"],["h"]],[[R[2],[R[168]]],[R[168]]]]],[11,"call",E,R[171],16,[[["m"],["k"],["a"],["o"],["e"],["c"],["i"],["g"],["self"],["f"],["l"],["j"],["n"],["p"],["d"],["b"],["h"]],[[R[2],[R[168]]],[R[168]]]]],[11,"call",E,R[171],16,[[["m"],["k"],["a"],["o"],["q"],["e"],["c"],["i"],["g"],["self"],["f"],["l"],["j"],["n"],["p"],["d"],["b"],["h"]],[[R[2],[R[168]]],[R[168]]]]],[11,"call",E,R[171],16,[[["r"],["m"],["k"],["a"],["o"],["q"],["e"],["c"],["i"],["g"],["self"],["f"],["l"],["j"],["n"],["p"],["d"],["b"],["h"]],[[R[2],[R[168]]],[R[168]]]]],[11,"call",E,R[171],16,[[["r"],["m"],["k"],["a"],["o"],["q"],["e"],["c"],["i"],["s"],["g"],["self"],["f"],["l"],["j"],["n"],["p"],["d"],["b"],["h"]],[[R[2],[R[168]]],[R[168]]]]],[11,"call",E,R[171],16,[[["r"],[T],["m"],["k"],["a"],["o"],["q"],["e"],["c"],["i"],["s"],["g"],["self"],["f"],["l"],["j"],["n"],["p"],["d"],["b"],["h"]],[[R[2],[R[168]]],[R[168]]]]],[11,"call",E,R[171],16,[[["r"],[T],["m"],["k"],["a"],["o"],["q"],["e"],["c"],["i"],["s"],["g"],["self"],[U],["f"],["l"],["j"],["n"],["p"],["d"],["b"],["h"]],[[R[2],[R[168]]],[R[168]]]]],[11,"call",E,R[171],16,[[["r"],[T],["m"],["k"],["a"],["o"],["q"],["e"],["c"],["i"],["s"],["g"],["self"],[U],["f"],["l"],["j"],["v"],["n"],["p"],["d"],["b"],["h"]],[[R[2],[R[168]]],[R[168]]]]],[11,"call",E,R[171],16,[[["r"],[T],["m"],["k"],["a"],["o"],["q"],["e"],["c"],["i"],["s"],["g"],["self"],[U],["w"],["f"],["l"],["j"],["v"],["n"],["p"],["d"],["b"],["h"]],[[R[2],[R[168]]],[R[168]]]]],[11,"call",E,R[171],16,[[["r"],[T],["x"],["m"],["k"],["a"],["o"],["q"],["e"],["c"],["i"],["s"],["g"],["self"],[U],["w"],["f"],["l"],["j"],["v"],["n"],["p"],["d"],["b"],["h"]],[[R[2],[R[168]]],[R[168]]]]],[11,"call",E,R[171],16,[[["r"],[T],["x"],["m"],["k"],["a"],["o"],["q"],["e"],["c"],["i"],["s"],["g"],["self"],[U],["w"],["y"],["f"],["l"],["j"],["v"],["n"],["p"],["d"],["b"],["h"]],[[R[2],[R[168]]],[R[168]]]]],[11,"call",E,R[171],16,[[["r"],[T],["x"],["m"],["k"],["a"],["o"],["q"],["e"],["c"],["i"],["s"],["g"],["self"],[U],["w"],["y"],["f"],["l"],["j"],["v"],["z"],["n"],["p"],["d"],["b"],["h"]],[[R[2],[R[168]]],[R[168]]]]],[11,R[117],R[1195],R[1390],21,[[["self"]],[[R[119],[R[117]]],[R[117]]]]],[11,"new",R[1196],R[1439],22,[[["params"],[R[467]]],[R[90]]]],[11,"params",E,R[1440],22,[[["self"]]]],[11,R[467],E,R[1441],22,[[["self"]]]],[11,R[1442],E,R[1443],22,[[["self"]],["bool"]]],[11,"new",E,R[1437],24,[[["bool"],[R[26],["pages"]],["pages"]],[[R[108]],[R[2],[R[108],R[0]]],[R[0]]]]],[11,R[178],E,R[1438],24,[[["self"]],[R[289]]]],[11,R[1448],R[1197],R[1449],41,[[["pages"]],[[R[2],["pages",R[188]]],[R[188]],["pages"]]]],[11,"bytes",E,R[1450],41,[[],["bytes"]]],[11,R[182],R[1196],R[183],48,[[[R[28]]],[[R[54]],[R[185],[R[54]]]]]],[11,R[180],E,R[181],49,[[[R[28]]],[R[54]]]],[11,R[180],E,R[181],50,[[[R[28]]],[R[54]]]],[11,R[182],E,R[183],51,[[[R[28]]],[[R[184]],[R[185],[R[184]]]]]],[11,R[180],E,R[181],52,[[[R[28]]],[R[184]]]],[11,R[180],E,R[181],53,[[[R[28]]],[R[184]]]],[11,R[182],E,R[183],54,[[[R[28]]],[[R[186]],[R[185],[R[186]]]]]],[11,R[180],E,R[181],55,[[[R[28]]],[R[186]]]],[11,R[180],E,R[181],56,[[[R[28]]],[R[186]]]],[11,R[182],E,R[183],57,[[[R[28]]],[[R[185],[R[187]]],[R[187]]]]],[11,R[180],E,R[181],58,[[[R[28]]],[R[187]]]],[11,R[180],E,R[181],59,[[[R[28]]],[R[187]]]],[11,"local",E,R[1444],61,[[],[R[26]]]],[11,"import",E,R[1445],61,[[],[R[26]]]],[11,R[307],R[1198],R[1244],62,[[],[["error"],[R[2],[R[23],"error"]],[R[23]]]]],[11,"info",E,R[1245],62,[[["self"]],[R[28]]]],[11,"consume",E,E,62,[[]]],[11,R[306],E,R[1246],62,[[["self"]],[[R[2],["vec","error"]],["error"],["vec",["u8"]]]]],[11,R[49],E,R[1241],63,[[],[R[297]]]],[11,"encode",E,R[1242],63,[[],[R[0]]]],[11,"decode",E,R[1243],63,[[["str"]],[[R[297]],["error"],[R[2],[R[297],"error"]]]]]],"p":[[4,R[315]],[3,"Features"],[3,R[325]],[3,R[322]],[4,"Export"],[3,"Global"],[3,R[338]],[8,R[341]],[3,"DynFunc"],[3,R[82]],[3,"WasmPtr"],[3,"Memory"],[3,"Module"],[3,"Table"],[4,"Value"],[3,"Ctx"],[3,"Func"],[3,R[419]],[8,"Compiler"],[3,R[310]],[4,"Backend"],[3,R[115]],[3,"FuncSig"],[3,R[378]],[3,R[380]],[3,R[377]],[4,"Type"],[4,"CacheError"],[4,R[70]],[4,R[71]],[4,R[72]],[4,R[73]],[4,R[74]],[4,R[75]],[4,"Error"],[4,R[331]],[4,R[332]],[4,R[333]],[4,R[334]],[4,R[335]],[3,"Bytes"],[3,"Pages"],[8,R[396]],[8,R[397]],[4,R[393]],[4,R[394]],[3,R[379]],[8,R[398]],[3,R[381]],[3,R[382]],[3,R[383]],[3,R[384]],[3,R[385]],[3,R[386]],[3,R[387]],[3,R[388]],[3,R[389]],[3,R[390]],[3,R[391]],[3,R[392]],[3,"SigIndex"],[4,R[395]],[3,"Artifact"],[3,"WasmHash"],[3,R[1204]],[8,"Cache"],[3,"Array"],[3,"Item"],[3,R[113]]]};
searchIndex["wasmer_runtime_c_api"]={"doc":"Wasmer Runtime C API","i":[[3,R[1528],R[1499],E,N,N],[12,"min",E,E,0,N],[12,"max",E,E,0,N],[3,R[1553],E,E,N,N],[12,"has_some",E,E,1,N],[12,"some",E,E,1,N],[3,R[1501],E,E,N,N],[12,"bytes",E,E,2,N],[12,"bytes_len",E,E,2,N],[4,R[1503],E,"The `wasmer_result_t` struct is a type that represents…",N,N],[13,"WASMER_OK",E,"Represents a success.",3,N],[13,"WASMER_ERROR",E,"Represents a failure.",3,N],[5,"get_slice_checked",E,"Gets a slice from a pointer and a length, returning an…",N,[[["usize"]]]],[0,"error",E,"Read runtime errors.",N,N],[3,"CApiError",R[1529],E,N,N],[12,"msg",E,E,4,N],[5,"update_last_error",E,E,N,[[["error"]]]],[5,"take_last_error",E,"Retrieve the most recent error, clearing it in the process.",N,[[],[[R[26],["box"]],["box",["error"]]]]],[5,"wasmer_last_error_length",E,"Gets the length in bytes of the last error if any.",N,[[],["c_int"]]],[5,"wasmer_last_error_message",E,"Gets the last error message if any into the provided…",N,[[["c_int"]],["c_int"]]],[17,"LAST_ERROR",E,E,N,N],[0,R[81],R[1499],"Create, read, destroy export definitions (function,…",N,N],[3,R[1554],R[1530],"Intermediate representation of an `Export` instance that…",N,N],[12,"name",E,R[1500],5,N],[12,R[81],E,"The export instance.",5,N],[12,R[92],E,"The instance that holds the export.",5,N],[3,R[1538],E,"Opaque pointer to `NamedExport`.",N,N],[3,R[1539],E,"Opaque pointer to `wasmer_export_t`.",N,N],[3,R[1555],E,"Intermediate representation of a vector of `NamedExport`…",N,N],[12,"0",E,E,6,N],[3,R[1540],E,"Opaque pointer to the opaque structure…",N,N],[3,R[1556],E,"Intermediate representation of an export descriptor that…",N,N],[12,"name",E,R[1500],7,N],[12,"kind",E,"The export kind.",7,N],[3,R[1541],E,"Opaque pointer to `NamedExportDescriptor`.",N,N],[3,R[1557],E,"Intermediate representation of a vector of…",N,N],[12,"0",E,E,8,N],[3,R[1542],E,"Opaque pointer to `NamedExportDescriptors`.",N,N],[19,R[1543],E,"Union of import/export value.",N,N],[12,"func",E,E,9,N],[12,"table",E,E,9,N],[12,R[96],E,E,9,N],[12,"global",E,E,9,N],[4,R[1502],E,"List of export/import kinds.",N,N],[13,"WASM_FUNCTION",E,"The export/import is a function.",10,N],[13,"WASM_GLOBAL",E,"The export/import is a global.",10,N],[13,"WASM_MEMORY",E,"The export/import is a memory.",10,N],[13,"WASM_TABLE",E,"The export/import is a table.",10,N],[5,"wasmer_export_descriptors",E,"Gets export descriptors for the given module",N,[[]]],[5,"wasmer_export_descriptors_destroy",E,"Frees the memory for the given export descriptors",N,[[]]],[5,"wasmer_export_descriptors_len",E,"Gets the length of the export descriptors",N,[[],["c_int"]]],[5,"wasmer_export_descriptors_get",E,"Gets export descriptor by index",N,[[["c_int"]]]],[5,"wasmer_export_descriptor_name",E,"Gets name for the export descriptor",N,[[],[R[1501]]]],[5,"wasmer_export_descriptor_kind",E,R[1506],N,[[],[R[1502]]]],[5,"wasmer_exports_destroy",E,"Frees the memory for the given exports.",N,[[]]],[5,"wasmer_exports_len",E,"Gets the length of the exports",N,[[],["c_int"]]],[5,"wasmer_exports_get",E,"Gets wasmer_export by index",N,[[["c_int"]]]],[5,"wasmer_export_kind",E,"Gets wasmer_export kind",N,[[],[R[1502]]]],[5,"wasmer_export_func_params_arity",E,R[1507],N,[[],[R[1503]]]],[5,"wasmer_export_func_params",E,R[1508],N,[[["u32"]],[R[1503]]]],[5,"wasmer_export_func_returns",E,R[1509],N,[[["u32"]],[R[1503]]]],[5,"wasmer_export_func_returns_arity",E,R[1510],N,[[],[R[1503]]]],[5,"wasmer_export_to_func",E,"Gets export func from export",N,[[]]],[5,"wasmer_export_to_memory",E,"Gets a memory pointer from an export pointer.",N,[[],[R[1503]]]],[5,"wasmer_export_name",E,"Gets name from wasmer_export",N,[[],[R[1501]]]],[5,"wasmer_export_func_call",E,"Calls a `func` with the provided parameters. Results are…",N,[[["c_uint"]],[R[1503]]]],[11,"to_str",E,E,10,[[["self"]],["str"]]],[0,"global",R[1499],"Create, set, get and destroy global variables of an…",N,N],[3,R[1505],R[1531],E,N,N],[12,"mutable",E,E,11,N],[12,"kind",E,E,11,N],[3,R[1544],E,E,N,N],[5,"wasmer_global_new",E,"Creates a new Global and returns a pointer to it. The…",N,[[[R[1504]],["bool"]]]],[5,"wasmer_global_get",E,"Gets the value stored by the given Global",N,[[],[R[1504]]]],[5,"wasmer_global_set",E,"Sets the value stored by the given Global",N,[[[R[1504]]]]],[5,"wasmer_global_get_descriptor",E,"Returns a descriptor (type, mutability) of the given Global",N,[[],[R[1505]]]],[5,"wasmer_global_destroy",E,"Frees memory for the given Global",N,[[]]],[0,"import",R[1499],"Create, read, destroy import definitions (function,…",N,N],[3,R[1558],R[1526],E,N,N],[12,"module_name",E,E,12,N],[12,"import_name",E,E,12,N],[12,"tag",E,E,12,N],[12,"value",E,E,12,N],[3,R[1562],E,E,N,N],[3,R[1545],E,E,N,N],[3,R[1546],E,E,N,N],[3,R[1547],E,E,N,N],[3,R[1548],E,E,N,N],[3,R[1511],E,R[1512],N,N],[12,"alias",E,R[1513],13,N],[12,R[1514],E,R[1515],13,N],[3,R[1559],E,"private wrapper data type used for casting",N,N],[12,"0",E,E,14,N],[3,R[1560],E,E,N,N],[12,"0",E,E,15,N],[3,R[1561],E,E,N,N],[12,R[16],E,E,16,N],[12,"name",E,E,16,N],[12,"kind",E,E,16,N],[4,"Version",E,E,N,N],[13,"Unknown",E,R[1516],17,N],[13,"Latest",E,R[1517],17,N],[13,R[802],E,R[803],17,N],[13,R[804],E,R[805],17,N],[5,"wasmer_import_object_new",E,"Creates a new empty import object. See also…",N,[[]]],[5,R[1518],E,R[1519],N,[[["c_uint"]]]],[5,R[1520],E,R[1521],N,[[["c_uchar"],["c_uint"]]]],[5,R[1522],E,R[1523],N,[[],["version"]]],[5,R[1524],E,R[1525],N,[[]]],[5,"wasmer_import_object_get_import",E,"Gets an entry from an ImportObject at the name and…",N,[[["u32"],[R[1501]]],[R[1503]]]],[5,"wasmer_import_object_iterate_functions",E,"Create an iterator over the functions in the import…",N,[[]]],[5,"wasmer_import_object_iter_next",E,"Writes the next value to `import`. `WASMER_ERROR` is…",N,[[],[R[1503]]]],[5,"wasmer_import_object_iter_at_end",E,"Returns true if further calls to…",N,[[],["bool"]]],[5,"wasmer_import_object_iter_destroy",E,"Frees the memory allocated by…",N,[[]]],[5,"wasmer_import_object_imports_destroy",E,"Frees the memory allocated in…",N,[[["u32"]]]],[5,"wasmer_import_object_extend",E,"Extends an existing import object with new imports",N,[[["c_uint"]],[R[1503]]]],[5,"wasmer_import_descriptors",E,"Gets import descriptors for the given module",N,[[]]],[5,"wasmer_import_descriptors_destroy",E,"Frees the memory for the given import descriptors",N,[[]]],[5,"wasmer_import_descriptors_len",E,"Gets the length of the import descriptors",N,[[],["c_uint"]]],[5,"wasmer_import_descriptors_get",E,"Gets import descriptor by index",N,[[["c_uint"]]]],[5,"wasmer_import_descriptor_name",E,"Gets name for the import descriptor",N,[[],[R[1501]]]],[5,"wasmer_import_descriptor_module_name",E,"Gets module name for the import descriptor",N,[[],[R[1501]]]],[5,"wasmer_import_descriptor_kind",E,R[1506],N,[[],[R[1502]]]],[5,"wasmer_import_func_params_arity",E,R[1507],N,[[],[R[1503]]]],[5,"wasmer_import_func_new",E,"Creates new host function, aka imported function. `func`…",N,[[["c_uint"]]]],[5,"wasmer_trap",E,"Stop the execution of a host function, aka imported…",N,[[],[R[1503]]]],[5,"wasmer_import_func_params",E,R[1508],N,[[["c_uint"]],[R[1503]]]],[5,"wasmer_import_func_returns",E,R[1509],N,[[["c_uint"]],[R[1503]]]],[5,"wasmer_import_func_returns_arity",E,R[1510],N,[[],[R[1503]]]],[5,"wasmer_import_func_destroy",E,"Frees memory for the given Func",N,[[]]],[5,"wasmer_import_object_destroy",E,"Frees memory of the given ImportObject",N,[[]]],[0,"wasi",E,E,N,N],[3,R[1511],"wasmer_runtime_c_api::import::wasi",R[1512],N,N],[12,"alias",E,R[1513],13,N],[12,R[1514],E,R[1515],13,N],[4,"Version",E,E,N,N],[13,"Unknown",E,R[1516],17,N],[13,"Latest",E,R[1517],17,N],[13,R[802],E,R[803],17,N],[13,R[804],E,R[805],17,N],[5,R[1518],E,R[1519],N,[[["c_uint"]]]],[5,R[1520],E,R[1521],N,[[["c_uchar"],["c_uint"]]]],[5,R[1522],E,R[1523],N,[[],["version"]]],[5,"wasmer_wasi_generate_import_object_inner",E,"Inner function that wraps error handling",N,[[["version"]],[[R[2],[R[1527]]],[R[1527]]]]],[5,R[1524],E,R[1525],N,[[]]],[11,"as_tuple",R[1526],"Converts the data into owned, Rust types",13,[[["self"]],[[R[2],[R[1527]]],[R[1527]]]]],[0,R[92],R[1499],"Instantiate a module, call functions, and read exports.",N,N],[3,R[1563],R[1532],"Opaque pointer to a `wasmer_runtime::Instance` value in…",N,N],[3,R[1564],E,"Opaque pointer to a `wasmer_runtime::Ctx` value in Rust.",N,N],[5,"wasmer_instantiate",E,"Creates a new WebAssembly instance from the given bytes…",N,[[["u32"],["c_int"]],[R[1503]]]],[5,"wasmer_instance_context_get",E,"Returns the instance context. Learn more by looking at the…",N,[[]]],[5,"wasmer_instance_call",E,"Calls an exported function of a WebAssembly instance by…",N,[[["u32"]],[R[1503]]]],[5,"wasmer_instance_exports",E,"Gets all the exports of the given WebAssembly instance.",N,[[]]],[5,"wasmer_instance_context_data_set",E,"Sets the data that can be hold by an instance context.",N,[[]]],[5,"wasmer_instance_context_memory",E,"Gets the `memory_idx`th memory of the instance.",N,[[["u32"]]]],[5,"wasmer_instance_context_data_get",E,"Gets the data that can be hold by an instance.",N,[[]]],[5,"wasmer_instance_destroy",E,"Frees memory for the given `wasmer_instance_t`.",N,[[]]],[0,R[96],R[1499],"Create, read, write, grow, destroy memory of an instance.",N,N],[3,R[1549],R[1533],E,N,N],[5,"wasmer_memory_new",E,"Creates a new Memory for the given descriptor and…",N,[[[R[1528]]],[R[1503]]]],[5,"wasmer_memory_grow",E,"Grows a Memory by the given number of pages.",N,[[["u32"]],[R[1503]]]],[5,"wasmer_memory_length",E,"Returns the current length in pages of the given memory",N,[[],["u32"]]],[5,"wasmer_memory_data",E,"Gets the start pointer to the bytes within a Memory",N,[[]]],[5,"wasmer_memory_data_length",E,"Gets the size in bytes of a Memory",N,[[],["u32"]]],[5,"wasmer_memory_destroy",E,"Frees memory for the given Memory",N,[[]]],[0,R[16],R[1499],"Compile, validate, instantiate, serialize, and destroy…",N,N],[3,R[1565],R[1534],E,N,N],[3,R[1566],E,E,N,N],[5,"wasmer_compile",E,"Creates a new Module from the given wasm bytes.",N,[[["u32"]],[R[1503]]]],[5,"wasmer_validate",E,"Validates a sequence of bytes hoping it represents a valid…",N,[[["u32"]],["bool"]]],[5,"wasmer_module_instantiate",E,"Creates a new Instance from the given module and imports.",N,[[["c_int"]],[R[1503]]]],[5,"wasmer_module_import_instantiate",E,"Given: * A prepared `wasmer` import-object * A compiled…",N,[[],[R[1503]]]],[5,"wasmer_module_serialize",E,"Serialize the given Module.",N,[[],[R[1503]]]],[5,"wasmer_serialized_module_bytes",E,"Get bytes of the serialized module.",N,[[],[R[1501]]]],[5,"wasmer_serialized_module_from_bytes",E,"Transform a sequence of bytes into a serialized module.",N,[[["u32"]],[R[1503]]]],[5,"wasmer_module_deserialize",E,"Deserialize the given serialized module.",N,[[],[R[1503]]]],[5,"wasmer_serialized_module_destroy",E,"Frees memory for the given serialized Module.",N,[[]]],[5,"wasmer_module_destroy",E,"Frees memory for the given Module",N,[[]]],[0,"table",R[1499],"Create, grow, destroy tables of an instance.",N,N],[3,R[1550],R[1535],E,N,N],[5,"wasmer_table_new",E,"Creates a new Table for the given descriptor and…",N,[[[R[1528]]],[R[1503]]]],[5,"wasmer_table_grow",E,"Grows a Table by the given number of elements.",N,[[["u32"]],[R[1503]]]],[5,"wasmer_table_length",E,"Returns the current length of the given Table",N,[[],["u32"]]],[5,"wasmer_table_destroy",E,"Frees memory for the given Table",N,[[]]],[0,R[169],R[1499],"Trampoline emitter for transforming function calls.",N,N],[3,R[1567],R[1536],E,N,N],[3,R[1568],E,E,N,N],[3,R[1569],E,E,N,N],[5,"wasmer_trampoline_buffer_builder_new",E,"Creates a new trampoline builder.",N,[[]]],[5,"wasmer_trampoline_buffer_builder_add_context_trampoline",E,"Adds a context trampoline to the builder.",N,[[],["usize"]]],[5,"wasmer_trampoline_buffer_builder_add_callinfo_trampoline",E,"Adds a callinfo trampoline to the builder.",N,[[["u32"]],["usize"]]],[5,"wasmer_trampoline_buffer_builder_build",E,"Finalizes the trampoline builder into an executable buffer.",N,[[]]],[5,"wasmer_trampoline_buffer_destroy",E,"Destroys the trampoline buffer if not null.",N,[[]]],[5,"wasmer_trampoline_buffer_get_trampoline",E,"Returns the callable pointer for the trampoline with index…",N,[[["usize"]]]],[5,"wasmer_trampoline_get_context",E,"Returns the context added by `add_context_trampoline`,…",N,[[]]],[0,"value",R[1499],"Create and map Rust to WebAssembly values.",N,N],[3,R[1504],R[1537],"Represents a WebAssembly type and value pair, i.e.…",N,N],[12,"tag",E,"The value type.",18,N],[12,"value",E,"The value.",18,N],[19,R[1552],E,R[1175],N,N],[12,"I32",E,E,19,N],[12,"I64",E,E,19,N],[12,"F32",E,E,19,N],[12,"F64",E,E,19,N],[4,R[1551],E,"Represents all possibles WebAssembly value types.",N,N],[13,"WASM_I32",E,"Represents the `i32` WebAssembly type.",20,N],[13,"WASM_I64",E,"Represents the `i64` WebAssembly type.",20,N],[13,"WASM_F32",E,"Represents the `f32` WebAssembly type.",20,N],[13,"WASM_F64",E,"Represents the `f64` WebAssembly type.",20,N],[11,R[110],R[1499],"Get the data as a slice",2,[[["self"]]]],[11,"as_vec",E,"Copy the data into an owned Vec",2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"as_str",E,"Read the data as a &str, returns an error if the string is…",2,[[["self"]],[[R[2],["str",R[1527]]],[R[1527]],["str"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[3],E,E,0,[[[U]],[R[2]]]],[11,R[4],E,E,0,[[],[R[2]]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[R[8]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[3],E,E,1,[[[U]],[R[2]]]],[11,R[4],E,E,1,[[],[R[2]]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[R[8]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[3],E,E,2,[[[U]],[R[2]]]],[11,R[4],E,E,2,[[],[R[2]]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[R[8]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[3],E,E,3,[[[U]],[R[2]]]],[11,R[4],E,E,3,[[],[R[2]]]],[11,R[5],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"]],[R[8]]]],[11,"from",R[1529],E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[252],E,E,4,[[["self"]],[R[0]]]],[11,R[3],E,E,4,[[[U]],[R[2]]]],[11,R[4],E,E,4,[[],[R[2]]]],[11,R[5],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[7],E,E,4,[[["self"]],[R[8]]]],[11,"from",R[1530],E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[3],E,E,5,[[[U]],[R[2]]]],[11,R[4],E,E,5,[[],[R[2]]]],[11,R[5],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[7],E,E,5,[[["self"]],[R[8]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[247],E,E,21,[[["self"]],[T]]],[11,R[246],E,E,21,[[["self"],[T]]]],[11,R[3],E,E,21,[[[U]],[R[2]]]],[11,R[4],E,E,21,[[],[R[2]]]],[11,R[5],E,E,21,[[["self"]],[T]]],[11,R[6],E,E,21,[[["self"]],[T]]],[11,R[7],E,E,21,[[["self"]],[R[8]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[247],E,E,22,[[["self"]],[T]]],[11,R[246],E,E,22,[[["self"],[T]]]],[11,R[3],E,E,22,[[[U]],[R[2]]]],[11,R[4],E,E,22,[[],[R[2]]]],[11,R[5],E,E,22,[[["self"]],[T]]],[11,R[6],E,E,22,[[["self"]],[T]]],[11,R[7],E,E,22,[[["self"]],[R[8]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[3],E,E,6,[[[U]],[R[2]]]],[11,R[4],E,E,6,[[],[R[2]]]],[11,R[5],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[7],E,E,6,[[["self"]],[R[8]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[247],E,E,23,[[["self"]],[T]]],[11,R[246],E,E,23,[[["self"],[T]]]],[11,R[3],E,E,23,[[[U]],[R[2]]]],[11,R[4],E,E,23,[[],[R[2]]]],[11,R[5],E,E,23,[[["self"]],[T]]],[11,R[6],E,E,23,[[["self"]],[T]]],[11,R[7],E,E,23,[[["self"]],[R[8]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[3],E,E,7,[[[U]],[R[2]]]],[11,R[4],E,E,7,[[],[R[2]]]],[11,R[5],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[7],E,E,7,[[["self"]],[R[8]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[247],E,E,24,[[["self"]],[T]]],[11,R[246],E,E,24,[[["self"],[T]]]],[11,R[3],E,E,24,[[[U]],[R[2]]]],[11,R[4],E,E,24,[[],[R[2]]]],[11,R[5],E,E,24,[[["self"]],[T]]],[11,R[6],E,E,24,[[["self"]],[T]]],[11,R[7],E,E,24,[[["self"]],[R[8]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[3],E,E,8,[[[U]],[R[2]]]],[11,R[4],E,E,8,[[],[R[2]]]],[11,R[5],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[7],E,E,8,[[["self"]],[R[8]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[247],E,E,25,[[["self"]],[T]]],[11,R[246],E,E,25,[[["self"],[T]]]],[11,R[3],E,E,25,[[[U]],[R[2]]]],[11,R[4],E,E,25,[[],[R[2]]]],[11,R[5],E,E,25,[[["self"]],[T]]],[11,R[6],E,E,25,[[["self"]],[T]]],[11,R[7],E,E,25,[[["self"]],[R[8]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[247],E,E,9,[[["self"]],[T]]],[11,R[246],E,E,9,[[["self"],[T]]]],[11,R[3],E,E,9,[[[U]],[R[2]]]],[11,R[4],E,E,9,[[],[R[2]]]],[11,R[5],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[T]]],[11,R[7],E,E,9,[[["self"]],[R[8]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[247],E,E,10,[[["self"]],[T]]],[11,R[246],E,E,10,[[["self"],[T]]]],[11,R[3],E,E,10,[[[U]],[R[2]]]],[11,R[4],E,E,10,[[],[R[2]]]],[11,R[5],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[T]]],[11,R[7],E,E,10,[[["self"]],[R[8]]]],[11,R[248],E,E,10,[[["self"],["k"]],["bool"]]],[11,"from",R[1531],E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[247],E,E,11,[[["self"]],[T]]],[11,R[246],E,E,11,[[["self"],[T]]]],[11,R[3],E,E,11,[[[U]],[R[2]]]],[11,R[4],E,E,11,[[],[R[2]]]],[11,R[5],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[T]]],[11,R[7],E,E,11,[[["self"]],[R[8]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[247],E,E,26,[[["self"]],[T]]],[11,R[246],E,E,26,[[["self"],[T]]]],[11,R[3],E,E,26,[[[U]],[R[2]]]],[11,R[4],E,E,26,[[],[R[2]]]],[11,R[5],E,E,26,[[["self"]],[T]]],[11,R[6],E,E,26,[[["self"]],[T]]],[11,R[7],E,E,26,[[["self"]],[R[8]]]],[11,"from",R[1526],E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[3],E,E,12,[[[U]],[R[2]]]],[11,R[4],E,E,12,[[],[R[2]]]],[11,R[5],E,E,12,[[["self"]],[T]]],[11,R[6],E,E,12,[[["self"]],[T]]],[11,R[7],E,E,12,[[["self"]],[R[8]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[3],E,E,27,[[[U]],[R[2]]]],[11,R[4],E,E,27,[[],[R[2]]]],[11,R[5],E,E,27,[[["self"]],[T]]],[11,R[6],E,E,27,[[["self"]],[T]]],[11,R[7],E,E,27,[[["self"]],[R[8]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[247],E,E,28,[[["self"]],[T]]],[11,R[246],E,E,28,[[["self"],[T]]]],[11,R[3],E,E,28,[[[U]],[R[2]]]],[11,R[4],E,E,28,[[],[R[2]]]],[11,R[5],E,E,28,[[["self"]],[T]]],[11,R[6],E,E,28,[[["self"]],[T]]],[11,R[7],E,E,28,[[["self"]],[R[8]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[247],E,E,29,[[["self"]],[T]]],[11,R[246],E,E,29,[[["self"],[T]]]],[11,R[3],E,E,29,[[[U]],[R[2]]]],[11,R[4],E,E,29,[[],[R[2]]]],[11,R[5],E,E,29,[[["self"]],[T]]],[11,R[6],E,E,29,[[["self"]],[T]]],[11,R[7],E,E,29,[[["self"]],[R[8]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[247],E,E,30,[[["self"]],[T]]],[11,R[246],E,E,30,[[["self"],[T]]]],[11,R[3],E,E,30,[[[U]],[R[2]]]],[11,R[4],E,E,30,[[],[R[2]]]],[11,R[5],E,E,30,[[["self"]],[T]]],[11,R[6],E,E,30,[[["self"]],[T]]],[11,R[7],E,E,30,[[["self"]],[R[8]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[247],E,E,31,[[["self"]],[T]]],[11,R[246],E,E,31,[[["self"],[T]]]],[11,R[3],E,E,31,[[[U]],[R[2]]]],[11,R[4],E,E,31,[[],[R[2]]]],[11,R[5],E,E,31,[[["self"]],[T]]],[11,R[6],E,E,31,[[["self"]],[T]]],[11,R[7],E,E,31,[[["self"]],[R[8]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[3],E,E,13,[[[U]],[R[2]]]],[11,R[4],E,E,13,[[],[R[2]]]],[11,R[5],E,E,13,[[["self"]],[T]]],[11,R[6],E,E,13,[[["self"]],[T]]],[11,R[7],E,E,13,[[["self"]],[R[8]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[3],E,E,14,[[[U]],[R[2]]]],[11,R[4],E,E,14,[[],[R[2]]]],[11,R[5],E,E,14,[[["self"]],[T]]],[11,R[6],E,E,14,[[["self"]],[T]]],[11,R[7],E,E,14,[[["self"]],[R[8]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[3],E,E,15,[[[U]],[R[2]]]],[11,R[4],E,E,15,[[],[R[2]]]],[11,R[5],E,E,15,[[["self"]],[T]]],[11,R[6],E,E,15,[[["self"]],[T]]],[11,R[7],E,E,15,[[["self"]],[R[8]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[3],E,E,16,[[[U]],[R[2]]]],[11,R[4],E,E,16,[[],[R[2]]]],[11,R[5],E,E,16,[[["self"]],[T]]],[11,R[6],E,E,16,[[["self"]],[T]]],[11,R[7],E,E,16,[[["self"]],[R[8]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[3],E,E,17,[[[U]],[R[2]]]],[11,R[4],E,E,17,[[],[R[2]]]],[11,R[5],E,E,17,[[["self"]],[T]]],[11,R[6],E,E,17,[[["self"]],[T]]],[11,R[7],E,E,17,[[["self"]],[R[8]]]],[11,"from",R[1532],E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[3],E,E,32,[[[U]],[R[2]]]],[11,R[4],E,E,32,[[],[R[2]]]],[11,R[5],E,E,32,[[["self"]],[T]]],[11,R[6],E,E,32,[[["self"]],[T]]],[11,R[7],E,E,32,[[["self"]],[R[8]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[3],E,E,33,[[[U]],[R[2]]]],[11,R[4],E,E,33,[[],[R[2]]]],[11,R[5],E,E,33,[[["self"]],[T]]],[11,R[6],E,E,33,[[["self"]],[T]]],[11,R[7],E,E,33,[[["self"]],[R[8]]]],[11,"from",R[1533],E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[247],E,E,34,[[["self"]],[T]]],[11,R[246],E,E,34,[[["self"],[T]]]],[11,R[3],E,E,34,[[[U]],[R[2]]]],[11,R[4],E,E,34,[[],[R[2]]]],[11,R[5],E,E,34,[[["self"]],[T]]],[11,R[6],E,E,34,[[["self"]],[T]]],[11,R[7],E,E,34,[[["self"]],[R[8]]]],[11,"from",R[1534],E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[3],E,E,35,[[[U]],[R[2]]]],[11,R[4],E,E,35,[[],[R[2]]]],[11,R[5],E,E,35,[[["self"]],[T]]],[11,R[6],E,E,35,[[["self"]],[T]]],[11,R[7],E,E,35,[[["self"]],[R[8]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[3],E,E,36,[[[U]],[R[2]]]],[11,R[4],E,E,36,[[],[R[2]]]],[11,R[5],E,E,36,[[["self"]],[T]]],[11,R[6],E,E,36,[[["self"]],[T]]],[11,R[7],E,E,36,[[["self"]],[R[8]]]],[11,"from",R[1535],E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[247],E,E,37,[[["self"]],[T]]],[11,R[246],E,E,37,[[["self"],[T]]]],[11,R[3],E,E,37,[[[U]],[R[2]]]],[11,R[4],E,E,37,[[],[R[2]]]],[11,R[5],E,E,37,[[["self"]],[T]]],[11,R[6],E,E,37,[[["self"]],[T]]],[11,R[7],E,E,37,[[["self"]],[R[8]]]],[11,"from",R[1536],E,38,[[[T]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,R[3],E,E,38,[[[U]],[R[2]]]],[11,R[4],E,E,38,[[],[R[2]]]],[11,R[5],E,E,38,[[["self"]],[T]]],[11,R[6],E,E,38,[[["self"]],[T]]],[11,R[7],E,E,38,[[["self"]],[R[8]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[3],E,E,39,[[[U]],[R[2]]]],[11,R[4],E,E,39,[[],[R[2]]]],[11,R[5],E,E,39,[[["self"]],[T]]],[11,R[6],E,E,39,[[["self"]],[T]]],[11,R[7],E,E,39,[[["self"]],[R[8]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,"into",E,E,40,[[],[U]]],[11,R[3],E,E,40,[[[U]],[R[2]]]],[11,R[4],E,E,40,[[],[R[2]]]],[11,R[5],E,E,40,[[["self"]],[T]]],[11,R[6],E,E,40,[[["self"]],[T]]],[11,R[7],E,E,40,[[["self"]],[R[8]]]],[11,"from",R[1537],E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[247],E,E,18,[[["self"]],[T]]],[11,R[246],E,E,18,[[["self"],[T]]]],[11,R[3],E,E,18,[[[U]],[R[2]]]],[11,R[4],E,E,18,[[],[R[2]]]],[11,R[5],E,E,18,[[["self"]],[T]]],[11,R[6],E,E,18,[[["self"]],[T]]],[11,R[7],E,E,18,[[["self"]],[R[8]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[247],E,E,19,[[["self"]],[T]]],[11,R[246],E,E,19,[[["self"],[T]]]],[11,R[3],E,E,19,[[[U]],[R[2]]]],[11,R[4],E,E,19,[[],[R[2]]]],[11,R[5],E,E,19,[[["self"]],[T]]],[11,R[6],E,E,19,[[["self"]],[T]]],[11,R[7],E,E,19,[[["self"]],[R[8]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[247],E,E,20,[[["self"]],[T]]],[11,R[246],E,E,20,[[["self"],[T]]]],[11,R[3],E,E,20,[[[U]],[R[2]]]],[11,R[4],E,E,20,[[],[R[2]]]],[11,R[5],E,E,20,[[["self"]],[T]]],[11,R[6],E,E,20,[[["self"]],[T]]],[11,R[7],E,E,20,[[["self"]],[R[8]]]],[11,"from",R[1530],E,7,[[],["self"]]],[11,"from",R[1526],E,17,[[["c_uchar"]],["self"]]],[11,"from",R[1537],E,18,[[["value"]],["self"]]],[11,"from",E,E,20,[[["type"]],["self"]]],[11,"from",E,E,20,[[["type"]],["self"]]],[11,"clone",R[1530],E,21,[[["self"]],[R[1538]]]],[11,"clone",E,E,22,[[["self"]],[R[1539]]]],[11,"clone",E,E,23,[[["self"]],[R[1540]]]],[11,"clone",E,E,24,[[["self"]],[R[1541]]]],[11,"clone",E,E,25,[[["self"]],[R[1542]]]],[11,"clone",E,E,9,[[["self"]],[R[1543]]]],[11,"clone",E,E,10,[[["self"]],[R[1502]]]],[11,"clone",R[1531],E,11,[[["self"]],[R[1505]]]],[11,"clone",E,E,26,[[["self"]],[R[1544]]]],[11,"clone",R[1526],E,28,[[["self"]],[R[1545]]]],[11,"clone",E,E,29,[[["self"]],[R[1546]]]],[11,"clone",E,E,30,[[["self"]],[R[1547]]]],[11,"clone",E,E,31,[[["self"]],[R[1548]]]],[11,"clone",R[1533],E,34,[[["self"]],[R[1549]]]],[11,"clone",R[1535],E,37,[[["self"]],[R[1550]]]],[11,"clone",R[1537],E,20,[[["self"]],[R[1551]]]],[11,"clone",E,E,19,[[["self"]],[R[1552]]]],[11,"clone",E,E,18,[[["self"]],[R[1504]]]],[11,"eq",R[1530],E,10,[[["self"],[R[1502]]],["bool"]]],[11,"eq",R[1526],E,17,[[["self"],["version"]],["bool"]]],[11,R[303],R[1530],E,10,[[["self"]]]],[11,"fmt",R[1529],E,4,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,4,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",R[1526],E,17,[[["self"],[R[304]]],[R[2]]]],[11,R[3],R[1530],E,10,[[["u32"]],[R[2]]]]],"p":[[3,R[1528]],[3,R[1553]],[3,R[1501]],[4,R[1503]],[3,"CApiError"],[3,R[1554]],[3,R[1555]],[3,R[1556]],[3,R[1557]],[19,R[1543]],[4,R[1502]],[3,R[1505]],[3,R[1558]],[3,R[1511]],[3,R[1559]],[3,R[1560]],[3,R[1561]],[4,"Version"],[3,R[1504]],[19,R[1552]],[4,R[1551]],[3,R[1538]],[3,R[1539]],[3,R[1540]],[3,R[1541]],[3,R[1542]],[3,R[1544]],[3,R[1562]],[3,R[1545]],[3,R[1546]],[3,R[1547]],[3,R[1548]],[3,R[1563]],[3,R[1564]],[3,R[1549]],[3,R[1565]],[3,R[1566]],[3,R[1550]],[3,R[1567]],[3,R[1568]],[3,R[1569]]]};
searchIndex["wasmer_runtime_core"]={"doc":"Wasmer Runtime Core Library","i":[[3,"DynFunc",R[31],R[86],N,N],[12,R[79],E,E,0,N],[12,R[16],E,E,0,N],[12,R[87],E,E,0,N],[12,R[88],E,E,0,N],[3,R[82],E,R[83],N,N],[12,R[16],E,R[84],1,N],[12,"inner",E,E,1,N],[12,R[85],E,E,1,N],[3,"Module",E,R[123],N,N],[12,"inner",E,E,2,N],[3,"Func",E,R[164],N,N],[12,"inner",E,E,3,N],[12,"func",E,E,3,N],[12,R[205],E,E,3,N],[12,"vmctx",E,E,3,N],[12,R[98],E,E,3,N],[5,R[1205],E,R[1206],N,[[[R[15]]],[[R[16]],[R[17],[R[16]]]]]],[5,R[1207],E,"The same as `compile_with` but changes the compiler…",N,[[[R[15]],[R[21]]],[[R[16]],[R[17],[R[16]]]]]],[5,"validate",E,R[1208],N,[[],["bool"]]],[5,"validate_and_report_errors",E,"The same as `validate` but with an Error message on failure",N,[[],[[R[2],[R[0]]],[R[0]]]]],[5,"validate_and_report_errors_with_features",E,"The same as `validate_and_report_errors` but with a…",N,[[[R[19]]],[[R[2],[R[0]]],[R[0]]]]],[5,"load_cache_with",E,"Creates a new module from the given cache [`Artifact`] for…",N,[[[R[15]],[R[23]]],[[R[16]],[R[2],[R[16],R[18]]],[R[18]]]]],[0,"macros",E,E,N,N],[0,"backend",E,E,N,N],[3,R[130],R[20],R[131],N,N],[3,R[308],E,"Information of an inline breakpoint.",N,N],[12,"size",E,"Size in bytes taken by this breakpoint's instruction…",4,N],[12,"ty",E,"Type of the inline breakpoint.",4,N],[3,"Token",E,"This type cannot be constructed from outside the runtime…",N,N],[12,"_private",E,E,5,N],[3,"Features",E,R[1209],N,N],[12,"simd",E,R[1210],6,N],[12,"threads",E,R[1211],6,N],[3,R[309],E,"Use this to point to a compiler config struct provided by…",N,N],[12,"0",E,E,7,N],[3,R[310],E,R[1212],N,N],[12,"symbol_map",E,R[1213],8,N],[12,R[476],E,R[1214],8,N],[12,R[477],E,R[1215],8,N],[12,R[478],E,R[1216],8,N],[12,R[479],E,R[1217],8,N],[12,R[19],E,E,8,N],[12,"triple",E,E,8,N],[12,"cpu_name",E,E,8,N],[12,R[1218],E,E,8,N],[12,R[1219],E,E,8,N],[3,R[311],E,"An exception table for a `RunnableModule`.",N,N],[12,"offset_to_code",E,"Mappings from offsets in generated machine code to the…",9,N],[4,R[312],E,"The target architecture for code generation.",N,N],[13,"X64",E,"x86-64.",10,N],[13,"Aarch64",E,"Aarch64 (ARM64).",10,N],[4,R[313],E,"The type of an inline breakpoint.",N,N],[13,"Middleware",E,"A middleware invocation breakpoint.",11,N],[4,R[314],E,E,N,N],[13,"Default",E,E,12,N],[13,"Enable",E,E,12,N],[13,"Disable",E,E,12,N],[4,R[315],E,R[1220],N,N],[13,R[166],E,R[1221],13,N],[13,"Arithmetic",E,R[1222],13,N],[13,"Memory",E,R[1223],13,N],[0,"sys",E,E,N,N],[3,"Memory",R[152],R[142],N,N],[12,"ptr",E,E,14,N],[12,"size",E,E,14,N],[12,R[143],E,E,14,N],[12,"fd",E,E,14,N],[4,"Protect",E,R[144],N,N],[13,"None",E,R[145],15,N],[13,"Read",E,R[146],15,N],[13,R[147],E,R[148],15,N],[13,"ReadExec",E,R[149],15,N],[13,R[150],E,R[151],15,N],[17,"_IMPL_SERIALIZE_FOR_ExceptionTable",R[20],E,N,N],[17,"_IMPL_DESERIALIZE_FOR_ExceptionTable",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_ExceptionCode",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_ExceptionCode",E,E,N,N],[8,"Compiler",E,E,N,N],[10,"compile",E,R[1224],16,[[["self"],[R[21]],["token"]],[[R[22]],[R[17],[R[22]]]]]],[10,R[55],E,E,16,[[["self"],[R[23]],["token"]],[[R[2],[R[22],R[18]]],[R[18]],[R[22]]]]],[8,R[316],E,E,N,N],[10,"get_func",E,"This returns a pointer to the function designated by the…",17,[[["self"],[R[28]],[R[39]]],[[R[89],["func"]],[R[26],[R[89]]]]]],[11,R[533],E,E,17,[[["self"]],[[R[26],[R[24]]],[R[24]]]]],[11,R[534],E,E,17,[[["self"]],[[R[25]],[R[26],[R[25]]]]]],[11,R[535],E,E,17,[[["self"]],[[R[27]],[R[26],[R[27]]]]]],[11,R[536],E,E,17,[[["self"],["usize"]],["bool"]]],[10,R[162],E,"A wasm trampoline contains the necessary data to…",17,[[["self"],[R[28]],[R[40]]],[[R[26],["wasm"]],["wasm"]]]],[10,R[537],E,"Trap an error.",17,[[["self"],["box",["any"]],["any"]]]],[11,"get_code",E,"Returns the machine code associated with this module.",17,[[["self"]],[R[26]]]],[11,R[538],E,"Returns the beginning offsets of all functions, including…",17,[[["self"]],[["vec",["usize"]],[R[26],["vec"]]]]],[11,R[539],E,"Returns the beginning offsets of all local functions.",17,[[["self"]],[["vec",["usize"]],[R[26],["vec"]]]]],[11,R[540],E,R[541],17,[[["self"],[R[29]]],[["usize"],[R[26],["usize"]]]]],[11,R[542],E,R[543],17,[[["self"],[R[29]]],[[R[30]],[R[26],[R[30]]]]]],[8,"CacheGen",E,E,N,N],[10,R[544],E,E,18,[[["self"]],[[R[18]],[R[2],[R[18]]]]]],[11,R[49],E,E,5,[[],["self"]]],[11,"get_specific",E,"Obtain the backend-specific compiler config struct.",7,[[["self"]],[[T],[R[26]]]]],[11,"new",E,E,9,[[],["self"]]],[0,"backing",R[31],E,N,N],[3,R[317],R[249],E,N,N],[12,"0",E,E,19,N],[3,R[192],E,R[193],N,N],[12,R[32],E,R[194],20,N],[12,"tables",E,E,20,N],[12,R[201],E,E,20,N],[12,R[33],E,R[195],20,N],[12,R[34],E,E,20,N],[12,R[35],E,E,20,N],[12,R[196],E,R[197],20,N],[12,R[198],E,E,20,N],[12,R[199],E,E,20,N],[3,R[189],E,R[190],N,N],[12,R[32],E,E,21,N],[12,"tables",E,E,21,N],[12,R[201],E,E,21,N],[12,R[191],E,E,21,N],[12,R[33],E,E,21,N],[12,R[34],E,E,21,N],[12,R[35],E,E,21,N],[5,"import_functions",E,E,N,[[[R[22]],[R[37]]],[[R[38],[R[36]]],[R[36],[R[47],R[48]]]]]],[5,"import_memories",E,E,N,[[[R[22]],[R[37]]],[R[38]]]],[5,"import_tables",E,E,N,[[[R[22]],[R[37]]],[R[38]]]],[5,"import_globals",E,E,N,[[[R[22]],[R[37]]],[R[38]]]],[17,R[207],E,R[208],N,N],[11,"new",E,E,20,[[[R[22]],[R[42]]],[R[38]]]],[11,"generate_local_functions",E,E,20,[[[R[22]]],[[R[39]],[R[36],[R[39]]]]]],[11,"generate_sigindices",E,E,20,[[[R[28]]],[[R[36],[R[40],"sigid"]],[R[40]],["sigid"]]]],[11,"generate_memories",E,E,20,[[[R[22]]],[[R[2],[R[36],R[41]]],[R[36],[R[43],R[96]]],[R[41]]]]],[11,"validate_memories",E,"Validate each locally-defined memory in the Module.",20,[[[R[22]],[R[42]]],[R[38]]]],[11,"finalize_memories",E,"Initialize each locally-defined memory in the Module.",20,[[[R[22]],[R[42]],[R[45]]],[[R[36],[R[43]]],[R[38],[R[36]]]]]],[11,"generate_tables",E,E,20,[[[R[22]]],[[R[36],[R[44],"table"]],[R[44]],["table"]]]],[11,"validate_tables",E,"This validates all of the locally-defined tables in the…",20,[[[R[22]],[R[42]],[R[45]]],[R[38]]]],[11,"finalize_tables",E,"This initializes all of the locally-defined tables in the…",20,[[[R[45]],[R[22]],[R[42]]],[[R[38],[R[36]]],[R[36],[R[44]]]]]],[11,"generate_globals",E,E,20,[[[R[22]],[R[42]]],[[R[38],[R[36]]],[R[36],[R[46],"global"]]]]],[11,"finalize_globals",E,E,20,[[[R[45]]],[[R[36],[R[46]]],[R[46]]]]],[11,"new",E,"Creates a new `ImportBacking` from the given…",21,[[[R[22]],[R[37]]],[R[38]]]],[11,R[1101],E,"Gets a `ImportedFunc` from the given `ImportedFuncIndex`.",21,[[["self"],[R[47]]],[R[48]]]],[0,"cache",R[31],R[1225],N,N],[3,"WasmHash",R[250],R[1226],N,N],[12,"0",E,E,22,N],[3,R[318],E,"The header of a cache file.",N,N],[12,"magic",E,E,23,N],[12,"version",E,E,23,N],[12,"data_len",E,E,23,N],[3,R[319],E,E,N,N],[12,"info",E,E,24,N],[12,"backend_metadata",E,E,24,N],[12,"compiled_code",E,E,24,N],[3,"Artifact",E,R[1227],N,N],[12,"inner",E,E,25,N],[4,R[320],E,"Indicates the invalid type of invalid cache file",N,N],[13,"InvalidSize",E,"Given cache header slice does not match the expected size…",26,N],[13,"InvalidMagic",E,"Given cache header slice does not contain the expected…",26,N],[4,"Error",E,R[1228],N,N],[13,"IoError",E,R[1229],27,N],[13,R[1230],E,R[1231],27,N],[13,R[1232],E,R[1233],27,N],[13,"Unknown",E,R[1234],27,N],[13,R[1235],E,R[1236],27,N],[13,R[1237],E,R[1238],27,N],[13,R[1239],E,R[1240],27,N],[7,"WASMER_CACHE_MAGIC",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_WasmHash",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_WasmHash",E,E,N,N],[17,"CURRENT_CACHE_VERSION",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_ArtifactInner",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_ArtifactInner",E,E,N,N],[17,"WASMER_VERSION_HASH",E,"A unique ID generated from the version of Wasmer for use…",N,N],[11,R[49],E,R[1241],22,[[],["self"]]],[11,"encode",E,R[1242],22,[[],[R[0]]]],[11,"decode",E,R[1243],22,[[["str"]],[[R[2],["error"]],["error"]]]],[11,"into_array",E,E,22,[[]]],[11,"read_from_slice",E,E,23,[[],[["error"],[R[2],["error"]]]]],[11,"read_from_slice_mut",E,E,23,[[],[["error"],[R[2],["error"]]]]],[11,R[110],E,E,23,[[["self"]]]],[11,"from_parts",E,E,25,[[["box",[R[28]]],[R[96]],["box"],[R[28]]],["self"]]],[11,R[307],E,R[1244],25,[[],[[R[2],["error"]],["error"]]]],[11,"info",E,R[1245],25,[[["self"]],[R[28]]]],[11,"consume",E,E,25,[[]]],[11,R[306],E,R[1246],25,[[["self"]],[["vec",["u8"]],[R[2],["vec","error"]],["error"]]]],[0,"codegen",R[31],"The codegen module provides common functions and data…",N,N],[3,R[321],R[251],"Information for a breakpoint",N,N],[12,"fault",E,"Fault.",28,N],[3,R[322],E,R[1247],N,N],[12,R[1248],E,E,29,N],[12,R[50],E,E,29,N],[12,R[51],E,E,29,N],[12,R[52],E,E,29,N],[12,R[53],E,E,29,N],[3,R[323],E,"A simple generator for a `StreamingCompiler`.",N,N],[12,R[50],E,E,30,N],[12,R[51],E,E,30,N],[12,R[52],E,E,30,N],[12,R[53],E,E,30,N],[3,R[324],E,"A sink for parse events.",N,N],[12,"buffer",E,E,31,N],[3,R[325],E,R[1249],N,N],[12,"chain",E,E,32,N],[4,"Event",E,"An event generated during parsing of a wasm binary",N,N],[13,R[78],E,"An internal event created by the parser used to provide…",33,N],[13,"Wasm",E,"An event generated by parsing a wasm operator",33,N],[13,"WasmOwned",E,"An event generated by parsing a wasm operator that…",33,N],[4,R[326],E,"Kinds of `InternalEvent`s created during parsing.",N,N],[13,"FunctionBegin",E,"A function parse is about to begin.",34,N],[13,"FunctionEnd",E,"A function parsing has just completed.",34,N],[13,"Breakpoint",E,"A breakpoint emitted during parsing.",34,N],[13,"SetInternal",E,"Indicates setting an internal field.",34,N],[13,"GetInternal",E,"Indicates getting an internal field.",34,N],[5,"validating_parser_config",E,"Create a new `ValidatingParserConfig` with the given…",N,[[[R[19]]],["validatingparserconfig"]]],[5,"validate_with_features",E,E,N,[[[R[19]]],[R[17]]]],[6,"BreakpointHandler",E,"A type that defines a function pointer, which is called…",N,N],[6,"BreakpointMap",E,"Maps instruction pointers to their breakpoint handlers.",N,N],[8,R[327],E,"A trait that represents the functions needed to be…",N,N],[10,"new",E,"Creates a new module code generator.",35,[[],["self"]]],[10,R[546],E,"Creates a new module code generator for specified target.",35,[[[R[0]],[R[26],[R[0]]]],["self"]]],[10,R[238],E,"Returns the backend id associated with this MCG.",35,[[],["str"]]],[11,R[545],E,"It sets if the current compiler requires validation before…",35,[[],["bool"]]],[11,R[553],E,"Feeds the compiler config.",35,[[["self"],[R[21]]],[R[2]]]],[10,R[552],E,"Adds an import function.",35,[[["self"]],[R[2]]]],[10,R[550],E,"Sets the signatures.",35,[[["self"],[R[90]],["map",[R[40],R[90]]],[R[40]]],[R[2]]]],[10,R[551],E,"Sets function signatures.",35,[[["self"],[R[54]],[R[40]],["map",[R[54],R[40]]]],[R[2]]]],[10,R[547],E,"Checks the precondition for a module.",35,[[["self"],[R[28]]],[R[2]]]],[10,R[548],E,"Creates a new function and returns the function-scope code…",35,[[["self"],["arc",["rwlock"]],["rwlock",[R[28]]]],[[R[2]],["fcg"]]]],[10,R[58],E,"Finalizes this module.",35,[[[R[28]]],[R[2]]]],[10,R[55],E,"Creates a module from cache.",35,[[[R[23]],["token"]],[[R[2],[R[22],R[18]]],[R[18]],[R[22]]]]],[8,R[328],E,"A trait that represents the signature required to…",N,N],[16,"Error",E,"The error type for this middleware's functions.",36,N],[10,R[56],E,"Processes the given event, module info and sink.",36,[[["self"],["event"],[R[28]],[R[57]]],[R[2]]]],[8,R[329],E,E,N,N],[10,R[56],E,E,37,[[["self"],["event"],[R[28]],[R[57]]],[[R[2],[R[0]]],[R[0]]]]],[8,R[330],E,"The function-scope code generator trait.",N,N],[10,R[554],E,"Sets the return type.",38,[[["self"],["wptype"]],[R[2]]]],[10,R[555],E,"Adds a parameter to the function.",38,[[["self"],["wptype"]],[R[2]]]],[10,R[556],E,"Adds `n` locals to the function.",38,[[["self"],["wptype"],["usize"]],[R[2]]]],[10,R[557],E,"Called before the first call to `feed_opcode`.",38,[[["self"],[R[28]]],[R[2]]]],[10,R[56],E,"Called for each operator.",38,[[["self"],["event"],[R[28]]],[R[2]]]],[10,R[58],E,"Finalizes the function.",38,[[["self"]],[R[2]]]],[11,"new",E,"Create a new `StreamingCompiler`.",30,[[],[R[1250]]]],[11,"new",E,R[1251],29,[[["cgen"]],["self"]]],[11,"push",E,"Push a new `Event` to this sink.",31,[[["self"],["event"]]]],[11,"new",E,R[1252],32,[[],[R[125]]]],[11,"push",E,R[1253],32,[[["self"],["functionmiddleware"]]]],[11,"run",E,"Run this chain with the provided function code generator,…",32,[[["self"],[R[26]],["fcg"],[R[28]],["event"]],[[R[2],[R[0]]],[R[0]]]]],[0,"error",R[31],R[1254],N,N],[4,R[70],R[59],R[1255],N,N],[13,R[1256],E,R[1257],39,N],[12,"msg",R[60],R[61],39,N],[13,R[1258],R[59],R[1259],39,N],[12,"msg",R[60],R[61],39,N],[4,R[71],R[59],R[1260],N,N],[13,R[1261],E,R[1262],40,N],[12,R[62],R[63],R[64],40,N],[12,"name",E,"Name.",40,N],[12,R[65],E,R[66],40,N],[12,"found",E,R[67],40,N],[13,R[1263],R[59],R[1264],40,N],[12,R[62],R[63],R[64],40,N],[12,"name",E,"Name.",40,N],[12,R[65],E,R[66],40,N],[12,"found",E,R[67],40,N],[13,R[1265],R[59],R[1266],40,N],[12,R[62],R[63],R[64],40,N],[12,"name",E,"Name.",40,N],[13,R[1267],R[59],R[1268],40,N],[12,R[62],R[63],R[64],40,N],[12,"name",E,"Name.",40,N],[12,R[65],E,R[66],40,N],[12,"found",E,R[67],40,N],[13,R[1269],R[59],R[1270],40,N],[12,R[62],R[63],R[64],40,N],[12,"name",E,"Name.",40,N],[12,R[65],E,R[66],40,N],[12,"found",E,R[67],40,N],[13,R[1271],R[59],R[1272],40,N],[12,R[62],R[63],R[64],40,N],[12,"name",E,"Name.",40,N],[12,R[65],E,R[66],40,N],[12,"found",E,R[67],40,N],[13,"Generic",R[59],R[1273],40,N],[12,"message",R[63],R[1274],40,N],[4,R[72],R[59],R[1275],N,N],[13,"Trap",E,"Trap.",41,N],[12,"msg",R[68],R[1276],41,N],[13,"Error",R[59],"Error.",41,N],[12,"data",R[68],R[1277],41,N],[4,R[73],R[59],R[1278],N,N],[13,"Signature",E,R[1279],42,N],[12,R[65],R[69],R[1280],42,N],[12,"found",E,R[1281],42,N],[13,R[1282],R[59],R[1283],42,N],[12,"name",R[69],"Name.",42,N],[13,R[1284],R[59],R[1285],42,N],[12,"name",R[69],"Name.",42,N],[4,R[74],R[59],R[1286],N,N],[13,"Resolve",E,R[1287],43,N],[13,"Runtime",E,R[1288],43,N],[4,R[75],E,R[1289],N,N],[13,R[1290],E,R[1291],44,N],[13,R[1292],E,R[1293],44,N],[13,R[1294],E,R[1295],44,N],[4,"Error",E,R[1296],N,N],[13,R[70],E,R[1297],45,N],[13,R[71],E,R[1298],45,N],[13,R[72],E,R[1299],45,N],[13,R[73],E,R[1300],45,N],[13,R[74],E,R[1301],45,N],[13,R[75],E,R[1302],45,N],[4,R[331],E,R[1303],N,N],[13,R[1304],E,R[1305],46,N],[13,R[1306],E,R[1307],46,N],[13,R[76],E,R[1308],46,N],[13,R[1309],E,R[1310],46,N],[13,R[1311],E,R[77],46,N],[13,R[1312],E,R[1313],46,N],[4,R[332],E,R[1314],N,N],[13,R[76],E,R[1315],47,N],[4,R[333],E,R[1316],N,N],[13,R[1317],E,R[1318],48,N],[13,R[1319],E,R[1320],48,N],[4,R[334],E,R[77],N,N],[13,R[1321],E,R[1322],49,N],[4,R[335],E,R[1323],N,N],[13,R[1324],E,R[1325],50,N],[6,"Result",E,R[239],N,N],[6,R[1326],E,R[1327],N,N],[6,"LinkResult",E,R[1328],N,N],[6,R[1329],E,R[1330],N,N],[6,"CallResult",E,R[1331],N,N],[6,R[1332],E,R[1333],N,N],[6,R[1334],E,R[1335],N,N],[0,R[81],R[31],"The export module contains the implementation data…",N,N],[3,R[336],R[80],"Const pointer to a `Func`.",N,N],[12,"0",E,E,51,N],[3,R[337],E,"An iterator to an instance's exports.",N,N],[12,"inner",E,E,52,N],[12,"iter",E,E,52,N],[12,R[16],E,E,52,N],[4,"Context",E,"A kind of Context.",N,N],[13,"External",E,"External context include a mutable pointer to `Ctx`.",53,N],[13,"ExternalWithEnv",E,"External context with an environment include a mutable…",53,N],[13,R[78],E,"Internal context.",53,N],[4,"Export",E,R[1336],N,N],[13,"Function",E,R[1337],54,N],[12,"func","wasmer_runtime_core::export::Export",R[1338],54,N],[12,"ctx",E,R[1339],54,N],[12,R[79],E,R[1340],54,N],[13,"Memory",R[80],R[1341],54,N],[13,"Table",E,R[1342],54,N],[13,"Global",E,R[1343],54,N],[11,"new",E,"This needs to be unsafe because there is no way to check…",51,[[],["self"]]],[11,"inner",E,E,51,[[["self"]]]],[11,"new",E,E,52,[[[R[22]],["instanceinner"]],["self"]]],[0,"global",R[31],"The global module contains data structures and helper…",N,N],[3,"Global",R[253],R[1173],N,N],[12,"desc",E,E,55,N],[12,"storage",E,E,55,N],[11,"new",E,R[1344],55,[[["value"]],["self"]]],[11,R[1345],E,R[1346],55,[[["value"]],["self"]]],[11,"new_internal",E,E,55,[[["value"],["bool"]],["self"]]],[11,R[118],E,R[1347],55,[[["self"]],[R[293]]]],[11,"set",E,R[1348],55,[[["self"],["value"]]]],[11,"get",E,R[1349],55,[[["self"]],["value"]]],[11,"vm_local_global",E,E,55,[[["self"]]]],[0,"import",R[31],"The import module contains the implementation data…",N,N],[3,R[338],R[254],R[1350],N,N],[12,"map",E,E,56,N],[12,R[1351],E,E,56,N],[12,R[1352],E,R[1353],56,N],[3,R[339],E,"Iterator for an `ImportObject`'s exports.",N,N],[12,"elements",E,E,57,N],[3,R[340],E,"The top-level container for the two-level wasm imports",N,N],[12,"map",E,E,58,N],[8,R[341],E,R[1354],N,N],[10,R[272],E,R[1355],59,[[["self"],["str"]],[[R[26],[R[81]]],[R[81]]]]],[10,R[273],E,R[1356],59,[[["self"]],["vec"]]],[10,R[274],E,R[1357],59,[[["self"],[R[81]],["str"]],[R[26]]]],[8,R[342],E,R[240],N,N],[10,R[241],E,R[242],60,[[["self"]],[R[81]]]],[11,"new",E,R[1358],56,[[],["self"]]],[11,R[209],E,R[1359],56,[[["f"]],["self"]]],[11,"call_state_creator",E,E,56,[[["self"]],[R[26]]]],[11,"register",E,R[1360],56,[[["self"],["s"],["n"]],[[R[26],["box"]],["box",[R[1361]]]]]],[11,R[1362],E,R[1363],56,[[["self"],["func"],["str"]],[R[26]]]],[11,R[1364],E,R[1365],56,[[["self"],["func"],["str"]],[R[26]]]],[11,"clone_ref",E,R[1366],56,[[["self"]],["self"]]],[11,"get_objects",E,E,56,[[["self"]],["vecdeque"]]],[11,"new",E,"Create a new empty `Namespace`.",58,[[],["self"]]],[11,"insert",E,"Insert a new `Export` into the namespace with the given…",58,[[["self"],["s"],["e"]],[["box",["isexport"]],[R[26],["box"]]]]],[11,"contains_key",E,"Returns true if the `Namespace` contains the given name.",58,[[["self"],["s"]],["bool"]]],[0,R[92],R[31],"The instance module contains the implementation data…",N,N],[3,R[343],R[243],E,N,N],[12,"backing",E,E,61,N],[12,R[200],E,E,61,N],[12,"vmctx",E,E,61,N],[3,R[82],E,R[83],N,N],[12,R[16],E,R[84],1,N],[12,"inner",E,E,1,N],[12,R[85],E,E,1,N],[3,"DynFunc",E,R[86],N,N],[12,R[79],E,E,0,N],[12,R[16],E,E,0,N],[12,R[87],E,E,0,N],[12,R[88],E,E,0,N],[5,"call_func_with_index",E,E,N,[[[R[95]],["vec"],[R[28]],[R[42]],[R[54]]],[R[91]]]],[5,"call_func_with_index_inner",E,E,N,[[["wasm"],["vec"],[R[89],["func"]],[R[90]],["func"]],[R[91]]]],[11,"new",E,E,1,[[["arc",[R[22]]],[R[22]],[R[37]]],[[R[2],[R[92]]],[R[92]]]]],[11,"load",E,R[1367],1,[[["self"],["loader"]],[R[2]]]],[11,"func",E,R[1368],1,[[["self"],["str"]],[["func",["wasm"]],[R[93],["func"]]]]],[11,R[1369],E,R[1370],1,[[["self"],["str"]],[[R[93],["usize"]],["usize"]]]],[11,"dyn_func",E,R[1371],1,[[["self"],["str"]],[[R[93],["dynfunc"]],["dynfunc"]]]],[11,"call",E,R[1372],1,[[["self"],["str"]],[[R[91],["vec"]],["vec",["value"]]]]],[11,"context",E,R[1373],1,[[["self"]],["ctx"]]],[11,R[1374],E,R[1375],1,[[["self"]],["ctx"]]],[11,"exports",E,R[1376],1,[[["self"]],["exportiter"]]],[11,R[16],E,R[1377],1,[[["self"]],[R[16]]]],[11,R[211],E,R[1378],1,[[["self"],[R[94]]],["u64"]]],[11,R[212],E,R[1379],1,[[["self"],[R[94]],["u64"]]]],[11,"get_export_from_index",E,E,61,[[["self"],[R[22]],[R[290]]],[R[81]]]],[11,"get_func_from_index",E,E,61,[[["self"],[R[22]],[R[54]]]]],[11,"get_memory_from_index",E,E,61,[[["self"],[R[22]],[R[184]]],[R[96]]]],[11,"get_global_from_index",E,E,61,[[["self"],[R[22]],[R[187]]],["global"]]],[11,"get_table_from_index",E,E,61,[[["self"],[R[22]],[R[186]]],["table"]]],[11,"call",E,R[1380],0,[[["self"]],[[R[91],["vec"]],["vec",["value"]]]]],[11,R[79],E,R[1381],0,[[["self"]],[R[90]]]],[11,"raw",E,R[1382],0,[[["self"]]]],[0,"loader",R[31],"The loader module functions are used to load an instance.",N,N],[3,R[429],R[256],"A local implementation for `Loader`.",N,N],[3,R[344],E,"A local instance.",N,N],[12,"code",E,E,62,N],[12,"offsets",E,E,62,N],[3,R[345],E,"A pointer to code in memory.",N,N],[12,"ptr",E,E,63,N],[12,"size",E,E,63,N],[8,"Loader",E,"The loader trait represents the functions used to load an…",N,N],[16,R[82],E,"The type of `Instance` for the loader.",64,N],[16,"Error",E,"The error type returned by the loader.",64,N],[10,"load",E,"Loads the given module and context into an instance.",64,[[["self"],[R[95]],[R[28]],["ctx"]],[R[2]]]],[8,R[82],E,"This trait represents an instance used by the loader.",N,N],[16,"Error",E,"The error type returned by this instance.",65,N],[10,"call",E,"Call a function by id with the given args.",65,[[["self"],["usize"]],[[R[2],["u128"]],["u128"]]]],[11,R[442],E,"Read memory at the given offset and length.",65,[[["self"],["u32"]],[["vec",["u8"]],[R[2],["vec"]]]]],[11,R[443],E,"Write memory at the given offset and length.",65,[[["self"],["u32"]],[R[2]]]],[11,"new",E,"Creates a new code memory with the given size.",63,[[["usize"]],["codememory"]]],[11,"make_executable",E,"Makes this code memory executable.",63,[[["self"]]]],[11,"make_writable",E,"Makes this code memory writable.",63,[[["self"]]]],[0,R[96],R[31],R[1383],N,N],[3,R[100],R[101],R[97],N,N],[12,R[96],E,E,66,N],[12,"current",E,E,66,N],[12,"max",E,E,66,N],[3,R[107],E,R[97],N,N],[12,R[96],E,E,67,N],[12,"current",E,E,67,N],[12,"max",E,E,67,N],[3,R[113],E,R[114],N,N],[3,R[115],E,R[116],N,N],[12,"ptr",E,E,68,N],[12,"length",E,E,68,N],[12,R[98],E,E,68,N],[3,"Memory",E,R[1172],N,N],[12,"desc",E,E,69,N],[12,"variant",E,E,69,N],[3,R[346],E,"A reference to an unshared memory.",N,N],[12,R[99],E,E,70,N],[3,R[347],E,E,N,N],[12,"storage",E,E,71,N],[12,"local",E,E,71,N],[3,R[348],E,"A reference to a shared memory.",N,N],[12,R[99],E,E,72,N],[3,R[349],E,"Data structure for a shared internal memory.",N,N],[12,R[96],E,E,73,N],[12,"local",E,E,73,N],[12,"lock",E,E,73,N],[4,R[350],E,E,N,N],[13,"Unshared",E,E,74,N],[13,"Shared",E,E,74,N],[4,R[351],E,"A kind a memory.",N,N],[13,"Dynamic",E,"A dynamic memory.",75,N],[13,"Static",E,"A static memory.",75,N],[13,"SharedStatic",E,"A shared static memory.",75,N],[4,R[352],E,E,N,N],[13,"Dynamic",E,E,76,N],[13,"Static",E,E,76,N],[0,"dynamic",E,E,N,N],[3,R[100],"wasmer_runtime_core::memory::dynamic",R[97],N,N],[12,R[96],E,E,66,N],[12,"current",E,E,66,N],[12,"max",E,E,66,N],[17,"DYNAMIC_GUARD_SIZE",E,E,N,N],[11,"new",R[101],E,66,[[[R[108]],[R[102]]],[["box"],[R[41]],[R[2],["box",R[41]]]]]],[11,"size",E,R[109],66,[[["self"]],["pages"]]],[11,"grow",E,"Try to grow self by the given number of delta pages.",66,[[["self"],["pages"],[R[102]]],[["pages"],[R[103]],[R[2],["pages",R[103]]]]]],[11,R[110],E,R[111],66,[[["self"]]]],[11,R[112],E,"Get this memory represented as a mutable slice of bytes",66,[[["self"]]]],[0,"ptr",E,"A reusable pointer abstraction for getting memory from the…",N,N],[3,"Array",R[257],"Array.",N,N],[3,"Item",E,"Item.",N,N],[3,"WasmPtr",E,R[1384],N,N],[12,"offset",E,E,77,N],[12,R[98],E,E,77,N],[5,"align_pointer",E,E,N,[[["usize"]],["usize"]]],[11,"new",E,R[1385],77,[[["u32"]],["self"]]],[11,"offset",E,R[1386],77,[[],["u32"]]],[11,"deref",E,R[104],77,[[[R[96]]],[["cell"],[R[26],["cell"]]]]],[11,R[105],E,R[106],77,[[[R[96]]],[[R[26],["cell"]],["cell"]]]],[11,"deref",E,R[104],77,[[["u32"],[R[96]]],[R[26]]]],[11,R[105],E,R[106],77,[[["u32"],[R[96]]],[R[26]]]],[11,R[614],E,R[1387],77,[[["u32"],[R[96]]],[[R[26],["str"]],["str"]]]],[11,R[1388],E,R[1389],77,[[[R[96]]],[[R[26],["str"]],["str"]]]],[0,"static_",R[101],E,N,N],[3,R[107],"wasmer_runtime_core::memory::static_",R[97],N,N],[12,R[96],E,E,67,N],[12,"current",E,E,67,N],[12,"max",E,E,67,N],[17,"SAFE_STATIC_HEAP_SIZE",E,E,N,N],[17,"SAFE_STATIC_GUARD_SIZE",E,E,N,N],[11,"new",R[101],E,67,[[[R[108]],[R[102]]],[["box"],[R[41]],[R[2],["box",R[41]]]]]],[11,"size",E,R[109],67,[[["self"]],["pages"]]],[11,"grow",E,R[120],67,[[["self"],["pages"],[R[102]]],[["pages"],[R[103]],[R[2],["pages",R[103]]]]]],[11,R[110],E,R[111],67,[[["self"]]]],[11,R[112],E,"Get this memory represented as a mutable slice of bytes.",67,[[["self"]]]],[0,"view",E,E,N,N],[3,R[113],R[263],R[114],N,N],[3,R[430],E,"Non-atomically.",N,N],[3,R[115],E,R[116],N,N],[12,"ptr",E,E,68,N],[12,"length",E,E,68,N],[12,R[98],E,E,68,N],[8,"Atomic",E,E,N,N],[16,"Output",E,E,78,N],[8,"Atomicity",E,"A trait that represants an atomic type.",N,N],[11,"new",R[101],E,68,[[["u32"]],["self"]]],[11,R[117],E,R[1390],68,[[["self"]],[[R[117]],[R[119],[R[117]]]]]],[17,"_IMPL_SERIALIZE_FOR_MemoryType",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_MemoryType",E,E,N,N],[11,"new",E,R[1391],69,[[[R[108]]],[[R[2],[R[41]]],[R[41]]]]],[11,R[118],E,R[1392],69,[[["self"]],[R[108]]]],[11,"grow",E,R[1393],69,[[["self"],["pages"]],[["pages"],[R[103]],[R[2],["pages",R[103]]]]]],[11,"size",E,R[1394],69,[[["self"]],["pages"]]],[11,"view",E,R[1395],69,[[["self"]],[["valuetype"],[R[119]]]]],[11,R[121],E,E,69,[[["self"]]]],[11,"guard_size",E,E,75,[[],["u64"]]],[11,"bounds",E,E,75,[[],[[R[26],["u64"]],["u64"]]]],[11,"new",E,"Create a new `UnsharedMemory` from the given memory…",70,[[[R[108]]],[[R[2],[R[41]]],[R[41]]]]],[11,"grow",E,R[120],70,[[["self"],["pages"]],[["pages"],[R[103]],[R[2],["pages",R[103]]]]]],[11,"size",E,R[122],70,[[["self"]],["pages"]]],[11,R[121],E,E,70,[[["self"]]]],[11,"new",E,E,72,[[[R[108]]],[[R[2],[R[41]]],[R[41]]]]],[11,"grow",E,R[120],72,[[["self"],["pages"]],[["pages"],[R[103]],[R[2],["pages",R[103]]]]]],[11,"size",E,R[122],72,[[["self"]],["pages"]]],[11,R[121],E,"Gets a mutable pointer to the `LocalMemory`.",72,[[["self"]]]],[0,R[16],R[31],"The module module contains the implementation data…",N,N],[3,R[353],R[244],"This is used to instantiate a new WebAssembly module.",N,N],[12,R[229],E,E,79,N],[12,"cache_gen",E,E,79,N],[12,"info",E,E,79,N],[3,R[354],E,"Container for module data including memories, globals,…",N,N],[12,R[32],E,"Map of memory index to memory descriptors.",80,N],[12,R[201],E,"Map of global index to global descriptors.",80,N],[12,"tables",E,"Map of table index to table descriptors.",80,N],[12,"imported_functions",E,"Map of imported function index to import name.",80,N],[12,R[202],E,"Map of imported memory index to import name and memory…",80,N],[12,R[203],E,"Map of imported table index to import name and table…",80,N],[12,R[204],E,"Map of imported global index to import name and global…",80,N],[12,"exports",E,"Map of string to export index.",80,N],[12,"data_initializers",E,"Vector of data initializers.",80,N],[12,"elem_initializers",E,"Vector of table initializers.",80,N],[12,"start_func",E,"Index of optional start function.",80,N],[12,"func_assoc",E,"Map function index to signature index.",80,N],[12,R[460],E,"Map signature index to function signature.",80,N],[12,"backend",E,"Backend.",80,N],[12,"namespace_table",E,"Table of namespace indexes.",80,N],[12,"name_table",E,"Table of name indexes.",80,N],[12,"em_symbol_map",E,"Symbol information from emscripten.",80,N],[12,"custom_sections",E,"Custom sections.",80,N],[3,"Module",E,R[123],N,N],[12,"inner",E,E,2,N],[3,R[355],E,E,N,N],[12,"namespace_index",E,E,81,N],[12,"name_index",E,E,81,N],[3,R[356],E,"A data initializer for linear memory.",N,N],[12,"memory_index",E,"The index of the memory to initialize.",82,N],[12,"base",E,R[124],82,N],[12,"data",E,"The initialization data.",82,N],[3,R[357],E,"A WebAssembly table initializer.",N,N],[12,"table_index",E,"The index of a table to initialize.",83,N],[12,"base",E,R[124],83,N],[12,"elements",E,"The values to write into the table elements.",83,N],[3,R[358],E,"String table builder.",N,N],[12,"map",E,E,84,N],[12,"buffer",E,E,84,N],[12,"count",E,E,84,N],[3,R[359],E,"A map of index to string.",N,N],[12,"table",E,E,85,N],[12,"buffer",E,E,85,N],[3,R[360],E,"A type-safe handle referring to a module namespace.",N,N],[12,"0",E,E,86,N],[3,R[361],E,"A type-safe handle referring to a name in a module…",N,N],[12,"0",E,E,87,N],[4,R[362],E,"A wrapper around the [`TypedIndex`]es for Wasm functions,…",N,N],[13,"Func",E,"Function export index. [`FuncIndex`] is a type-safe handle…",88,N],[13,"Memory",E,"Memory export index. [`MemoryIndex`] is a type-safe handle…",88,N],[13,"Global",E,"Global export index. [`GlobalIndex`] is a type-safe handle…",88,N],[13,"Table",E,"Table export index. [`TableIndex`] is a type-safe handle…",88,N],[17,"_IMPL_SERIALIZE_FOR_ModuleInfo",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_ModuleInfo",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_ImportName",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_ImportName",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_ExportIndex",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_ExportIndex",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_DataInitializer",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_DataInitializer",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_TableInitializer",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_TableInitializer",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_StringTable",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_StringTable",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_NamespaceIndex",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_NamespaceIndex",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_NameIndex",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_NameIndex",E,E,N,N],[11,"import_custom_sections",E,"Creates custom section info from the given wasm file.",80,[[["self"]],["parseresult"]]],[11,"new",E,E,2,[[["arc",[R[22]]],[R[22]]],["self"]]],[11,R[1203],E,R[1396],2,[[["self"],[R[37]]],[[R[2],[R[92]]],[R[92]]]]],[11,"cache",E,R[1397],2,[[["self"]],[[R[2],[R[23],R[18]]],[R[23]],[R[18]]]]],[11,"info",E,R[1398],2,[[["self"]],[R[28]]]],[11,"new",E,"Creates a new [`StringTableBuilder`].",84,[[],["self"]]],[11,"register",E,"Register a new string into table.",84,[[["self"],["s"]],["k"]]],[11,"finish",E,"Finish building the [`StringTable`].",84,[[],[R[291]]]],[11,"new",E,"Creates a `StringTable`.",85,[[],["self"]]],[11,"get",E,"Gets a reference to a string at the given index.",85,[[["self"],["k"]],["str"]]],[0,"parse",R[31],"The parse module contains common data structures and…",N,N],[4,R[363],R[264],"Kind of load error.",N,N],[13,"Parse",E,"Parse error.",89,N],[13,"Codegen",E,"Code generation error.",89,N],[5,"read_module",E,"Read wasm binary into module data using the given backend,…",N,[[[R[21]],["mcg"],[R[125]]],[[R[2],["arc",R[126]]],["arc",["rwlock"]],[R[126]]]]],[5,"wp_type_to_type",E,"Convert given `WpType` to `Type`.",N,[[["wptype"]],[[R[2],["type",R[127]]],[R[127]],["type"]]]],[5,R[480],E,"Convert given `Type` to `WpType`.",N,[[["type"]],["wptype"]]],[5,"func_type_to_func_sig",E,E,N,[[["functype"]],[[R[90]],[R[2],[R[90],R[127]]],[R[127]]]]],[5,"eval_init_expr",E,E,N,[[["operator"]],[[R[2],[R[128],R[127]]],[R[128]],[R[127]]]]],[0,"sig_registry",R[31],"A process-global registry for function signatures.",N,N],[3,R[132],R[265],E,N,N],[12,R[129],E,E,90,N],[3,R[364],E,E,N,N],[12,"func_table",E,E,91,N],[12,"sig_assoc",E,E,91,N],[3,R[130],E,R[131],N,N],[7,R[132],E,E,N,N],[11,"lookup_sig_index",R[20],"Map a `FuncSig` to a global `SigIndex`.",92,[[["self"],["sig"]],[R[40]]]],[11,"lookup_signature",E,"Map a global `SigIndex` to an interned `FuncSig`.",92,[[["self"],[R[40]]],[[R[90]],["arc",[R[90]]]]]],[11,"lookup_signature_ref",E,"Register a function signature with the global signature…",92,[[["self"],[R[90]]],[[R[90]],["arc",[R[90]]]]]],[0,"structures",R[31],"The structures module contains commonly used data…",N,N],[3,R[365],R[136],R[134],N,N],[12,"elems",E,E,93,N],[12,R[135],E,E,93,N],[3,"Iter",E,R[138],N,N],[12,R[133],E,E,94,N],[12,R[135],E,E,94,N],[3,"IterMut",E,R[139],N,N],[12,R[133],E,E,95,N],[12,R[135],E,E,95,N],[3,"Map",E,R[137],N,N],[12,"elems",E,E,96,N],[12,R[135],E,E,96,N],[3,R[366],E,R[141],N,N],[12,R[135],E,E,97,N],[12,"slice",E,E,97,N],[0,"boxed",E,E,N,N],[3,R[365],"wasmer_runtime_core::structures::boxed",R[134],N,N],[12,"elems",E,E,93,N],[12,R[135],E,E,93,N],[11,"new",R[136],E,93,[[["box"]],["self"]]],[0,"map",E,E,N,N],[3,"Map",R[140],R[137],N,N],[12,"elems",E,E,96,N],[12,R[135],E,E,96,N],[3,"IntoIter",E,E,N,N],[12,R[133],E,E,98,N],[12,R[135],E,E,98,N],[3,"Iter",E,R[138],N,N],[12,R[133],E,E,94,N],[12,R[135],E,E,94,N],[3,"IterMut",E,R[139],N,N],[12,R[133],E,E,95,N],[12,R[135],E,E,95,N],[17,"_IMPL_SERIALIZE_FOR_Map",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Map",E,E,N,N],[11,"new",R[136],"Creates a new `Map`.",96,[[],["self"]]],[11,"with_capacity",E,"Creates a new empty `Map` with the given capacity.",96,[[["usize"]],["self"]]],[11,"clear",E,"Clears the map. Keeps the allocated memory for future use.",96,[[["self"]]]],[11,"len",E,"Returns the size of this map.",96,[[["self"]],["usize"]]],[11,"is_empty",E,"Returns true if this map is empty.",96,[[["self"]],["bool"]]],[11,"push",E,"Adds a new value to this map.",96,[[["self"],["v"]],["k"]]],[11,"next_index",E,"Returns the next index into the map.",96,[[["self"]],["k"]]],[11,"reserve_exact",E,"Reserves the given size.",96,[[["self"],["usize"]]]],[11,"into_boxed_map",E,"Convert this into a `BoxedMap`.",96,[[],[R[36]]]],[11,"into_vec",E,"Convert this into a `Vec`.",96,[[],["vec"]]],[11,"resize",E,"Resize this map to the given new length and value.",96,[[["self"],["usize"],["v"]]]],[11,"new",R[140],E,98,[[["intoiter"]],["self"]]],[11,"new",R[136],E,94,[[["iter"]],["self"]]],[11,"new",E,E,95,[[["itermut"]],["self"]]],[0,"slice",E,E,N,N],[3,R[366],"wasmer_runtime_core::structures::slice",R[141],N,N],[12,R[135],E,E,97,N],[12,"slice",E,E,97,N],[11,"get",R[136],"Gets a reference to the value at the given index.",97,[[["self"],["k"]],[[R[26]],["v"]]]],[11,"get_mut",E,"Gets a mutable reference to the value at the given index.",97,[[["self"],["k"]],[["v"],[R[26]]]]],[11,"len",E,"Gets the length of this slice map.",97,[[["self"]],["usize"]]],[11,"iter",E,"Returns an iterator for this slice map.",97,[[["self"]],["iter"]]],[11,"iter_mut",E,"Returns a mutable iterator for this slice map.",97,[[["self"]],["itermut"]]],[11,"as_ptr",E,"Gets a pointer to the `SliceMap`.",97,[[["self"]]]],[11,"as_mut_ptr",E,"Gets a mutable pointer to the `SliceMap`.",97,[[["self"]]]],[8,R[367],E,"A trait for dealing with type-safe indices into…",N,N],[10,"new",E,"Create a new instance of [`TypedIndex`] from a raw index…",99,[[["usize"]],["self"]]],[10,"index",E,"Get the raw index value from the [`TypedIndex`]",99,[[["self"]],["usize"]]],[0,"sys",R[31],E,N,N],[5,R[1102],"wasmer_runtime_core::sys","Round `size` up to the nearest multiple of `page_size`.",N,[[["usize"]],["usize"]]],[5,"round_down_to_page_size",E,"Round `size` down to the nearest multiple of `page_size`.",N,[[["usize"]],["usize"]]],[0,"unix",E,E,N,N],[0,R[96],"wasmer_runtime_core::sys::unix",E,N,N],[3,"Memory",R[155],R[142],N,N],[12,"ptr",E,E,14,N],[12,"size",E,E,14,N],[12,R[143],E,E,14,N],[12,"fd",E,E,14,N],[3,"RawFd",E,E,N,N],[12,"0",E,E,100,N],[4,"Protect",E,R[144],N,N],[13,"None",E,R[145],15,N],[13,"Read",E,R[146],15,N],[13,R[147],E,R[148],15,N],[13,"ReadExec",E,R[149],15,N],[13,R[150],E,R[151],15,N],[17,"_IMPL_SERIALIZE_FOR_Protect",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Protect",E,E,N,N],[11,"from_file_path",R[152],"Create a new memory from the given path value and…",14,[[[R[292]],["p"]],[[R[153]],[R[2],[R[153]]]]]],[11,"with_size_protect",E,"Create a new memory with the given size and protection.",14,[[["usize"],[R[292]]],[[R[2],[R[0]]],[R[0]]]]],[11,"with_size",E,"Create a new memory with the given size.",14,[[["usize"]],[[R[153]],[R[2],[R[153]]]]]],[11,R[292],E,"Protect this memory with the given range bounds and…",14,[[["self"],[R[292]]],[[R[154]],[R[2],[R[154]]]]]],[11,"split_at",E,"Split this memory into multiple memories by the given…",14,[[["usize"]]]],[11,"size",E,"Gets the size of this memory.",14,[[["self"]],["usize"]]],[11,R[110],E,"Gets a slice for this memory.",14,[[["self"]]]],[11,R[112],E,"Gets a mutable slice for this memory.",14,[[["self"]]]],[11,R[143],E,"Gets the protect kind of this memory.",14,[[["self"]],[R[292]]]],[11,"as_ptr",E,"Gets mutable pointer to the memory.",14,[[["self"]]]],[11,"to_protect_const",E,E,15,[[],["u32"]]],[11,"is_readable",E,"Returns true if this memory is readable.",15,[[],["bool"]]],[11,"is_writable",E,"Returns true if this memory is writable.",15,[[],["bool"]]],[11,"from_file",R[155],E,100,[[["file"]],["self"]]],[0,"table",R[31],"The runtime table module contains data structures and…",N,N],[3,R[206],R[158],R[156],N,N],[12,"inner",E,E,101,N],[3,"Table",E,R[1174],N,N],[12,"desc",E,E,102,N],[12,"storage",E,E,102,N],[4,"Element",E,"Kind of table element.",N,N],[13,R[206],E,"Anyfunc.",103,N],[4,R[368],E,"Kind of table storage.",N,N],[13,R[206],E,"This is intended to be a caller-checked Anyfunc.",104,N],[0,"anyfunc",E,E,N,N],[3,R[206],R[157],R[156],N,N],[12,"inner",E,E,101,N],[3,R[369],E,E,N,N],[12,"backing",E,E,105,N],[12,"max",E,E,105,N],[4,R[370],E,E,N,N],[13,"Host",E,E,106,N],[12,"ptr","wasmer_runtime_core::table::anyfunc::AnyfuncInner",E,106,N],[12,R[79],E,E,106,N],[13,"Managed",R[157],E,106,N],[11,"new",R[158],"Create a new `Anyfunc`.",101,[[["sig"]],["self"]]],[11,"new",R[157],E,105,[[[R[160]],[R[159]]],[["box"],[R[41]],[R[2],["box",R[41]]]]]],[11,"current_size",E,E,105,[[["self"]],["u32"]]],[11,"internal_buffer",E,E,105,[[["self"]]]],[11,"grow",E,E,105,[[["self"],["u32"],[R[159]]],[[R[26],["u32"]],["u32"]]]],[11,"set",E,E,105,[[["self"],["u32"],["anyfunc"]],[R[2]]]],[11,"new",R[158],R[1399],102,[[[R[160]]],[[R[2],[R[41]]],[R[41]]]]],[11,R[118],E,R[1400],102,[[["self"]],[R[160]]]],[11,"set",E,R[1401],102,[[["self"],["u32"],["element"]],[R[2]]]],[11,"anyfunc_direct_access_mut",E,E,102,[[["self"],["f"]],["r"]]],[11,"size",E,R[1402],102,[[["self"]],["u32"]]],[11,"grow",E,R[1403],102,[[["self"],["u32"]],[[R[2],["u32",R[103]]],["u32"],[R[103]]]]],[11,R[1404],E,R[1405],102,[[["self"]]]],[0,"trampoline_x64",R[31],"Trampoline generator for carrying context with function…",N,N],[3,R[161],R[266],"Reads the context pointer from `mm0`.",N,N],[12,R[129],E,E,107,N],[3,R[371],E,"Trampoline Buffer Builder.",N,N],[12,"code",E,E,108,N],[12,"offsets",E,E,108,N],[3,R[372],E,"Trampoline Buffer.",N,N],[12,"code",E,E,109,N],[12,"offsets",E,E,109,N],[4,R[431],E,"An opaque type for pointers to a callable memory location.",N,N],[4,R[432],E,"An opaque type for context pointers.",N,N],[4,R[167],E,"An opaque type for generated trampolines' call entries.",N,N],[5,"value_to_bytes",E,E,N,[[[T]]]],[5,"get_context",E,"Calls `GET_CONTEXT` and returns the current context.",N,[[]]],[7,R[161],E,E,N,N],[11,"new",E,"Creates a new empty `TrampolineBufferBuilder`.",108,[[],["trampolinebufferbuilder"]]],[11,"add_context_trampoline",E,"Adds a context trampoline.",108,[[["self"]],["usize"]]],[11,"add_context_rsp_state_preserving_trampoline",E,"Adds context RSP state preserving trampoline to the buffer.",108,[[["self"]],["usize"]]],[11,"add_callinfo_trampoline",E,"Adds a callinfo trampoline.",108,[[["self"],["u32"]],["usize"]]],[11,"build",E,"Consumes the builder and builds the trampoline buffer.",108,[[],["trampolinebuffer"]]],[11,R[162],E,"Returns the trampoline pointer at index `idx`.",109,[[["self"],["usize"]]]],[0,"typed_func",R[31],"The typed func module implements a way of representing a…",N,N],[3,"Wasm",R[245],"TODO(lachlan): Naming TBD. This contains the trampoline…",N,N],[12,R[169],E,E,110,N],[12,"invoke",E,E,110,N],[12,"invoke_env",E,E,110,N],[3,"Host",E,"This type, as part of the `Func` type signature,…",N,N],[12,"0",E,E,111,N],[3,R[433],E,R[163],N,N],[3,R[434],E,R[163],N,N],[3,"Func",E,R[164],N,N],[12,"inner",E,E,3,N],[12,"func",E,E,3,N],[12,R[205],E,E,3,N],[12,"vmctx",E,E,3,N],[12,R[98],E,E,3,N],[3,"S0",E,R[165],N,N],[3,"S1",E,R[165],N,N],[12,"0",E,E,112,N],[3,"S2",E,R[165],N,N],[12,"0",E,E,113,N],[12,"1",E,E,113,N],[3,"S3",E,R[165],N,N],[12,"0",E,E,114,N],[12,"1",E,E,114,N],[12,"2",E,E,114,N],[3,"S4",E,R[165],N,N],[12,"0",E,E,115,N],[12,"1",E,E,115,N],[12,"2",E,E,115,N],[12,"3",E,E,115,N],[3,"S5",E,R[165],N,N],[12,"0",E,E,116,N],[12,"1",E,E,116,N],[12,"2",E,E,116,N],[12,"3",E,E,116,N],[12,"4",E,E,116,N],[3,"S6",E,R[165],N,N],[12,"0",E,E,117,N],[12,"1",E,E,117,N],[12,"2",E,E,117,N],[12,"3",E,E,117,N],[12,"4",E,E,117,N],[12,"5",E,E,117,N],[3,"S7",E,R[165],N,N],[12,"0",E,E,118,N],[12,"1",E,E,118,N],[12,"2",E,E,118,N],[12,"3",E,E,118,N],[12,"4",E,E,118,N],[12,"5",E,E,118,N],[12,"6",E,E,118,N],[3,"S8",E,R[165],N,N],[12,"0",E,E,119,N],[12,"1",E,E,119,N],[12,"2",E,E,119,N],[12,"3",E,E,119,N],[12,"4",E,E,119,N],[12,"5",E,E,119,N],[12,"6",E,E,119,N],[12,"7",E,E,119,N],[3,"S9",E,R[165],N,N],[12,"0",E,E,120,N],[12,"1",E,E,120,N],[12,"2",E,E,120,N],[12,"3",E,E,120,N],[12,"4",E,E,120,N],[12,"5",E,E,120,N],[12,"6",E,E,120,N],[12,"7",E,E,120,N],[12,"8",E,E,120,N],[3,"S10",E,R[165],N,N],[12,"0",E,E,121,N],[12,"1",E,E,121,N],[12,"2",E,E,121,N],[12,"3",E,E,121,N],[12,"4",E,E,121,N],[12,"5",E,E,121,N],[12,"6",E,E,121,N],[12,"7",E,E,121,N],[12,"8",E,E,121,N],[12,"9",E,E,121,N],[3,"S11",E,R[165],N,N],[12,"0",E,E,122,N],[12,"1",E,E,122,N],[12,"2",E,E,122,N],[12,"3",E,E,122,N],[12,"4",E,E,122,N],[12,"5",E,E,122,N],[12,"6",E,E,122,N],[12,"7",E,E,122,N],[12,"8",E,E,122,N],[12,"9",E,E,122,N],[12,"10",E,E,122,N],[3,"S12",E,R[165],N,N],[12,"0",E,E,123,N],[12,"1",E,E,123,N],[12,"2",E,E,123,N],[12,"3",E,E,123,N],[12,"4",E,E,123,N],[12,"5",E,E,123,N],[12,"6",E,E,123,N],[12,"7",E,E,123,N],[12,"8",E,E,123,N],[12,"9",E,E,123,N],[12,"10",E,E,123,N],[12,"11",E,E,123,N],[3,"S13",E,R[165],N,N],[12,"0",E,E,124,N],[12,"1",E,E,124,N],[12,"2",E,E,124,N],[12,"3",E,E,124,N],[12,"4",E,E,124,N],[12,"5",E,E,124,N],[12,"6",E,E,124,N],[12,"7",E,E,124,N],[12,"8",E,E,124,N],[12,"9",E,E,124,N],[12,"10",E,E,124,N],[12,"11",E,E,124,N],[12,"12",E,E,124,N],[3,"S14",E,R[165],N,N],[12,"0",E,E,125,N],[12,"1",E,E,125,N],[12,"2",E,E,125,N],[12,"3",E,E,125,N],[12,"4",E,E,125,N],[12,"5",E,E,125,N],[12,"6",E,E,125,N],[12,"7",E,E,125,N],[12,"8",E,E,125,N],[12,"9",E,E,125,N],[12,"10",E,E,125,N],[12,"11",E,E,125,N],[12,"12",E,E,125,N],[12,"13",E,E,125,N],[3,"S15",E,R[165],N,N],[12,"0",E,E,126,N],[12,"1",E,E,126,N],[12,"2",E,E,126,N],[12,"3",E,E,126,N],[12,"4",E,E,126,N],[12,"5",E,E,126,N],[12,"6",E,E,126,N],[12,"7",E,E,126,N],[12,"8",E,E,126,N],[12,"9",E,E,126,N],[12,"10",E,E,126,N],[12,"11",E,E,126,N],[12,"12",E,E,126,N],[12,"13",E,E,126,N],[12,"14",E,E,126,N],[3,"S16",E,R[165],N,N],[12,"0",E,E,127,N],[12,"1",E,E,127,N],[12,"2",E,E,127,N],[12,"3",E,E,127,N],[12,"4",E,E,127,N],[12,"5",E,E,127,N],[12,"6",E,E,127,N],[12,"7",E,E,127,N],[12,"8",E,E,127,N],[12,"9",E,E,127,N],[12,"10",E,E,127,N],[12,"11",E,E,127,N],[12,"12",E,E,127,N],[12,"13",E,E,127,N],[12,"14",E,E,127,N],[12,"15",E,E,127,N],[3,"S17",E,R[165],N,N],[12,"0",E,E,128,N],[12,"1",E,E,128,N],[12,"2",E,E,128,N],[12,"3",E,E,128,N],[12,"4",E,E,128,N],[12,"5",E,E,128,N],[12,"6",E,E,128,N],[12,"7",E,E,128,N],[12,"8",E,E,128,N],[12,"9",E,E,128,N],[12,"10",E,E,128,N],[12,"11",E,E,128,N],[12,"12",E,E,128,N],[12,"13",E,E,128,N],[12,"14",E,E,128,N],[12,"15",E,E,128,N],[12,"16",E,E,128,N],[3,"S18",E,R[165],N,N],[12,"0",E,E,129,N],[12,"1",E,E,129,N],[12,"2",E,E,129,N],[12,"3",E,E,129,N],[12,"4",E,E,129,N],[12,"5",E,E,129,N],[12,"6",E,E,129,N],[12,"7",E,E,129,N],[12,"8",E,E,129,N],[12,"9",E,E,129,N],[12,"10",E,E,129,N],[12,"11",E,E,129,N],[12,"12",E,E,129,N],[12,"13",E,E,129,N],[12,"14",E,E,129,N],[12,"15",E,E,129,N],[12,"16",E,E,129,N],[12,"17",E,E,129,N],[3,"S19",E,R[165],N,N],[12,"0",E,E,130,N],[12,"1",E,E,130,N],[12,"2",E,E,130,N],[12,"3",E,E,130,N],[12,"4",E,E,130,N],[12,"5",E,E,130,N],[12,"6",E,E,130,N],[12,"7",E,E,130,N],[12,"8",E,E,130,N],[12,"9",E,E,130,N],[12,"10",E,E,130,N],[12,"11",E,E,130,N],[12,"12",E,E,130,N],[12,"13",E,E,130,N],[12,"14",E,E,130,N],[12,"15",E,E,130,N],[12,"16",E,E,130,N],[12,"17",E,E,130,N],[12,"18",E,E,130,N],[3,"S20",E,R[165],N,N],[12,"0",E,E,131,N],[12,"1",E,E,131,N],[12,"2",E,E,131,N],[12,"3",E,E,131,N],[12,"4",E,E,131,N],[12,"5",E,E,131,N],[12,"6",E,E,131,N],[12,"7",E,E,131,N],[12,"8",E,E,131,N],[12,"9",E,E,131,N],[12,"10",E,E,131,N],[12,"11",E,E,131,N],[12,"12",E,E,131,N],[12,"13",E,E,131,N],[12,"14",E,E,131,N],[12,"15",E,E,131,N],[12,"16",E,E,131,N],[12,"17",E,E,131,N],[12,"18",E,E,131,N],[12,"19",E,E,131,N],[3,"S21",E,R[165],N,N],[12,"0",E,E,132,N],[12,"1",E,E,132,N],[12,"2",E,E,132,N],[12,"3",E,E,132,N],[12,"4",E,E,132,N],[12,"5",E,E,132,N],[12,"6",E,E,132,N],[12,"7",E,E,132,N],[12,"8",E,E,132,N],[12,"9",E,E,132,N],[12,"10",E,E,132,N],[12,"11",E,E,132,N],[12,"12",E,E,132,N],[12,"13",E,E,132,N],[12,"14",E,E,132,N],[12,"15",E,E,132,N],[12,"16",E,E,132,N],[12,"17",E,E,132,N],[12,"18",E,E,132,N],[12,"19",E,E,132,N],[12,"20",E,E,132,N],[3,"S22",E,R[165],N,N],[12,"0",E,E,133,N],[12,"1",E,E,133,N],[12,"2",E,E,133,N],[12,"3",E,E,133,N],[12,"4",E,E,133,N],[12,"5",E,E,133,N],[12,"6",E,E,133,N],[12,"7",E,E,133,N],[12,"8",E,E,133,N],[12,"9",E,E,133,N],[12,"10",E,E,133,N],[12,"11",E,E,133,N],[12,"12",E,E,133,N],[12,"13",E,E,133,N],[12,"14",E,E,133,N],[12,"15",E,E,133,N],[12,"16",E,E,133,N],[12,"17",E,E,133,N],[12,"18",E,E,133,N],[12,"19",E,E,133,N],[12,"20",E,E,133,N],[12,"21",E,E,133,N],[3,"S23",E,R[165],N,N],[12,"0",E,E,134,N],[12,"1",E,E,134,N],[12,"2",E,E,134,N],[12,"3",E,E,134,N],[12,"4",E,E,134,N],[12,"5",E,E,134,N],[12,"6",E,E,134,N],[12,"7",E,E,134,N],[12,"8",E,E,134,N],[12,"9",E,E,134,N],[12,"10",E,E,134,N],[12,"11",E,E,134,N],[12,"12",E,E,134,N],[12,"13",E,E,134,N],[12,"14",E,E,134,N],[12,"15",E,E,134,N],[12,"16",E,E,134,N],[12,"17",E,E,134,N],[12,"18",E,E,134,N],[12,"19",E,E,134,N],[12,"20",E,E,134,N],[12,"21",E,E,134,N],[12,"22",E,E,134,N],[3,"S24",E,R[165],N,N],[12,"0",E,E,135,N],[12,"1",E,E,135,N],[12,"2",E,E,135,N],[12,"3",E,E,135,N],[12,"4",E,E,135,N],[12,"5",E,E,135,N],[12,"6",E,E,135,N],[12,"7",E,E,135,N],[12,"8",E,E,135,N],[12,"9",E,E,135,N],[12,"10",E,E,135,N],[12,"11",E,E,135,N],[12,"12",E,E,135,N],[12,"13",E,E,135,N],[12,"14",E,E,135,N],[12,"15",E,E,135,N],[12,"16",E,E,135,N],[12,"17",E,E,135,N],[12,"18",E,E,135,N],[12,"19",E,E,135,N],[12,"20",E,E,135,N],[12,"21",E,E,135,N],[12,"22",E,E,135,N],[12,"23",E,E,135,N],[3,"S25",E,R[165],N,N],[12,"0",E,E,136,N],[12,"1",E,E,136,N],[12,"2",E,E,136,N],[12,"3",E,E,136,N],[12,"4",E,E,136,N],[12,"5",E,E,136,N],[12,"6",E,E,136,N],[12,"7",E,E,136,N],[12,"8",E,E,136,N],[12,"9",E,E,136,N],[12,"10",E,E,136,N],[12,"11",E,E,136,N],[12,"12",E,E,136,N],[12,"13",E,E,136,N],[12,"14",E,E,136,N],[12,"15",E,E,136,N],[12,"16",E,E,136,N],[12,"17",E,E,136,N],[12,"18",E,E,136,N],[12,"19",E,E,136,N],[12,"20",E,E,136,N],[12,"21",E,E,136,N],[12,"22",E,E,136,N],[12,"23",E,E,136,N],[12,"24",E,E,136,N],[3,"S26",E,R[165],N,N],[12,"0",E,E,137,N],[12,"1",E,E,137,N],[12,"2",E,E,137,N],[12,"3",E,E,137,N],[12,"4",E,E,137,N],[12,"5",E,E,137,N],[12,"6",E,E,137,N],[12,"7",E,E,137,N],[12,"8",E,E,137,N],[12,"9",E,E,137,N],[12,"10",E,E,137,N],[12,"11",E,E,137,N],[12,"12",E,E,137,N],[12,"13",E,E,137,N],[12,"14",E,E,137,N],[12,"15",E,E,137,N],[12,"16",E,E,137,N],[12,"17",E,E,137,N],[12,"18",E,E,137,N],[12,"19",E,E,137,N],[12,"20",E,E,137,N],[12,"21",E,E,137,N],[12,"22",E,E,137,N],[12,"23",E,E,137,N],[12,"24",E,E,137,N],[12,"25",E,E,137,N],[4,R[373],E,"Wasm trap info.",N,N],[13,R[166],E,"Unreachable trap.",138,N],[13,"IncorrectCallIndirectSignature",E,"Call indirect incorrect signature trap.",138,N],[13,"MemoryOutOfBounds",E,"Memory out of bounds trap.",138,N],[13,"CallIndirectOOB",E,"Call indirect out of bounds trap.",138,N],[13,"IllegalArithmetic",E,"Illegal arithmetic trap.",138,N],[13,"MisalignedAtomicAccess",E,"Misaligned atomic access trap.",138,N],[13,"Unknown",E,"Unknown trap.",138,N],[5,"always_trap",E,"Function that always fails. It can be used as a…",N,[[],[["str"],[R[2],["str"]]]]],[6,R[167],E,"Aliases to an extern \"C\" type used as a trampoline to a…",N,N],[6,"Invoke",E,"Aliases to an extern \"C\" type used to invoke a function.",N,N],[8,"Kind",E,"This is just an empty trait to constrict that types that…",N,N],[8,R[374],E,"Represents a list of WebAssembly values.",N,N],[16,"CStruct",E,"CStruct type.",139,N],[16,"RetArray",E,"Array of return values.",139,N],[10,R[258],E,"Construct `Self` based on an array of returned values.",139,[[],["self"]]],[10,R[259],E,"Generates an empty array that will hold the returned…",139,[[]]],[10,R[260],E,"Transforms C values into Rust values.",139,[[],["self"]]],[10,R[261],E,"Transforms Rust values into C values.",139,[[]]],[10,"types",E,"Get types of the current values.",139,[[]]],[10,"call",E,"This method is used to distribute the values onto a…",139,[[["func"],[R[89],["func"]],["wasm"]],[[R[168]],[R[2],[R[168]]]]]],[8,"ExternalFunctionKind",E,"Empty trait to specify the kind of `ExternalFunction`:…",N,N],[8,R[375],E,"Represents a function that can be converted to a…",N,N],[10,"to_raw",E,"Convert to function pointer.",140,[[]]],[8,R[376],E,"Represents a TrapEarly type.",N,N],[16,"Error",E,"The error type for this trait.",141,N],[10,"report",E,"Get returns or error result.",141,[[],[R[2]]]],[11,R[170],E,"Create new `Wasm` from given parts.",110,[[[R[169]],[R[26],[R[89]]],["invoke"],[R[89],["c_void"]]],["self"]]],[11,R[170],E,E,3,[[["wasm"],[R[26],[R[89]]],[R[89],["funcenv"]],[R[89],["func"]],["func"]],[["wasm"],["func",["wasm"]]]]],[11,"new",E,R[1406],3,[[["f"]],[["func",["host"]],["host"]]]],[11,"params",E,R[1407],3,[[["self"]]]],[11,R[467],E,R[1408],3,[[["self"]]]],[11,R[1409],E,R[1410],3,[[["self"]],[[R[89],["func"]],["func"]]]],[11,"call",E,R[171],3,[[["self"]],[[R[168]],[R[2],[R[168]]]]]],[11,"call",E,R[171],3,[[["self"],["a"]],[[R[168]],[R[2],[R[168]]]]]],[11,"call",E,R[171],3,[[["self"],["a"],["b"]],[[R[168]],[R[2],[R[168]]]]]],[11,"call",E,R[171],3,[[["self"],["a"],["c"],["b"]],[[R[168]],[R[2],[R[168]]]]]],[11,"call",E,R[171],3,[[["self"],["a"],["c"],["d"],["b"]],[[R[168]],[R[2],[R[168]]]]]],[11,"call",E,R[171],3,[[["self"],["a"],["e"],["c"],["d"],["b"]],[[R[168]],[R[2],[R[168]]]]]],[11,"call",E,R[171],3,[[["self"],["a"],["e"],["c"],["d"],["b"],["f"]],[[R[168]],[R[2],[R[168]]]]]],[11,"call",E,R[171],3,[[["self"],["f"],["a"],["e"],["c"],["d"],["b"],["g"]],[[R[168]],[R[2],[R[168]]]]]],[11,"call",E,R[171],3,[[["self"],["h"],["f"],["a"],["e"],["c"],["d"],["b"],["g"]],[[R[168]],[R[2],[R[168]]]]]],[11,"call",E,R[171],3,[[["self"],["h"],["i"],["f"],["a"],["e"],["c"],["d"],["b"],["g"]],[[R[168]],[R[2],[R[168]]]]]],[11,"call",E,R[171],3,[[["self"],["h"],["i"],["f"],["a"],["j"],["e"],["c"],["d"],["b"],["g"]],[[R[168]],[R[2],[R[168]]]]]],[11,"call",E,R[171],3,[[["self"],["h"],["i"],["f"],["k"],["a"],["j"],["e"],["c"],["d"],["b"],["g"]],[[R[168]],[R[2],[R[168]]]]]],[11,"call",E,R[171],3,[[["self"],["h"],["i"],["f"],["k"],["a"],["j"],["l"],["e"],["c"],["d"],["b"],["g"]],[[R[168]],[R[2],[R[168]]]]]],[11,"call",E,R[171],3,[[["self"],["h"],["i"],["m"],["f"],["k"],["a"],["j"],["l"],["e"],["c"],["d"],["b"],["g"]],[[R[168]],[R[2],[R[168]]]]]],[11,"call",E,R[171],3,[[["m"],["k"],["a"],["e"],["c"],["i"],["g"],["self"],["f"],["l"],["j"],["n"],["d"],["b"],["h"]],[[R[168]],[R[2],[R[168]]]]]],[11,"call",E,R[171],3,[[["m"],["k"],["a"],["o"],["e"],["c"],["i"],["g"],["self"],["f"],["l"],["j"],["n"],["d"],["b"],["h"]],[[R[168]],[R[2],[R[168]]]]]],[11,"call",E,R[171],3,[[["m"],["k"],["a"],["o"],["e"],["c"],["i"],["g"],["self"],["f"],["l"],["j"],["n"],["p"],["d"],["b"],["h"]],[[R[168]],[R[2],[R[168]]]]]],[11,"call",E,R[171],3,[[["m"],["k"],["a"],["o"],["q"],["e"],["c"],["i"],["g"],["self"],["f"],["l"],["j"],["n"],["p"],["d"],["b"],["h"]],[[R[168]],[R[2],[R[168]]]]]],[11,"call",E,R[171],3,[[["r"],["m"],["k"],["a"],["o"],["q"],["e"],["c"],["i"],["g"],["self"],["f"],["l"],["j"],["n"],["p"],["d"],["b"],["h"]],[[R[168]],[R[2],[R[168]]]]]],[11,"call",E,R[171],3,[[["r"],["m"],["k"],["a"],["o"],["q"],["e"],["c"],["i"],["s"],["g"],["self"],["f"],["l"],["j"],["n"],["p"],["d"],["b"],["h"]],[[R[168]],[R[2],[R[168]]]]]],[11,"call",E,R[171],3,[[["r"],[T],["m"],["k"],["a"],["o"],["q"],["e"],["c"],["i"],["s"],["g"],["self"],["f"],["l"],["j"],["n"],["p"],["d"],["b"],["h"]],[[R[168]],[R[2],[R[168]]]]]],[11,"call",E,R[171],3,[[["r"],[T],["m"],["k"],["a"],["o"],["q"],["e"],["c"],["i"],["s"],["g"],["self"],[U],["f"],["l"],["j"],["n"],["p"],["d"],["b"],["h"]],[[R[168]],[R[2],[R[168]]]]]],[11,"call",E,R[171],3,[[["r"],[T],["m"],["k"],["a"],["o"],["q"],["e"],["c"],["i"],["s"],["g"],["self"],[U],["f"],["l"],["j"],["v"],["n"],["p"],["d"],["b"],["h"]],[[R[168]],[R[2],[R[168]]]]]],[11,"call",E,R[171],3,[[["r"],[T],["m"],["k"],["a"],["o"],["q"],["e"],["c"],["i"],["s"],["g"],["self"],[U],["w"],["f"],["l"],["j"],["v"],["n"],["p"],["d"],["b"],["h"]],[[R[168]],[R[2],[R[168]]]]]],[11,"call",E,R[171],3,[[["r"],[T],["x"],["m"],["k"],["a"],["o"],["q"],["e"],["c"],["i"],["s"],["g"],["self"],[U],["w"],["f"],["l"],["j"],["v"],["n"],["p"],["d"],["b"],["h"]],[[R[168]],[R[2],[R[168]]]]]],[11,"call",E,R[171],3,[[["r"],[T],["x"],["m"],["k"],["a"],["o"],["q"],["e"],["c"],["i"],["s"],["g"],["self"],[U],["w"],["y"],["f"],["l"],["j"],["v"],["n"],["p"],["d"],["b"],["h"]],[[R[168]],[R[2],[R[168]]]]]],[11,"call",E,R[171],3,[[["r"],[T],["x"],["m"],["k"],["a"],["o"],["q"],["e"],["c"],["i"],["s"],["g"],["self"],[U],["w"],["y"],["f"],["l"],["j"],["v"],["z"],["n"],["p"],["d"],["b"],["h"]],[[R[168]],[R[2],[R[168]]]]]],[0,"types",R[31],"The runtime types modules represent type used within the…",N,N],[3,R[377],R[267],R[1182],N,N],[12,"element",E,R[1183],142,N],[12,"minimum",E,R[1184],142,N],[12,"maximum",E,R[1185],142,N],[3,R[378],E,R[1186],N,N],[12,"mutable",E,R[1187],143,N],[12,"ty",E,R[1411],143,N],[3,R[379],E,R[1412],N,N],[12,"desc",E,R[1413],144,N],[12,"init",E,R[1414],144,N],[3,R[380],E,R[1188],N,N],[12,"minimum",E,R[1189],145,N],[12,"maximum",E,R[1190],145,N],[12,"shared",E,R[1191],145,N],[12,R[178],E,R[1192],145,N],[3,"FuncSig",E,R[1193],N,N],[12,"params",E,E,146,N],[12,R[467],E,E,146,N],[3,R[381],E,R[172],N,N],[12,"0",E,E,147,N],[3,R[382],E,R[172],N,N],[12,"0",E,E,148,N],[3,R[383],E,R[172],N,N],[12,"0",E,E,149,N],[3,R[384],E,R[172],N,N],[12,"0",E,E,150,N],[3,R[385],E,R[172],N,N],[12,"0",E,E,151,N],[3,R[386],E,R[172],N,N],[12,"0",E,E,152,N],[3,R[387],E,R[172],N,N],[12,"0",E,E,153,N],[3,R[388],E,R[172],N,N],[12,"0",E,E,154,N],[3,R[389],E,R[172],N,N],[12,"0",E,E,155,N],[3,R[390],E,R[172],N,N],[12,"0",E,E,156,N],[3,R[391],E,R[172],N,N],[12,"0",E,E,157,N],[3,R[392],E,R[172],N,N],[12,"0",E,E,158,N],[3,"SigIndex",E,R[1415],N,N],[12,"0",E,E,159,N],[4,"Type",E,R[1181],N,N],[13,"I32",E,R[173],160,N],[13,"I64",E,R[174],160,N],[13,"F32",E,R[175],160,N],[13,"F64",E,R[176],160,N],[13,"V128",E,R[177],160,N],[4,"Value",E,R[1175],N,N],[13,"I32",E,R[173],161,N],[13,"I64",E,R[174],161,N],[13,"F32",E,R[175],161,N],[13,"F64",E,R[176],161,N],[13,"V128",E,R[177],161,N],[4,R[393],E,R[1416],N,N],[13,R[206],E,R[1417],162,N],[4,R[394],E,R[1418],N,N],[13,"Const",E,R[1419],163,N],[13,"GetGlobal",E,R[1420],163,N],[4,R[395],E,R[1421],N,N],[13,"Local",E,"Local.",164,N],[13,"Import",E,"Import.",164,N],[17,"_IMPL_SERIALIZE_FOR_Type",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Type",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_Value",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Value",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_ElementType",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_ElementType",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_TableDescriptor",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_TableDescriptor",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_Initializer",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Initializer",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_GlobalDescriptor",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_GlobalDescriptor",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_GlobalInit",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_GlobalInit",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_MemoryDescriptor",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_MemoryDescriptor",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_FuncSig",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_FuncSig",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_FuncIndex",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_FuncIndex",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_LocalFuncIndex",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_LocalFuncIndex",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_ImportedFuncIndex",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_ImportedFuncIndex",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_MemoryIndex",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_MemoryIndex",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_LocalMemoryIndex",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_LocalMemoryIndex",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_ImportedMemoryIndex",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_ImportedMemoryIndex",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_TableIndex",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_TableIndex",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_LocalTableIndex",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_LocalTableIndex",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_ImportedTableIndex",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_ImportedTableIndex",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_GlobalIndex",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_GlobalIndex",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_LocalGlobalIndex",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_LocalGlobalIndex",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_ImportedGlobalIndex",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_ImportedGlobalIndex",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_SigIndex",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_SigIndex",E,E,N,N],[8,R[396],E,R[1422],N,N],[18,"TYPE",E,R[1423],165,N],[10,R[1424],E,R[1425],165,[[["u64"]],["self"]]],[10,"to_binary",E,R[1426],165,[[],["u64"]]],[8,R[397],E,R[1427],N,N],[16,"Native",E,R[1428],166,N],[10,R[276],E,R[1429],166,[[],["self"]]],[10,R[275],E,R[1430],166,[[]]],[8,"ValueType",E,R[1431],N,N],[8,R[398],E,R[1432],N,N],[16,"Local",E,R[1433],167,N],[16,"Import",E,R[1434],167,N],[11,"ty",E,R[1435],161,[[["self"]],["type"]]],[11,"to_u128",E,R[1436],161,[[["self"]],["u128"]]],[11,R[179],E,E,142,[[["self"],[R[160]]],["bool"]]],[11,"new",E,R[1437],145,[[[R[26],["pages"]],["pages"],["bool"]],[[R[2],[R[0]]],[R[0]]]]],[11,R[178],E,R[1438],145,[[["self"]],[R[289]]]],[11,R[179],E,E,145,[[["self"],[R[108]]],["bool"]]],[11,"new",E,R[1439],146,[[["params"],[R[467]]],["self"]]],[11,"params",E,R[1440],146,[[["self"]]]],[11,R[467],E,R[1441],146,[[["self"]]]],[11,R[1442],E,R[1443],146,[[["self"]],["bool"]]],[11,R[182],E,R[183],147,[[[R[28]]],[[R[185],[R[54]]],[R[54]]]]],[11,R[180],E,R[181],148,[[[R[28]]],[R[54]]]],[11,R[180],E,R[181],149,[[[R[28]]],[R[54]]]],[11,R[182],E,R[183],150,[[[R[28]]],[[R[184]],[R[185],[R[184]]]]]],[11,R[180],E,R[181],151,[[[R[28]]],[R[184]]]],[11,R[180],E,R[181],152,[[[R[28]]],[R[184]]]],[11,R[182],E,R[183],153,[[[R[28]]],[[R[185],[R[186]]],[R[186]]]]],[11,R[180],E,R[181],154,[[[R[28]]],[R[186]]]],[11,R[180],E,R[181],155,[[[R[28]]],[R[186]]]],[11,R[182],E,R[183],156,[[[R[28]]],[[R[187]],[R[185],[R[187]]]]]],[11,R[180],E,R[181],157,[[[R[28]]],[R[187]]]],[11,R[180],E,R[181],158,[[[R[28]]],[R[187]]]],[11,"local",E,R[1444],164,[[],[R[26]]]],[11,"import",E,R[1445],164,[[],[R[26]]]],[0,"units",R[31],"The units module provides common WebAssembly units like…",N,N],[3,"Pages",R[268],R[1446],N,N],[12,"0",E,E,168,N],[3,"Bytes",E,R[1447],N,N],[12,"0",E,E,169,N],[17,"WASM_PAGE_SIZE",E,"The page size in bytes of a wasm page.",N,N],[17,"WASM_MAX_PAGES",E,"The max number of wasm pages allowed.",N,N],[17,"WASM_MIN_PAGES",E,"The minimum number of wasm pages allowed.",N,N],[17,"_IMPL_SERIALIZE_FOR_Pages",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Pages",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_Bytes",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Bytes",E,E,N,N],[11,R[1448],E,R[1449],168,[[["pages"]],[["pages"],[R[188]],[R[2],["pages",R[188]]]]]],[11,"bytes",E,R[1450],168,[[],["bytes"]]],[0,"vm",R[31],"The runtime vm module contains data structures and helper…",N,N],[3,R[189],R[269],R[190],N,N],[12,R[32],E,E,21,N],[12,"tables",E,E,21,N],[12,R[201],E,E,21,N],[12,R[191],E,E,21,N],[12,R[33],E,E,21,N],[12,R[34],E,E,21,N],[12,R[35],E,E,21,N],[3,R[192],E,R[193],N,N],[12,R[32],E,R[194],20,N],[12,"tables",E,E,20,N],[12,R[201],E,E,20,N],[12,R[33],E,R[195],20,N],[12,R[34],E,E,20,N],[12,R[35],E,E,20,N],[12,R[196],E,R[197],20,N],[12,R[198],E,E,20,N],[12,R[199],E,E,20,N],[3,"Ctx",E,R[1451],N,N],[12,R[99],E,R[1452],170,N],[12,R[198],E,E,170,N],[12,R[1453],E,R[1454],170,N],[12,R[200],E,R[1455],170,N],[12,R[16],E,R[1456],170,N],[12,"data",E,R[1457],170,N],[12,R[1458],E,R[1459],170,N],[3,R[399],E,"The internal context of the currently running WebAssembly…",N,N],[12,R[32],E,"A pointer to an array of locally-defined memories, indexed…",171,N],[12,"tables",E,"A pointer to an array of locally-defined tables, indexed…",171,N],[12,R[201],E,"A pointer to an array of locally-defined globals, indexed…",171,N],[12,R[202],E,"A pointer to an array of imported memories, indexed by…",171,N],[12,R[203],E,"A pointer to an array of imported tables, indexed by…",171,N],[12,R[204],E,"A pointer to an array of imported globals, indexed by…",171,N],[12,R[458],E,"A pointer to an array of imported functions, indexed by…",171,N],[12,R[196],E,"A pointer to an array of signature ids. Conceptually, this…",171,N],[12,R[1038],E,"Const pointer to Intrinsics.",171,N],[12,"stack_lower_bound",E,"Stack lower bound.",171,N],[12,R[615],E,"Mutable pointer to memory base.",171,N],[12,"memory_bound",E,"Memory bound.",171,N],[12,R[199],E,"Mutable pointer to internal fields.",171,N],[12,"interrupt_signal_mem",E,"Interrupt signal mem.",171,N],[3,R[400],E,"An internal field.",N,N],[12,"init",E,"Init once field.",172,N],[12,"inner",E,"Inner field.",172,N],[3,R[401],E,"A container for VM instrinsic functions",N,N],[12,"memory_grow",E,"Const pointer to memory grow `Func`.",173,N],[12,"memory_size",E,"Const pointer to memory size `Func`.",173,N],[3,"Func",E,"Represents a function pointer. It is mostly used in the…",N,N],[12,"0",E,E,174,N],[3,"FuncEnv",E,"Represents a function environment pointer, like a captured…",N,N],[12,"0",E,E,175,N],[3,"FuncCtx",E,"Represents a function context. It is used by imported…",N,N],[12,"vmctx",E,"The `Ctx` pointer.",176,N],[12,R[205],E,"A pointer to the function environment. It is used by…",176,N],[3,R[402],E,"An imported function is a function pointer associated to a…",N,N],[12,"func",E,"Pointer to the function itself.",177,N],[12,"func_ctx",E,"Mutable non-null pointer to [`FuncCtx`].",177,N],[3,R[403],E,"Definition of a table used by the VM. (obviously)",N,N],[12,"base",E,"pointer to the elements in the table.",178,N],[12,"count",E,"Number of elements in the table (NOT necessarily the size…",178,N],[12,"table",E,"The table that this represents. At the moment, this can…",178,N],[3,R[404],E,"Definition of a memory used by the VM.",N,N],[12,"base",E,"Pointer to the bottom of this linear memory.",179,N],[12,"bound",E,"Current size of this linear memory in bytes.",179,N],[12,R[96],E,"The actual memory that this represents. This is either…",179,N],[3,R[405],E,"Definition of a global used by the VM.",N,N],[12,"data",E,"Data.",180,N],[3,"SigId",E,"Identifier for a function signature.",N,N],[12,"0",E,E,181,N],[3,R[206],E,"Caller-checked anyfunc",N,N],[12,"func",E,"Const pointer to `Func`.",182,N],[12,"ctx",E,"Mutable pointer to `Ctx`.",182,N],[12,"sig_id",E,"Sig id of this function",182,N],[5,"get_intrinsics_for_module",E,E,N,[[[R[28]]]]],[5,"get_interrupt_signal_mem",E,E,N,[[]]],[7,"INTERNAL_FIELDS",E,E,N,N],[7,"INTRINSICS_LOCAL_STATIC_MEMORY",E,"Local static memory intrinsics",N,N],[7,"INTRINSICS_LOCAL_DYNAMIC_MEMORY",E,"Local dynamic memory intrinsics",N,N],[7,"INTRINSICS_IMPORTED_STATIC_MEMORY",E,"Imported static memory intrinsics",N,N],[7,"INTRINSICS_IMPORTED_DYNAMIC_MEMORY",E,"Imported dynamic memory intrinsics",N,N],[17,R[207],E,R[208],N,N],[11,"allocate",E,"Allocate and return an `InternalField`.",172,[[],[R[94]]]],[11,"index",E,"Get the index of this `InternalField`.",172,[[["self"]],["usize"]]],[11,"offset_memory_grow",E,"Offset of the `memory_grow` field.",173,[[],["u8"]]],[11,"offset_memory_size",E,"Offset of the `memory_size` field.",173,[[],["u8"]]],[11,"new",E,E,170,[[[R[22]],[R[210]],[R[42]]],["self"]]],[11,R[209],E,E,170,[[[R[210]],[R[22]],[R[42]]],["self"]]],[11,R[96],E,R[1460],170,[[["self"],["u32"]],[R[96]]]],[11,R[1461],E,R[1462],170,[[["self"],["u32"]]]],[11,R[1463],E,R[1464],170,[[["self"]],[R[26]]]],[11,R[459],E,R[1465],170,[[["self"]],["usize"]]],[11,R[211],E,R[1466],170,[[["self"],[R[94]]],["u64"]]],[11,R[212],E,R[1467],170,[[["self"],[R[94]],["u64"]]]],[11,R[1468],E,R[1469],170,[[["self"],[R[186]]],[[R[91],["vec"]],["vec",["value"]]]]],[11,R[1470],E,E,170,[[],["u8"]]],[11,R[1471],E,E,170,[[],["u8"]]],[11,R[1472],E,E,170,[[],["u8"]]],[11,R[1473],E,E,170,[[],["u8"]]],[11,R[1474],E,E,170,[[],["u8"]]],[11,R[1475],E,E,170,[[],["u8"]]],[11,R[1476],E,E,170,[[],["u8"]]],[11,R[1477],E,E,170,[[],["u8"]]],[11,R[1478],E,E,170,[[],["u8"]]],[11,R[1479],E,E,170,[[],["u8"]]],[11,R[1480],E,E,170,[[],["u8"]]],[11,R[1481],E,E,170,[[],["u8"]]],[11,R[1482],E,E,170,[[],["u8"]]],[11,R[1483],E,E,170,[[],["u8"]]],[11,R[1484],E,E,170,[[],["u8"]]],[11,R[217],E,"Offset to the `vmctx` field.",176,[[],["u8"]]],[11,"offset_func_env",E,"Offset to the `func_env` field.",176,[[],["u8"]]],[11,"size",E,"Size of a `FuncCtx`.",176,[[],["u8"]]],[11,R[215],E,R[216],177,[[],["u8"]]],[11,"offset_func_ctx",E,"Offset to the `func_ctx` field.",177,[[],["u8"]]],[11,"size",E,"Size of an `ImportedFunc`.",177,[[],["u8"]]],[11,R[213],E,R[214],178,[[],["u8"]]],[11,"offset_count",E,"Offset to the `count` field.",178,[[],["u8"]]],[11,"size",E,"Size of a `LocalTable`.",178,[[],["u8"]]],[11,R[213],E,R[214],179,[[],["u8"]]],[11,"offset_bound",E,"Offset to the `bound` field.",179,[[],["u8"]]],[11,"size",E,"Size of a `LocalMemory`.",179,[[],["u8"]]],[11,"offset_data",E,"Offset to the `data` field.",180,[[],["u8"]]],[11,"null",E,"A null `LocalGlobal`.",180,[[],["self"]]],[11,"size",E,"Size of a `LocalGlobal`.",180,[[],["u8"]]],[11,"null",E,"A null `Anyfunc` value.",182,[[],["self"]]],[11,R[215],E,R[216],182,[[],["u8"]]],[11,R[217],E,"Offset to the `vmctx` field..",182,[[],["u8"]]],[11,"offset_sig_id",E,"Offset to the `sig_id` field.",182,[[],["u8"]]],[11,"size",E,"The size of `Anyfunc`.",182,[[],["u8"]]],[0,"vmcalls",R[31],"Functions called from the generated code.",N,N],[5,"local_static_memory_grow","wasmer_runtime_core::vmcalls","Increase the size of the static local memory with offset…",N,[[[R[43]],["pages"],["ctx"]],["i32"]]],[5,"local_static_memory_size",E,"Get the size of a local [`StaticMemory`] in [`Pages`].",N,[[[R[43]],["ctx"]],["pages"]]],[5,"local_dynamic_memory_grow",E,"Increase the size of the dynamic local memory with offset…",N,[[[R[43]],["pages"],["ctx"]],["i32"]]],[5,"local_dynamic_memory_size",E,"Get the size of a local [`DynamicMemory`] in [`Pages`].",N,[[[R[43]],["ctx"]],["pages"]]],[5,"imported_static_memory_grow",E,"Increase the size of the static imported memory with…",N,[[[R[218]],["pages"],["ctx"]],["i32"]]],[5,"imported_static_memory_size",E,"Get the size of an imported [`StaticMemory`] in [`Pages`].",N,[[[R[218]],["ctx"]],["pages"]]],[5,"imported_dynamic_memory_grow",E,"Increase the size of the dynamic imported memory with…",N,[[[R[218]],["pages"],["ctx"]],["i32"]]],[5,"imported_dynamic_memory_size",E,"Get the size of an imported [`DynamicMemory`] in [`Pages`].",N,[[[R[218]],["ctx"]],["pages"]]],[5,"local_table_grow",E,E,N,[[["u32"],["ctx"],[R[44]]],["i32"]]],[5,"local_table_size",E,E,N,[[["ctx"],[R[44]]],["u32"]]],[0,"fault",R[31],"The fault module contains the implementation for handling…",N,N],[3,R[406],R[221],E,N,N],[12,"jmpbuf",E,E,183,N],[12,R[461],E,E,183,N],[12,"payload",E,E,183,N],[3,R[407],E,"A store for boundary register preservation.",N,N],[12,"r15",E,"R15.",184,N],[12,"r14",E,"R14.",184,N],[12,"r13",E,"R13.",184,N],[12,"r12",E,"R12.",184,N],[12,"rbx",E,"RBX.",184,N],[3,R[408],E,E,N,N],[12,"0",E,E,185,N],[3,R[222],E,E,N,N],[12,R[129],E,E,186,N],[3,R[409],E,"Info about the fault",N,N],[12,"faulting_addr",E,"Faulting address.",187,N],[12,"ip",E,"Instruction pointer.",187,N],[12,"known_registers",E,"Values of known registers.",187,N],[5,R[220],E,E,N,[[],["u64"]]],[5,"get_boundary_register_preservation",E,"Gets a mutable pointer to the…",N,[[]]],[5,"was_sigint_triggered_fault",E,"Returns a boolean indicating if SIGINT triggered the fault.",N,[[],["bool"]]],[5,"with_ctx",E,"Runs a callback function with the given `Ctx`.",N,[[["fnonce"]],["r"]]],[5,R[1485],E,R[1486],N,[[[R[219]]]]],[5,R[1487],E,R[1488],N,[[],[[R[26],[R[219]]],[R[219]]]]],[5,"get_wasm_interrupt_signal_mem",E,"Gets the wasm interrupt signal mem.",N,[[]]],[5,"set_wasm_interrupt_on_ctx",E,"Sets the wasm interrupt on the given `Ctx`.",N,[[]]],[5,"set_wasm_interrupt",E,"Sets a wasm interrupt.",N,[[]]],[5,"clear_wasm_interrupt",E,"Clears the wasm interrupt.",N,[[]]],[5,"catch_unsafe_unwind",E,"Catches an unsafe unwind with the given functions and…",N,[[[R[25]],["fnonce"],[R[26],[R[25]]]],[["box",["any"]],[R[2],["box"]]]]],[5,"begin_unsafe_unwind",E,"Begins an unsafe unwind.",N,[[["box",["any"]],["any"]]]],[5,"with_breakpoint_map",E,E,N,[[["fnonce"]],["r"]]],[5,"allocate_and_run",E,"Allocates and runs with the given stack size and closure.",N,[[["usize"],["fnonce"]],["r"]]],[5,R[1103],E,E,N,[[["c_int"]]]],[5,"sigint_handler",E,E,N,[[["c_int"]]]],[5,"ensure_sighandler",E,"Ensure the signal handler is installed.",N,[[]]],[5,R[1164],E,E,N,[[]]],[5,"get_fault_info",E,"Get fault info from siginfo and ucontext.",N,[[],[R[295]]]],[0,"raw",E,"The raw module contains required externed function…",N,N],[5,R[220],"wasmer_runtime_core::fault::raw","Load registers and return on the stack…",N,N],[5,"register_preservation_trampoline",E,"Internal routine for switching into a backend without…",N,N],[5,"setjmp",E,"libc setjmp",N,N],[5,"longjmp",E,"libc longjmp",N,N],[6,"SetJmpBuffer",R[221],E,N,N],[7,R[222],E,E,N,N],[7,"INTERRUPT_SIGNAL_DELIVERED",E,E,N,N],[7,"INSTALL_SIGHANDLER",E,E,N,N],[17,"TRAP_STACK_SIZE",E,E,N,N],[17,R[1165],E,E,N,N],[17,"UNWIND",E,E,N,N],[17,"CURRENT_CTX",E,E,N,N],[17,"CURRENT_CODE_VERSIONS",E,E,N,N],[17,"WAS_SIGINT_TRIGGERED",E,E,N,N],[17,"BOUNDARY_REGISTER_PRESERVATION",E,E,N,N],[17,"INTERRUPT_SIGNAL_MEM_SIZE",E,E,N,N],[11,R[234],E,"Parses the stack and builds an execution state image.",187,[[["self"],["usize"],[R[26],["usize"]]],[[R[223]],[R[26],[R[223]]]]]],[0,"state",R[31],"The state module is used to track state of a running web…",N,N],[3,R[410],R[232],"An index to a register",N,N],[12,"0",E,E,188,N],[3,R[411],E,"A container for the state of a running wasm instance.",N,N],[12,"stack_values",E,"Stack values.",189,N],[12,"register_values",E,"Register values.",189,N],[12,"prev_frame",E,"Previous frame.",189,N],[12,"wasm_stack",E,"Wasm stack.",189,N],[12,R[224],E,R[225],189,N],[12,R[226],E,R[227],189,N],[3,R[412],E,"A diff of two `MachineState`s.",N,N],[12,"last",E,"Last.",190,N],[12,"stack_push",E,"Stack push.",190,N],[12,"stack_pop",E,"Stack pop.",190,N],[12,"reg_diff",E,"Register diff.",190,N],[12,"prev_frame_diff",E,"Previous frame diff.",190,N],[12,"wasm_stack_push",E,"Wasm stack push.",190,N],[12,"wasm_stack_pop",E,"Wasm stack pop.",190,N],[12,R[224],E,R[225],190,N],[12,R[226],E,R[227],190,N],[3,R[413],E,"A map of function states.",N,N],[12,"initial",E,"Initial.",191,N],[12,R[228],E,"Local Function Id.",191,N],[12,"locals",E,"Locals.",191,N],[12,"shadow_size",E,"Shadow size.",191,N],[12,"diffs",E,"Diffs.",191,N],[12,"wasm_function_header_target_offset",E,"Wasm Function Header target offset.",191,N],[12,"wasm_offset_to_target_offset",E,"Wasm offset to target offset",191,N],[12,"loop_offsets",E,"Loop offsets.",191,N],[12,"call_offsets",E,"Call offsets.",191,N],[12,"trappable_offsets",E,"Trappable offsets.",191,N],[3,R[414],E,"Info for an offset.",N,N],[12,"end_offset",E,"End offset.",192,N],[12,"diff_id",E,"Diff Id.",192,N],[12,"activate_offset",E,"Activate offset.",192,N],[3,R[415],E,"A map of module state.",N,N],[12,R[198],E,"Local functions.",193,N],[12,"total_size",E,"Total size.",193,N],[3,R[416],E,"State dump of a wasm function.",N,N],[12,R[228],E,"Local function id.",194,N],[12,R[226],E,R[227],194,N],[12,"stack",E,"Stack.",194,N],[12,"locals",E,"Locals.",194,N],[3,R[417],E,"An image of the execution state.",N,N],[12,"frames",E,"Frames.",195,N],[3,R[418],E,"Represents an image of an `Instance` including its memory,…",N,N],[12,R[96],E,"Memory for this `InstanceImage`",196,N],[12,R[201],E,"Stored globals for this `InstanceImage`",196,N],[12,"execution_state",E,"`ExecutionStateImage` for this `InstanceImage`",196,N],[3,R[419],E,R[1489],N,N],[12,"baseline",E,R[1490],197,N],[12,"msm",E,R[1491],197,N],[12,"base",E,R[1492],197,N],[12,"backend",E,R[1493],197,N],[12,R[229],E,R[1494],197,N],[4,R[420],E,"A kind of wasm or constant value",N,N],[13,"Runtime",E,"A wasm runtime value",198,N],[13,"Const",E,"A wasm constant value",198,N],[4,R[421],E,"A kind of machine value.",N,N],[13,"Undefined",E,"Undefined.",199,N],[13,"Vmctx",E,"Vmctx.",199,N],[13,"VmctxDeref",E,"Vmctx Deref.",199,N],[13,"PreserveRegister",E,"Preserve Register.",199,N],[13,"CopyStackBPRelative",E,"Copy Stack BP Relative.",199,N],[13,"ExplicitShadow",E,"Explicit Shadow.",199,N],[13,"WasmStack",E,"Wasm Stack.",199,N],[13,"WasmLocal",E,"Wasm Local.",199,N],[13,"TwoHalves",E,"Two Halves.",199,N],[4,R[422],E,"A kind of suspend offset.",N,N],[13,"Loop",E,"A loop.",200,N],[13,"Call",E,"A call.",200,N],[13,"Trappable",E,"A trappable.",200,N],[0,"x64_decl",E,"Declarations for x86-64 registers.",N,N],[4,"GPR",R[270],R[230],N,N],[13,"RAX",E,R[492],201,N],[13,"RCX",E,R[493],201,N],[13,"RDX",E,R[494],201,N],[13,"RBX",E,R[495],201,N],[13,"RSP",E,R[496],201,N],[13,"RBP",E,R[497],201,N],[13,"RSI",E,R[498],201,N],[13,"RDI",E,R[499],201,N],[13,"R8",E,R[500],201,N],[13,"R9",E,R[501],201,N],[13,"R10",E,R[502],201,N],[13,"R11",E,R[503],201,N],[13,"R12",E,R[504],201,N],[13,"R13",E,R[505],201,N],[13,"R14",E,R[506],201,N],[13,"R15",E,R[507],201,N],[4,"XMM",E,R[508],N,N],[13,"XMM0",E,R[509],202,N],[13,"XMM1",E,R[510],202,N],[13,"XMM2",E,R[511],202,N],[13,"XMM3",E,R[512],202,N],[13,"XMM4",E,R[513],202,N],[13,"XMM5",E,R[514],202,N],[13,"XMM6",E,R[515],202,N],[13,"XMM7",E,R[516],202,N],[13,"XMM8",E,R[517],202,N],[13,"XMM9",E,R[518],202,N],[13,"XMM10",E,R[519],202,N],[13,"XMM11",E,R[520],202,N],[13,"XMM12",E,R[521],202,N],[13,"XMM13",E,R[522],202,N],[13,"XMM14",E,R[523],202,N],[13,"XMM15",E,R[524],202,N],[4,R[423],E,"A machine register under the x86-64 architecture.",N,N],[13,"GPR",E,R[230],203,N],[13,"XMM",E,"XMM (floating point/SIMD) registers.",203,N],[11,"to_index",E,"Returns the index of the register.",203,[[["self"]],[R[296]]]],[11,"from_dwarf_regnum",E,"Converts a DWARD regnum to X64Register.",203,[[["u16"]],[[R[231]],[R[26],[R[231]]]]]],[0,"x64",R[232],"The x64 state module contains functions to generate state…",N,N],[5,"compute_vmctx_deref","wasmer_runtime_core::state::x64",E,N,[[],["u64"]]],[5,"new_machine_state",E,"Create a new `MachineState` with default values.",N,[[],[R[236]]]],[5,"invoke_call_return_on_stack",E,"Invokes a call return on the stack for the given module…",N,[[[R[24]],[R[25]],["usize"],[R[233]],[R[26],[R[25]]],["ctx"]],[["box",["any"]],[R[2],["u64","box"]],["u64"]]]],[5,"build_instance_image",E,"Builds an `InstanceImage` for the given `Ctx` and…",N,[[[R[223]],["ctx"]],[R[233]]]],[5,R[234],E,"Returns a `ExecutionStateImage` for the given versions,…",N,[[[R[26],["usize"]],[R[26],["u64"]],["usize"],["fn"],["u64"]],[R[223]]]],[17,"_IMPL_SERIALIZE_FOR_RegisterIndex",R[232],E,N,N],[17,"_IMPL_DESERIALIZE_FOR_RegisterIndex",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_WasmAbstractValue",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_WasmAbstractValue",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_MachineState",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_MachineState",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_MachineStateDiff",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_MachineStateDiff",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_MachineValue",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_MachineValue",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_FunctionStateMap",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_FunctionStateMap",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_SuspendOffset",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_SuspendOffset",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_OffsetInfo",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_OffsetInfo",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_ModuleStateMap",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_ModuleStateMap",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_WasmFunctionStateDump",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_WasmFunctionStateDump",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_ExecutionStateImage",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_ExecutionStateImage",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_InstanceImage",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_InstanceImage",E,E,N,N],[11,"lookup_ip",E,"Looks up an ip from self using the given ip, base, and…",193,[[["self"],["fnonce"],["usize"]],[R[26]]]],[11,"lookup_call_ip",E,"Looks up a call ip from self using the given ip and base…",193,[[["self"],["usize"]],[R[26]]]],[11,"lookup_trappable_ip",E,"Looks up a trappable ip from self using the given ip and…",193,[[["self"],["usize"]],[R[26]]]],[11,"lookup_loop_ip",E,"Looks up a loop ip from self using the given ip and base…",193,[[["self"],["usize"]],[R[26]]]],[11,"new",E,"Creates a new `FunctionStateMap` with the given parameters.",191,[[[R[235]],["usize"],["vec",[R[235]]],[R[236]]],[R[237]]]],[11,"diff",E,"Creates a `MachineStateDiff` from self and the given…",189,[[["self"],[R[236]]],[R[286]]]],[11,"build_state",E,"Creates a `MachineState` from the given `&FunctionStateMap`.",190,[[["self"],[R[237]]],[R[236]]]],[11,"print_backtrace_if_needed",E,"Prints a backtrace if the `WASMER_BACKTRACE` environment…",195,[[["self"]]]],[11,"output",E,"Converts self into a `String`, used for display purposes.",195,[[["self"]],[R[0]]]],[11,"from_bytes",E,"Converts a slice of bytes into an `Option<InstanceImage>`",196,[[],[[R[233]],[R[26],[R[233]]]]]],[11,"to_bytes",E,"Converts self into a vector of bytes.",196,[[["self"]],[["vec",["u8"]],["u8"]]]],[0,"tiering",R[31],"The tiering module supports switching between code…",N,N],[3,"Defer",R[271],E,N,N],[12,"0",E,E,204,N],[3,R[424],E,"Context for an interactive shell.",N,N],[12,"image",E,"Optional instance image.",205,N],[12,"patched",E,"Flag to indicate patching.",205,N],[3,R[425],E,E,N,N],[12,"outcome",E,E,206,N],[3,R[426],E,E,N,N],[12,R[238],E,E,207,N],[12,R[16],E,E,207,N],[3,R[427],E,E,N,N],[12,"0",E,E,208,N],[4,R[428],E,"Kind of shell exit operation.",N,N],[13,"ContinueWith",E,"Operation to continue with an instance image.",209,N],[5,"do_optimize",E,E,N,[[["box",[R[15]]],["optimizationstate"],[R[15]],["mutex"],["str"]]]],[5,"run_tiering",E,"Runs an instance with tiering.",N,[[["fn"],[R[233]],["vec"],[R[92]],[R[26],[R[233]]],[R[37]],[R[28]],["str"]],[[R[2],[R[0]]],[R[0]]]]],[0,"prelude",R[31],"The prelude module is a helper module used to bring…",N,N],[6,"Result",E,R[239],N,N],[17,"VERSION",E,R[616],N,N],[8,R[342],E,R[240],N,N],[10,R[241],E,R[242],60,[[["self"]],[R[81]]]],[14,"func",E,R[1495],N,N],[14,"imports",E,R[1496],N,N],[14,"__imports_internal",E,E,N,N],[14,R[62],E,E,N,N],[11,"from",R[243],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[3],E,E,0,[[[U]],[R[2]]]],[11,R[4],E,E,0,[[],[R[2]]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[R[8]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[3],E,E,1,[[[U]],[R[2]]]],[11,R[4],E,E,1,[[],[R[2]]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[R[8]]]],[11,"from",R[244],E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[247],E,E,2,[[["self"]],[T]]],[11,R[246],E,E,2,[[["self"],[T]]]],[11,R[3],E,E,2,[[[U]],[R[2]]]],[11,R[4],E,E,2,[[],[R[2]]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[R[8]]]],[11,"from",R[245],E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[3],E,E,3,[[[U]],[R[2]]]],[11,R[4],E,E,3,[[],[R[2]]]],[11,R[5],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"]],[R[8]]]],[11,"from",R[20],E,92,[[[T]],[T]]],[11,"into",E,E,92,[[],[U]]],[11,R[3],E,E,92,[[[U]],[R[2]]]],[11,R[4],E,E,92,[[],[R[2]]]],[11,R[5],E,E,92,[[["self"]],[T]]],[11,R[6],E,E,92,[[["self"]],[T]]],[11,R[7],E,E,92,[[["self"]],[R[8]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[247],E,E,4,[[["self"]],[T]]],[11,R[246],E,E,4,[[["self"],[T]]]],[11,R[3],E,E,4,[[[U]],[R[2]]]],[11,R[4],E,E,4,[[],[R[2]]]],[11,R[5],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[7],E,E,4,[[["self"]],[R[8]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[3],E,E,5,[[[U]],[R[2]]]],[11,R[4],E,E,5,[[],[R[2]]]],[11,R[5],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[7],E,E,5,[[["self"]],[R[8]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[3],E,E,6,[[[U]],[R[2]]]],[11,R[4],E,E,6,[[],[R[2]]]],[11,R[5],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[7],E,E,6,[[["self"]],[R[8]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[3],E,E,7,[[[U]],[R[2]]]],[11,R[4],E,E,7,[[],[R[2]]]],[11,R[5],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[7],E,E,7,[[["self"]],[R[8]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[3],E,E,8,[[[U]],[R[2]]]],[11,R[4],E,E,8,[[],[R[2]]]],[11,R[5],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[7],E,E,8,[[["self"]],[R[8]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[247],E,E,9,[[["self"]],[T]]],[11,R[246],E,E,9,[[["self"],[T]]]],[11,R[3],E,E,9,[[[U]],[R[2]]]],[11,R[4],E,E,9,[[],[R[2]]]],[11,R[5],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[T]]],[11,R[7],E,E,9,[[["self"]],[R[8]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[247],E,E,10,[[["self"]],[T]]],[11,R[246],E,E,10,[[["self"],[T]]]],[11,R[3],E,E,10,[[[U]],[R[2]]]],[11,R[4],E,E,10,[[],[R[2]]]],[11,R[5],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[T]]],[11,R[7],E,E,10,[[["self"]],[R[8]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[247],E,E,11,[[["self"]],[T]]],[11,R[246],E,E,11,[[["self"],[T]]]],[11,R[3],E,E,11,[[[U]],[R[2]]]],[11,R[4],E,E,11,[[],[R[2]]]],[11,R[5],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[T]]],[11,R[7],E,E,11,[[["self"]],[R[8]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[247],E,E,12,[[["self"]],[T]]],[11,R[246],E,E,12,[[["self"],[T]]]],[11,R[3],E,E,12,[[[U]],[R[2]]]],[11,R[4],E,E,12,[[],[R[2]]]],[11,R[5],E,E,12,[[["self"]],[T]]],[11,R[6],E,E,12,[[["self"]],[T]]],[11,R[7],E,E,12,[[["self"]],[R[8]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[247],E,E,13,[[["self"]],[T]]],[11,R[246],E,E,13,[[["self"],[T]]]],[11,R[3],E,E,13,[[[U]],[R[2]]]],[11,R[4],E,E,13,[[],[R[2]]]],[11,R[5],E,E,13,[[["self"]],[T]]],[11,R[6],E,E,13,[[["self"]],[T]]],[11,R[7],E,E,13,[[["self"]],[R[8]]]],[11,R[248],E,E,13,[[["self"],["k"]],["bool"]]],[11,"from",R[152],E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[247],E,E,14,[[["self"]],[T]]],[11,R[246],E,E,14,[[["self"],[T]]]],[11,R[3],E,E,14,[[[U]],[R[2]]]],[11,R[4],E,E,14,[[],[R[2]]]],[11,R[5],E,E,14,[[["self"]],[T]]],[11,R[6],E,E,14,[[["self"]],[T]]],[11,R[7],E,E,14,[[["self"]],[R[8]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[247],E,E,15,[[["self"]],[T]]],[11,R[246],E,E,15,[[["self"],[T]]]],[11,R[3],E,E,15,[[[U]],[R[2]]]],[11,R[4],E,E,15,[[],[R[2]]]],[11,R[5],E,E,15,[[["self"]],[T]]],[11,R[6],E,E,15,[[["self"]],[T]]],[11,R[7],E,E,15,[[["self"]],[R[8]]]],[11,R[248],E,E,15,[[["self"],["k"]],["bool"]]],[11,"from",R[249],E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[3],E,E,19,[[[U]],[R[2]]]],[11,R[4],E,E,19,[[],[R[2]]]],[11,R[5],E,E,19,[[["self"]],[T]]],[11,R[6],E,E,19,[[["self"]],[T]]],[11,R[7],E,E,19,[[["self"]],[R[8]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[3],E,E,20,[[[U]],[R[2]]]],[11,R[4],E,E,20,[[],[R[2]]]],[11,R[5],E,E,20,[[["self"]],[T]]],[11,R[6],E,E,20,[[["self"]],[T]]],[11,R[7],E,E,20,[[["self"]],[R[8]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[3],E,E,21,[[[U]],[R[2]]]],[11,R[4],E,E,21,[[],[R[2]]]],[11,R[5],E,E,21,[[["self"]],[T]]],[11,R[6],E,E,21,[[["self"]],[T]]],[11,R[7],E,E,21,[[["self"]],[R[8]]]],[11,"from",R[250],E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[247],E,E,22,[[["self"]],[T]]],[11,R[246],E,E,22,[[["self"],[T]]]],[11,R[3],E,E,22,[[[U]],[R[2]]]],[11,R[4],E,E,22,[[],[R[2]]]],[11,R[5],E,E,22,[[["self"]],[T]]],[11,R[6],E,E,22,[[["self"]],[T]]],[11,R[7],E,E,22,[[["self"]],[R[8]]]],[11,R[248],E,E,22,[[["self"],["k"]],["bool"]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[3],E,E,23,[[[U]],[R[2]]]],[11,R[4],E,E,23,[[],[R[2]]]],[11,R[5],E,E,23,[[["self"]],[T]]],[11,R[6],E,E,23,[[["self"]],[T]]],[11,R[7],E,E,23,[[["self"]],[R[8]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[3],E,E,24,[[[U]],[R[2]]]],[11,R[4],E,E,24,[[],[R[2]]]],[11,R[5],E,E,24,[[["self"]],[T]]],[11,R[6],E,E,24,[[["self"]],[T]]],[11,R[7],E,E,24,[[["self"]],[R[8]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[3],E,E,25,[[[U]],[R[2]]]],[11,R[4],E,E,25,[[],[R[2]]]],[11,R[5],E,E,25,[[["self"]],[T]]],[11,R[6],E,E,25,[[["self"]],[T]]],[11,R[7],E,E,25,[[["self"]],[R[8]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[3],E,E,26,[[[U]],[R[2]]]],[11,R[4],E,E,26,[[],[R[2]]]],[11,R[5],E,E,26,[[["self"]],[T]]],[11,R[6],E,E,26,[[["self"]],[T]]],[11,R[7],E,E,26,[[["self"]],[R[8]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[3],E,E,27,[[[U]],[R[2]]]],[11,R[4],E,E,27,[[],[R[2]]]],[11,R[5],E,E,27,[[["self"]],[T]]],[11,R[6],E,E,27,[[["self"]],[T]]],[11,R[7],E,E,27,[[["self"]],[R[8]]]],[11,"from",R[251],E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[3],E,E,28,[[[U]],[R[2]]]],[11,R[4],E,E,28,[[],[R[2]]]],[11,R[5],E,E,28,[[["self"]],[T]]],[11,R[6],E,E,28,[[["self"]],[T]]],[11,R[7],E,E,28,[[["self"]],[R[8]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[3],E,E,29,[[[U]],[R[2]]]],[11,R[4],E,E,29,[[],[R[2]]]],[11,R[5],E,E,29,[[["self"]],[T]]],[11,R[6],E,E,29,[[["self"]],[T]]],[11,R[7],E,E,29,[[["self"]],[R[8]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[3],E,E,30,[[[U]],[R[2]]]],[11,R[4],E,E,30,[[],[R[2]]]],[11,R[5],E,E,30,[[["self"]],[T]]],[11,R[6],E,E,30,[[["self"]],[T]]],[11,R[7],E,E,30,[[["self"]],[R[8]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[3],E,E,31,[[[U]],[R[2]]]],[11,R[4],E,E,31,[[],[R[2]]]],[11,R[5],E,E,31,[[["self"]],[T]]],[11,R[6],E,E,31,[[["self"]],[T]]],[11,R[7],E,E,31,[[["self"]],[R[8]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[3],E,E,32,[[[U]],[R[2]]]],[11,R[4],E,E,32,[[],[R[2]]]],[11,R[5],E,E,32,[[["self"]],[T]]],[11,R[6],E,E,32,[[["self"]],[T]]],[11,R[7],E,E,32,[[["self"]],[R[8]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[3],E,E,33,[[[U]],[R[2]]]],[11,R[4],E,E,33,[[],[R[2]]]],[11,R[5],E,E,33,[[["self"]],[T]]],[11,R[6],E,E,33,[[["self"]],[T]]],[11,R[7],E,E,33,[[["self"]],[R[8]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[3],E,E,34,[[[U]],[R[2]]]],[11,R[4],E,E,34,[[],[R[2]]]],[11,R[5],E,E,34,[[["self"]],[T]]],[11,R[6],E,E,34,[[["self"]],[T]]],[11,R[7],E,E,34,[[["self"]],[R[8]]]],[11,"from",R[59],E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[247],E,E,39,[[["self"]],[T]]],[11,R[246],E,E,39,[[["self"],[T]]]],[11,R[252],E,E,39,[[["self"]],[R[0]]]],[11,R[3],E,E,39,[[[U]],[R[2]]]],[11,R[4],E,E,39,[[],[R[2]]]],[11,R[5],E,E,39,[[["self"]],[T]]],[11,R[6],E,E,39,[[["self"]],[T]]],[11,R[7],E,E,39,[[["self"]],[R[8]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,"into",E,E,40,[[],[U]]],[11,R[247],E,E,40,[[["self"]],[T]]],[11,R[246],E,E,40,[[["self"],[T]]]],[11,R[252],E,E,40,[[["self"]],[R[0]]]],[11,R[3],E,E,40,[[[U]],[R[2]]]],[11,R[4],E,E,40,[[],[R[2]]]],[11,R[5],E,E,40,[[["self"]],[T]]],[11,R[6],E,E,40,[[["self"]],[T]]],[11,R[7],E,E,40,[[["self"]],[R[8]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,"into",E,E,41,[[],[U]]],[11,R[252],E,E,41,[[["self"]],[R[0]]]],[11,R[3],E,E,41,[[[U]],[R[2]]]],[11,R[4],E,E,41,[[],[R[2]]]],[11,R[5],E,E,41,[[["self"]],[T]]],[11,R[6],E,E,41,[[["self"]],[T]]],[11,R[7],E,E,41,[[["self"]],[R[8]]]],[11,"from",E,E,42,[[[T]],[T]]],[11,"into",E,E,42,[[],[U]]],[11,R[247],E,E,42,[[["self"]],[T]]],[11,R[246],E,E,42,[[["self"],[T]]]],[11,R[252],E,E,42,[[["self"]],[R[0]]]],[11,R[3],E,E,42,[[[U]],[R[2]]]],[11,R[4],E,E,42,[[],[R[2]]]],[11,R[5],E,E,42,[[["self"]],[T]]],[11,R[6],E,E,42,[[["self"]],[T]]],[11,R[7],E,E,42,[[["self"]],[R[8]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,"into",E,E,43,[[],[U]]],[11,R[252],E,E,43,[[["self"]],[R[0]]]],[11,R[3],E,E,43,[[[U]],[R[2]]]],[11,R[4],E,E,43,[[],[R[2]]]],[11,R[5],E,E,43,[[["self"]],[T]]],[11,R[6],E,E,43,[[["self"]],[T]]],[11,R[7],E,E,43,[[["self"]],[R[8]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,"into",E,E,44,[[],[U]]],[11,R[247],E,E,44,[[["self"]],[T]]],[11,R[246],E,E,44,[[["self"],[T]]]],[11,R[252],E,E,44,[[["self"]],[R[0]]]],[11,R[3],E,E,44,[[[U]],[R[2]]]],[11,R[4],E,E,44,[[],[R[2]]]],[11,R[5],E,E,44,[[["self"]],[T]]],[11,R[6],E,E,44,[[["self"]],[T]]],[11,R[7],E,E,44,[[["self"]],[R[8]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,"into",E,E,45,[[],[U]]],[11,R[252],E,E,45,[[["self"]],[R[0]]]],[11,R[3],E,E,45,[[[U]],[R[2]]]],[11,R[4],E,E,45,[[],[R[2]]]],[11,R[5],E,E,45,[[["self"]],[T]]],[11,R[6],E,E,45,[[["self"]],[T]]],[11,R[7],E,E,45,[[["self"]],[R[8]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,"into",E,E,46,[[],[U]]],[11,R[252],E,E,46,[[["self"]],[R[0]]]],[11,R[3],E,E,46,[[[U]],[R[2]]]],[11,R[4],E,E,46,[[],[R[2]]]],[11,R[5],E,E,46,[[["self"]],[T]]],[11,R[6],E,E,46,[[["self"]],[T]]],[11,R[7],E,E,46,[[["self"]],[R[8]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,"into",E,E,47,[[],[U]]],[11,R[252],E,E,47,[[["self"]],[R[0]]]],[11,R[3],E,E,47,[[[U]],[R[2]]]],[11,R[4],E,E,47,[[],[R[2]]]],[11,R[5],E,E,47,[[["self"]],[T]]],[11,R[6],E,E,47,[[["self"]],[T]]],[11,R[7],E,E,47,[[["self"]],[R[8]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,"into",E,E,48,[[],[U]]],[11,R[252],E,E,48,[[["self"]],[R[0]]]],[11,R[3],E,E,48,[[[U]],[R[2]]]],[11,R[4],E,E,48,[[],[R[2]]]],[11,R[5],E,E,48,[[["self"]],[T]]],[11,R[6],E,E,48,[[["self"]],[T]]],[11,R[7],E,E,48,[[["self"]],[R[8]]]],[11,"from",E,E,49,[[[T]],[T]]],[11,"into",E,E,49,[[],[U]]],[11,R[252],E,E,49,[[["self"]],[R[0]]]],[11,R[3],E,E,49,[[[U]],[R[2]]]],[11,R[4],E,E,49,[[],[R[2]]]],[11,R[5],E,E,49,[[["self"]],[T]]],[11,R[6],E,E,49,[[["self"]],[T]]],[11,R[7],E,E,49,[[["self"]],[R[8]]]],[11,"from",E,E,50,[[[T]],[T]]],[11,"into",E,E,50,[[],[U]]],[11,R[3],E,E,50,[[[U]],[R[2]]]],[11,R[4],E,E,50,[[],[R[2]]]],[11,R[5],E,E,50,[[["self"]],[T]]],[11,R[6],E,E,50,[[["self"]],[T]]],[11,R[7],E,E,50,[[["self"]],[R[8]]]],[11,"from",R[80],E,51,[[[T]],[T]]],[11,"into",E,E,51,[[],[U]]],[11,R[247],E,E,51,[[["self"]],[T]]],[11,R[246],E,E,51,[[["self"],[T]]]],[11,R[3],E,E,51,[[[U]],[R[2]]]],[11,R[4],E,E,51,[[],[R[2]]]],[11,R[5],E,E,51,[[["self"]],[T]]],[11,R[6],E,E,51,[[["self"]],[T]]],[11,R[7],E,E,51,[[["self"]],[R[8]]]],[11,"from",E,E,52,[[[T]],[T]]],[11,"into",E,E,52,[[],[U]]],[11,R[255],E,E,52,[[],["i"]]],[11,R[3],E,E,52,[[[U]],[R[2]]]],[11,R[4],E,E,52,[[],[R[2]]]],[11,R[5],E,E,52,[[["self"]],[T]]],[11,R[6],E,E,52,[[["self"]],[T]]],[11,R[7],E,E,52,[[["self"]],[R[8]]]],[11,"from",E,E,53,[[[T]],[T]]],[11,"into",E,E,53,[[],[U]]],[11,R[247],E,E,53,[[["self"]],[T]]],[11,R[246],E,E,53,[[["self"],[T]]]],[11,R[3],E,E,53,[[[U]],[R[2]]]],[11,R[4],E,E,53,[[],[R[2]]]],[11,R[5],E,E,53,[[["self"]],[T]]],[11,R[6],E,E,53,[[["self"]],[T]]],[11,R[7],E,E,53,[[["self"]],[R[8]]]],[11,"from",E,E,54,[[[T]],[T]]],[11,"into",E,E,54,[[],[U]]],[11,R[247],E,E,54,[[["self"]],[T]]],[11,R[246],E,E,54,[[["self"],[T]]]],[11,R[3],E,E,54,[[[U]],[R[2]]]],[11,R[4],E,E,54,[[],[R[2]]]],[11,R[5],E,E,54,[[["self"]],[T]]],[11,R[6],E,E,54,[[["self"]],[T]]],[11,R[7],E,E,54,[[["self"]],[R[8]]]],[11,"from",R[253],E,55,[[[T]],[T]]],[11,"into",E,E,55,[[],[U]]],[11,R[247],E,E,55,[[["self"]],[T]]],[11,R[246],E,E,55,[[["self"],[T]]]],[11,R[3],E,E,55,[[[U]],[R[2]]]],[11,R[4],E,E,55,[[],[R[2]]]],[11,R[5],E,E,55,[[["self"]],[T]]],[11,R[6],E,E,55,[[["self"]],[T]]],[11,R[7],E,E,55,[[["self"]],[R[8]]]],[11,"from",R[254],E,56,[[[T]],[T]]],[11,"into",E,E,56,[[],[U]]],[11,R[255],E,E,56,[[],["i"]]],[11,R[3],E,E,56,[[[U]],[R[2]]]],[11,R[4],E,E,56,[[],[R[2]]]],[11,R[5],E,E,56,[[["self"]],[T]]],[11,R[6],E,E,56,[[["self"]],[T]]],[11,R[7],E,E,56,[[["self"]],[R[8]]]],[11,"from",E,E,57,[[[T]],[T]]],[11,"into",E,E,57,[[],[U]]],[11,R[255],E,E,57,[[],["i"]]],[11,R[3],E,E,57,[[[U]],[R[2]]]],[11,R[4],E,E,57,[[],[R[2]]]],[11,R[5],E,E,57,[[["self"]],[T]]],[11,R[6],E,E,57,[[["self"]],[T]]],[11,R[7],E,E,57,[[["self"]],[R[8]]]],[11,"from",E,E,58,[[[T]],[T]]],[11,"into",E,E,58,[[],[U]]],[11,R[3],E,E,58,[[[U]],[R[2]]]],[11,R[4],E,E,58,[[],[R[2]]]],[11,R[5],E,E,58,[[["self"]],[T]]],[11,R[6],E,E,58,[[["self"]],[T]]],[11,R[7],E,E,58,[[["self"]],[R[8]]]],[11,"from",R[243],E,61,[[[T]],[T]]],[11,"into",E,E,61,[[],[U]]],[11,R[3],E,E,61,[[[U]],[R[2]]]],[11,R[4],E,E,61,[[],[R[2]]]],[11,R[5],E,E,61,[[["self"]],[T]]],[11,R[6],E,E,61,[[["self"]],[T]]],[11,R[7],E,E,61,[[["self"]],[R[8]]]],[11,"from",R[256],E,210,[[[T]],[T]]],[11,"into",E,E,210,[[],[U]]],[11,R[3],E,E,210,[[[U]],[R[2]]]],[11,R[4],E,E,210,[[],[R[2]]]],[11,R[5],E,E,210,[[["self"]],[T]]],[11,R[6],E,E,210,[[["self"]],[T]]],[11,R[7],E,E,210,[[["self"]],[R[8]]]],[11,"from",E,E,62,[[[T]],[T]]],[11,"into",E,E,62,[[],[U]]],[11,R[3],E,E,62,[[[U]],[R[2]]]],[11,R[4],E,E,62,[[],[R[2]]]],[11,R[5],E,E,62,[[["self"]],[T]]],[11,R[6],E,E,62,[[["self"]],[T]]],[11,R[7],E,E,62,[[["self"]],[R[8]]]],[11,"from",E,E,63,[[[T]],[T]]],[11,"into",E,E,63,[[],[U]]],[11,R[3],E,E,63,[[[U]],[R[2]]]],[11,R[4],E,E,63,[[],[R[2]]]],[11,R[5],E,E,63,[[["self"]],[T]]],[11,R[6],E,E,63,[[["self"]],[T]]],[11,R[7],E,E,63,[[["self"]],[R[8]]]],[11,"from",R[101],E,66,[[[T]],[T]]],[11,"into",E,E,66,[[],[U]]],[11,R[3],E,E,66,[[[U]],[R[2]]]],[11,R[4],E,E,66,[[],[R[2]]]],[11,R[5],E,E,66,[[["self"]],[T]]],[11,R[6],E,E,66,[[["self"]],[T]]],[11,R[7],E,E,66,[[["self"]],[R[8]]]],[11,"from",E,E,67,[[[T]],[T]]],[11,"into",E,E,67,[[],[U]]],[11,R[3],E,E,67,[[[U]],[R[2]]]],[11,R[4],E,E,67,[[],[R[2]]]],[11,R[5],E,E,67,[[["self"]],[T]]],[11,R[6],E,E,67,[[["self"]],[T]]],[11,R[7],E,E,67,[[["self"]],[R[8]]]],[11,"from",E,E,211,[[[T]],[T]]],[11,"into",E,E,211,[[],[U]]],[11,R[3],E,E,211,[[[U]],[R[2]]]],[11,R[4],E,E,211,[[],[R[2]]]],[11,R[5],E,E,211,[[["self"]],[T]]],[11,R[6],E,E,211,[[["self"]],[T]]],[11,R[7],E,E,211,[[["self"]],[R[8]]]],[11,"from",E,E,68,[[[T]],[T]]],[11,"into",E,E,68,[[],[U]]],[11,R[3],E,E,68,[[[U]],[R[2]]]],[11,R[4],E,E,68,[[],[R[2]]]],[11,R[5],E,E,68,[[["self"]],[T]]],[11,R[6],E,E,68,[[["self"]],[T]]],[11,R[7],E,E,68,[[["self"]],[R[8]]]],[11,"from",E,E,69,[[[T]],[T]]],[11,"into",E,E,69,[[],[U]]],[11,R[247],E,E,69,[[["self"]],[T]]],[11,R[246],E,E,69,[[["self"],[T]]]],[11,R[3],E,E,69,[[[U]],[R[2]]]],[11,R[4],E,E,69,[[],[R[2]]]],[11,R[5],E,E,69,[[["self"]],[T]]],[11,R[6],E,E,69,[[["self"]],[T]]],[11,R[7],E,E,69,[[["self"]],[R[8]]]],[11,"from",E,E,70,[[[T]],[T]]],[11,"into",E,E,70,[[],[U]]],[11,R[247],E,E,70,[[["self"]],[T]]],[11,R[246],E,E,70,[[["self"],[T]]]],[11,R[3],E,E,70,[[[U]],[R[2]]]],[11,R[4],E,E,70,[[],[R[2]]]],[11,R[5],E,E,70,[[["self"]],[T]]],[11,R[6],E,E,70,[[["self"]],[T]]],[11,R[7],E,E,70,[[["self"]],[R[8]]]],[11,"from",E,E,71,[[[T]],[T]]],[11,"into",E,E,71,[[],[U]]],[11,R[3],E,E,71,[[[U]],[R[2]]]],[11,R[4],E,E,71,[[],[R[2]]]],[11,R[5],E,E,71,[[["self"]],[T]]],[11,R[6],E,E,71,[[["self"]],[T]]],[11,R[7],E,E,71,[[["self"]],[R[8]]]],[11,"from",E,E,72,[[[T]],[T]]],[11,"into",E,E,72,[[],[U]]],[11,R[247],E,E,72,[[["self"]],[T]]],[11,R[246],E,E,72,[[["self"],[T]]]],[11,R[3],E,E,72,[[[U]],[R[2]]]],[11,R[4],E,E,72,[[],[R[2]]]],[11,R[5],E,E,72,[[["self"]],[T]]],[11,R[6],E,E,72,[[["self"]],[T]]],[11,R[7],E,E,72,[[["self"]],[R[8]]]],[11,"from",E,E,73,[[[T]],[T]]],[11,"into",E,E,73,[[],[U]]],[11,R[3],E,E,73,[[[U]],[R[2]]]],[11,R[4],E,E,73,[[],[R[2]]]],[11,R[5],E,E,73,[[["self"]],[T]]],[11,R[6],E,E,73,[[["self"]],[T]]],[11,R[7],E,E,73,[[["self"]],[R[8]]]],[11,"from",E,E,74,[[[T]],[T]]],[11,"into",E,E,74,[[],[U]]],[11,R[247],E,E,74,[[["self"]],[T]]],[11,R[246],E,E,74,[[["self"],[T]]]],[11,R[3],E,E,74,[[[U]],[R[2]]]],[11,R[4],E,E,74,[[],[R[2]]]],[11,R[5],E,E,74,[[["self"]],[T]]],[11,R[6],E,E,74,[[["self"]],[T]]],[11,R[7],E,E,74,[[["self"]],[R[8]]]],[11,"from",E,E,75,[[[T]],[T]]],[11,"into",E,E,75,[[],[U]]],[11,R[247],E,E,75,[[["self"]],[T]]],[11,R[246],E,E,75,[[["self"],[T]]]],[11,R[3],E,E,75,[[[U]],[R[2]]]],[11,R[4],E,E,75,[[],[R[2]]]],[11,R[5],E,E,75,[[["self"]],[T]]],[11,R[6],E,E,75,[[["self"]],[T]]],[11,R[7],E,E,75,[[["self"]],[R[8]]]],[11,R[248],E,E,75,[[["self"],["k"]],["bool"]]],[11,"from",E,E,76,[[[T]],[T]]],[11,"into",E,E,76,[[],[U]]],[11,R[3],E,E,76,[[[U]],[R[2]]]],[11,R[4],E,E,76,[[],[R[2]]]],[11,R[5],E,E,76,[[["self"]],[T]]],[11,R[6],E,E,76,[[["self"]],[T]]],[11,R[7],E,E,76,[[["self"]],[R[8]]]],[11,"from",R[257],E,212,[[[T]],[T]]],[11,"into",E,E,212,[[],[U]]],[11,R[3],E,E,212,[[[U]],[R[2]]]],[11,R[4],E,E,212,[[],[R[2]]]],[11,R[5],E,E,212,[[["self"]],[T]]],[11,R[6],E,E,212,[[["self"]],[T]]],[11,R[7],E,E,212,[[["self"]],[R[8]]]],[11,"from",E,E,213,[[[T]],[T]]],[11,"into",E,E,213,[[],[U]]],[11,R[3],E,E,213,[[[U]],[R[2]]]],[11,R[4],E,E,213,[[],[R[2]]]],[11,R[5],E,E,213,[[["self"]],[T]]],[11,R[6],E,E,213,[[["self"]],[T]]],[11,R[7],E,E,213,[[["self"]],[R[8]]]],[11,R[258],E,E,77,[[],["a"]]],[11,R[259],E,E,77,[[]]],[11,R[260],E,E,77,[[],["a"]]],[11,R[261],E,E,77,[[]]],[11,"types",E,E,77,[[]]],[11,"call",E,E,77,[[[R[89],["func"]],["wasm"],["func"]],[[R[2],[R[168]]],[R[168]]]]],[11,"report",E,E,77,[[],[[R[2],[R[262]]],[R[262]]]]],[11,"from",E,E,77,[[[T]],[T]]],[11,"into",E,E,77,[[],[U]]],[11,R[247],E,E,77,[[["self"]],[T]]],[11,R[246],E,E,77,[[["self"],[T]]]],[11,R[3],E,E,77,[[[U]],[R[2]]]],[11,R[4],E,E,77,[[],[R[2]]]],[11,R[5],E,E,77,[[["self"]],[T]]],[11,R[6],E,E,77,[[["self"]],[T]]],[11,R[7],E,E,77,[[["self"]],[R[8]]]],[11,R[248],E,E,77,[[["self"],["k"]],["bool"]]],[11,"from",R[263],E,214,[[[T]],[T]]],[11,"into",E,E,214,[[],[U]]],[11,R[3],E,E,214,[[[U]],[R[2]]]],[11,R[4],E,E,214,[[],[R[2]]]],[11,R[5],E,E,214,[[["self"]],[T]]],[11,R[6],E,E,214,[[["self"]],[T]]],[11,R[7],E,E,214,[[["self"]],[R[8]]]],[11,"from",R[244],E,80,[[[T]],[T]]],[11,"into",E,E,80,[[],[U]]],[11,R[247],E,E,80,[[["self"]],[T]]],[11,R[246],E,E,80,[[["self"],[T]]]],[11,R[3],E,E,80,[[[U]],[R[2]]]],[11,R[4],E,E,80,[[],[R[2]]]],[11,R[5],E,E,80,[[["self"]],[T]]],[11,R[6],E,E,80,[[["self"]],[T]]],[11,R[7],E,E,80,[[["self"]],[R[8]]]],[11,"from",E,E,82,[[[T]],[T]]],[11,"into",E,E,82,[[],[U]]],[11,R[247],E,E,82,[[["self"]],[T]]],[11,R[246],E,E,82,[[["self"],[T]]]],[11,R[3],E,E,82,[[[U]],[R[2]]]],[11,R[4],E,E,82,[[],[R[2]]]],[11,R[5],E,E,82,[[["self"]],[T]]],[11,R[6],E,E,82,[[["self"]],[T]]],[11,R[7],E,E,82,[[["self"]],[R[8]]]],[11,"from",E,E,83,[[[T]],[T]]],[11,"into",E,E,83,[[],[U]]],[11,R[247],E,E,83,[[["self"]],[T]]],[11,R[246],E,E,83,[[["self"],[T]]]],[11,R[3],E,E,83,[[[U]],[R[2]]]],[11,R[4],E,E,83,[[],[R[2]]]],[11,R[5],E,E,83,[[["self"]],[T]]],[11,R[6],E,E,83,[[["self"]],[T]]],[11,R[7],E,E,83,[[["self"]],[R[8]]]],[11,"from",E,E,84,[[[T]],[T]]],[11,"into",E,E,84,[[],[U]]],[11,R[3],E,E,84,[[[U]],[R[2]]]],[11,R[4],E,E,84,[[],[R[2]]]],[11,R[5],E,E,84,[[["self"]],[T]]],[11,R[6],E,E,84,[[["self"]],[T]]],[11,R[7],E,E,84,[[["self"]],[R[8]]]],[11,"from",E,E,85,[[[T]],[T]]],[11,"into",E,E,85,[[],[U]]],[11,R[247],E,E,85,[[["self"]],[T]]],[11,R[246],E,E,85,[[["self"],[T]]]],[11,R[3],E,E,85,[[[U]],[R[2]]]],[11,R[4],E,E,85,[[],[R[2]]]],[11,R[5],E,E,85,[[["self"]],[T]]],[11,R[6],E,E,85,[[["self"]],[T]]],[11,R[7],E,E,85,[[["self"]],[R[8]]]],[11,"from",E,E,86,[[[T]],[T]]],[11,"into",E,E,86,[[],[U]]],[11,R[247],E,E,86,[[["self"]],[T]]],[11,R[246],E,E,86,[[["self"],[T]]]],[11,R[3],E,E,86,[[[U]],[R[2]]]],[11,R[4],E,E,86,[[],[R[2]]]],[11,R[5],E,E,86,[[["self"]],[T]]],[11,R[6],E,E,86,[[["self"]],[T]]],[11,R[7],E,E,86,[[["self"]],[R[8]]]],[11,R[248],E,E,86,[[["self"],["k"]],["bool"]]],[11,"from",E,E,87,[[[T]],[T]]],[11,"into",E,E,87,[[],[U]]],[11,R[247],E,E,87,[[["self"]],[T]]],[11,R[246],E,E,87,[[["self"],[T]]]],[11,R[3],E,E,87,[[[U]],[R[2]]]],[11,R[4],E,E,87,[[],[R[2]]]],[11,R[5],E,E,87,[[["self"]],[T]]],[11,R[6],E,E,87,[[["self"]],[T]]],[11,R[7],E,E,87,[[["self"]],[R[8]]]],[11,R[248],E,E,87,[[["self"],["k"]],["bool"]]],[11,"from",E,E,88,[[[T]],[T]]],[11,"into",E,E,88,[[],[U]]],[11,R[247],E,E,88,[[["self"]],[T]]],[11,R[246],E,E,88,[[["self"],[T]]]],[11,R[3],E,E,88,[[[U]],[R[2]]]],[11,R[4],E,E,88,[[],[R[2]]]],[11,R[5],E,E,88,[[["self"]],[T]]],[11,R[6],E,E,88,[[["self"]],[T]]],[11,R[7],E,E,88,[[["self"]],[R[8]]]],[11,R[248],E,E,88,[[["self"],["k"]],["bool"]]],[11,"from",R[264],E,89,[[[T]],[T]]],[11,"into",E,E,89,[[],[U]]],[11,R[3],E,E,89,[[[U]],[R[2]]]],[11,R[4],E,E,89,[[],[R[2]]]],[11,R[5],E,E,89,[[["self"]],[T]]],[11,R[6],E,E,89,[[["self"]],[T]]],[11,R[7],E,E,89,[[["self"]],[R[8]]]],[11,"from",R[265],E,90,[[[T]],[T]]],[11,"into",E,E,90,[[],[U]]],[11,R[3],E,E,90,[[[U]],[R[2]]]],[11,R[4],E,E,90,[[],[R[2]]]],[11,R[5],E,E,90,[[["self"]],[T]]],[11,R[6],E,E,90,[[["self"]],[T]]],[11,R[7],E,E,90,[[["self"]],[R[8]]]],[11,"from",E,E,91,[[[T]],[T]]],[11,"into",E,E,91,[[],[U]]],[11,R[3],E,E,91,[[[U]],[R[2]]]],[11,R[4],E,E,91,[[],[R[2]]]],[11,R[5],E,E,91,[[["self"]],[T]]],[11,R[6],E,E,91,[[["self"]],[T]]],[11,R[7],E,E,91,[[["self"]],[R[8]]]],[11,"from",R[136],E,93,[[[T]],[T]]],[11,"into",E,E,93,[[],[U]]],[11,R[247],E,E,93,[[["self"]],[T]]],[11,R[246],E,E,93,[[["self"],[T]]]],[11,R[3],E,E,93,[[[U]],[R[2]]]],[11,R[4],E,E,93,[[],[R[2]]]],[11,R[5],E,E,93,[[["self"]],[T]]],[11,R[6],E,E,93,[[["self"]],[T]]],[11,R[7],E,E,93,[[["self"]],[R[8]]]],[11,"from",E,E,94,[[[T]],[T]]],[11,"into",E,E,94,[[],[U]]],[11,R[255],E,E,94,[[],["i"]]],[11,R[3],E,E,94,[[[U]],[R[2]]]],[11,R[4],E,E,94,[[],[R[2]]]],[11,R[5],E,E,94,[[["self"]],[T]]],[11,R[6],E,E,94,[[["self"]],[T]]],[11,R[7],E,E,94,[[["self"]],[R[8]]]],[11,"from",E,E,95,[[[T]],[T]]],[11,"into",E,E,95,[[],[U]]],[11,R[255],E,E,95,[[],["i"]]],[11,R[3],E,E,95,[[[U]],[R[2]]]],[11,R[4],E,E,95,[[],[R[2]]]],[11,R[5],E,E,95,[[["self"]],[T]]],[11,R[6],E,E,95,[[["self"]],[T]]],[11,R[7],E,E,95,[[["self"]],[R[8]]]],[11,"from",E,E,96,[[[T]],[T]]],[11,"into",E,E,96,[[],[U]]],[11,R[255],E,E,96,[[],["i"]]],[11,R[247],E,E,96,[[["self"]],[T]]],[11,R[246],E,E,96,[[["self"],[T]]]],[11,R[3],E,E,96,[[[U]],[R[2]]]],[11,R[4],E,E,96,[[],[R[2]]]],[11,R[5],E,E,96,[[["self"]],[T]]],[11,R[6],E,E,96,[[["self"]],[T]]],[11,R[7],E,E,96,[[["self"]],[R[8]]]],[11,"from",E,E,97,[[[T]],[T]]],[11,"into",E,E,97,[[],[U]]],[11,R[3],E,E,97,[[[U]],[R[2]]]],[11,R[4],E,E,97,[[],[R[2]]]],[11,R[5],E,E,97,[[["self"]],[T]]],[11,R[6],E,E,97,[[["self"]],[T]]],[11,R[7],E,E,97,[[["self"]],[R[8]]]],[11,"from",R[140],E,98,[[[T]],[T]]],[11,"into",E,E,98,[[],[U]]],[11,R[255],E,E,98,[[],["i"]]],[11,R[3],E,E,98,[[[U]],[R[2]]]],[11,R[4],E,E,98,[[],[R[2]]]],[11,R[5],E,E,98,[[["self"]],[T]]],[11,R[6],E,E,98,[[["self"]],[T]]],[11,R[7],E,E,98,[[["self"]],[R[8]]]],[11,"from",R[155],E,100,[[[T]],[T]]],[11,"into",E,E,100,[[],[U]]],[11,R[3],E,E,100,[[[U]],[R[2]]]],[11,R[4],E,E,100,[[],[R[2]]]],[11,R[5],E,E,100,[[["self"]],[T]]],[11,R[6],E,E,100,[[["self"]],[T]]],[11,R[7],E,E,100,[[["self"]],[R[8]]]],[11,"from",R[158],E,101,[[[T]],[T]]],[11,"into",E,E,101,[[],[U]]],[11,R[3],E,E,101,[[[U]],[R[2]]]],[11,R[4],E,E,101,[[],[R[2]]]],[11,R[5],E,E,101,[[["self"]],[T]]],[11,R[6],E,E,101,[[["self"]],[T]]],[11,R[7],E,E,101,[[["self"]],[R[8]]]],[11,"from",E,E,102,[[[T]],[T]]],[11,"into",E,E,102,[[],[U]]],[11,R[247],E,E,102,[[["self"]],[T]]],[11,R[246],E,E,102,[[["self"],[T]]]],[11,R[3],E,E,102,[[[U]],[R[2]]]],[11,R[4],E,E,102,[[],[R[2]]]],[11,R[5],E,E,102,[[["self"]],[T]]],[11,R[6],E,E,102,[[["self"]],[T]]],[11,R[7],E,E,102,[[["self"]],[R[8]]]],[11,"from",E,E,103,[[[T]],[T]]],[11,"into",E,E,103,[[],[U]]],[11,R[3],E,E,103,[[[U]],[R[2]]]],[11,R[4],E,E,103,[[],[R[2]]]],[11,R[5],E,E,103,[[["self"]],[T]]],[11,R[6],E,E,103,[[["self"]],[T]]],[11,R[7],E,E,103,[[["self"]],[R[8]]]],[11,"from",E,E,104,[[[T]],[T]]],[11,"into",E,E,104,[[],[U]]],[11,R[3],E,E,104,[[[U]],[R[2]]]],[11,R[4],E,E,104,[[],[R[2]]]],[11,R[5],E,E,104,[[["self"]],[T]]],[11,R[6],E,E,104,[[["self"]],[T]]],[11,R[7],E,E,104,[[["self"]],[R[8]]]],[11,"from",R[157],E,105,[[[T]],[T]]],[11,"into",E,E,105,[[],[U]]],[11,R[3],E,E,105,[[[U]],[R[2]]]],[11,R[4],E,E,105,[[],[R[2]]]],[11,R[5],E,E,105,[[["self"]],[T]]],[11,R[6],E,E,105,[[["self"]],[T]]],[11,R[7],E,E,105,[[["self"]],[R[8]]]],[11,"from",E,E,106,[[[T]],[T]]],[11,"into",E,E,106,[[],[U]]],[11,R[3],E,E,106,[[[U]],[R[2]]]],[11,R[4],E,E,106,[[],[R[2]]]],[11,R[5],E,E,106,[[["self"]],[T]]],[11,R[6],E,E,106,[[["self"]],[T]]],[11,R[7],E,E,106,[[["self"]],[R[8]]]],[11,"from",R[266],E,107,[[[T]],[T]]],[11,"into",E,E,107,[[],[U]]],[11,R[3],E,E,107,[[[U]],[R[2]]]],[11,R[4],E,E,107,[[],[R[2]]]],[11,R[5],E,E,107,[[["self"]],[T]]],[11,R[6],E,E,107,[[["self"]],[T]]],[11,R[7],E,E,107,[[["self"]],[R[8]]]],[11,"from",E,E,108,[[[T]],[T]]],[11,"into",E,E,108,[[],[U]]],[11,R[3],E,E,108,[[[U]],[R[2]]]],[11,R[4],E,E,108,[[],[R[2]]]],[11,R[5],E,E,108,[[["self"]],[T]]],[11,R[6],E,E,108,[[["self"]],[T]]],[11,R[7],E,E,108,[[["self"]],[R[8]]]],[11,"from",E,E,109,[[[T]],[T]]],[11,"into",E,E,109,[[],[U]]],[11,R[3],E,E,109,[[[U]],[R[2]]]],[11,R[4],E,E,109,[[],[R[2]]]],[11,R[5],E,E,109,[[["self"]],[T]]],[11,R[6],E,E,109,[[["self"]],[T]]],[11,R[7],E,E,109,[[["self"]],[R[8]]]],[11,"from",E,E,215,[[[T]],[T]]],[11,"into",E,E,215,[[],[U]]],[11,R[3],E,E,215,[[[U]],[R[2]]]],[11,R[4],E,E,215,[[],[R[2]]]],[11,R[5],E,E,215,[[["self"]],[T]]],[11,R[6],E,E,215,[[["self"]],[T]]],[11,R[7],E,E,215,[[["self"]],[R[8]]]],[11,"from",E,E,216,[[[T]],[T]]],[11,"into",E,E,216,[[],[U]]],[11,R[3],E,E,216,[[[U]],[R[2]]]],[11,R[4],E,E,216,[[],[R[2]]]],[11,R[5],E,E,216,[[["self"]],[T]]],[11,R[6],E,E,216,[[["self"]],[T]]],[11,R[7],E,E,216,[[["self"]],[R[8]]]],[11,"from",E,E,217,[[[T]],[T]]],[11,"into",E,E,217,[[],[U]]],[11,R[3],E,E,217,[[[U]],[R[2]]]],[11,R[4],E,E,217,[[],[R[2]]]],[11,R[5],E,E,217,[[["self"]],[T]]],[11,R[6],E,E,217,[[["self"]],[T]]],[11,R[7],E,E,217,[[["self"]],[R[8]]]],[11,"from",R[245],E,110,[[[T]],[T]]],[11,"into",E,E,110,[[],[U]]],[11,R[247],E,E,110,[[["self"]],[T]]],[11,R[246],E,E,110,[[["self"],[T]]]],[11,R[3],E,E,110,[[[U]],[R[2]]]],[11,R[4],E,E,110,[[],[R[2]]]],[11,R[5],E,E,110,[[["self"]],[T]]],[11,R[6],E,E,110,[[["self"]],[T]]],[11,R[7],E,E,110,[[["self"]],[R[8]]]],[11,"from",E,E,111,[[[T]],[T]]],[11,"into",E,E,111,[[],[U]]],[11,R[3],E,E,111,[[[U]],[R[2]]]],[11,R[4],E,E,111,[[],[R[2]]]],[11,R[5],E,E,111,[[["self"]],[T]]],[11,R[6],E,E,111,[[["self"]],[T]]],[11,R[7],E,E,111,[[["self"]],[R[8]]]],[11,"from",E,E,218,[[[T]],[T]]],[11,"into",E,E,218,[[],[U]]],[11,R[3],E,E,218,[[[U]],[R[2]]]],[11,R[4],E,E,218,[[],[R[2]]]],[11,R[5],E,E,218,[[["self"]],[T]]],[11,R[6],E,E,218,[[["self"]],[T]]],[11,R[7],E,E,218,[[["self"]],[R[8]]]],[11,"from",E,E,219,[[[T]],[T]]],[11,"into",E,E,219,[[],[U]]],[11,R[3],E,E,219,[[[U]],[R[2]]]],[11,R[4],E,E,219,[[],[R[2]]]],[11,R[5],E,E,219,[[["self"]],[T]]],[11,R[6],E,E,219,[[["self"]],[T]]],[11,R[7],E,E,219,[[["self"]],[R[8]]]],[11,"from",E,E,220,[[[T]],[T]]],[11,"into",E,E,220,[[],[U]]],[11,R[3],E,E,220,[[[U]],[R[2]]]],[11,R[4],E,E,220,[[],[R[2]]]],[11,R[5],E,E,220,[[["self"]],[T]]],[11,R[6],E,E,220,[[["self"]],[T]]],[11,R[7],E,E,220,[[["self"]],[R[8]]]],[11,"from",E,E,112,[[[T]],[T]]],[11,"into",E,E,112,[[],[U]]],[11,R[3],E,E,112,[[[U]],[R[2]]]],[11,R[4],E,E,112,[[],[R[2]]]],[11,R[5],E,E,112,[[["self"]],[T]]],[11,R[6],E,E,112,[[["self"]],[T]]],[11,R[7],E,E,112,[[["self"]],[R[8]]]],[11,"from",E,E,113,[[[T]],[T]]],[11,"into",E,E,113,[[],[U]]],[11,R[3],E,E,113,[[[U]],[R[2]]]],[11,R[4],E,E,113,[[],[R[2]]]],[11,R[5],E,E,113,[[["self"]],[T]]],[11,R[6],E,E,113,[[["self"]],[T]]],[11,R[7],E,E,113,[[["self"]],[R[8]]]],[11,"from",E,E,114,[[[T]],[T]]],[11,"into",E,E,114,[[],[U]]],[11,R[3],E,E,114,[[[U]],[R[2]]]],[11,R[4],E,E,114,[[],[R[2]]]],[11,R[5],E,E,114,[[["self"]],[T]]],[11,R[6],E,E,114,[[["self"]],[T]]],[11,R[7],E,E,114,[[["self"]],[R[8]]]],[11,"from",E,E,115,[[[T]],[T]]],[11,"into",E,E,115,[[],[U]]],[11,R[3],E,E,115,[[[U]],[R[2]]]],[11,R[4],E,E,115,[[],[R[2]]]],[11,R[5],E,E,115,[[["self"]],[T]]],[11,R[6],E,E,115,[[["self"]],[T]]],[11,R[7],E,E,115,[[["self"]],[R[8]]]],[11,"from",E,E,116,[[[T]],[T]]],[11,"into",E,E,116,[[],[U]]],[11,R[3],E,E,116,[[[U]],[R[2]]]],[11,R[4],E,E,116,[[],[R[2]]]],[11,R[5],E,E,116,[[["self"]],[T]]],[11,R[6],E,E,116,[[["self"]],[T]]],[11,R[7],E,E,116,[[["self"]],[R[8]]]],[11,"from",E,E,117,[[[T]],[T]]],[11,"into",E,E,117,[[],[U]]],[11,R[3],E,E,117,[[[U]],[R[2]]]],[11,R[4],E,E,117,[[],[R[2]]]],[11,R[5],E,E,117,[[["self"]],[T]]],[11,R[6],E,E,117,[[["self"]],[T]]],[11,R[7],E,E,117,[[["self"]],[R[8]]]],[11,"from",E,E,118,[[[T]],[T]]],[11,"into",E,E,118,[[],[U]]],[11,R[3],E,E,118,[[[U]],[R[2]]]],[11,R[4],E,E,118,[[],[R[2]]]],[11,R[5],E,E,118,[[["self"]],[T]]],[11,R[6],E,E,118,[[["self"]],[T]]],[11,R[7],E,E,118,[[["self"]],[R[8]]]],[11,"from",E,E,119,[[[T]],[T]]],[11,"into",E,E,119,[[],[U]]],[11,R[3],E,E,119,[[[U]],[R[2]]]],[11,R[4],E,E,119,[[],[R[2]]]],[11,R[5],E,E,119,[[["self"]],[T]]],[11,R[6],E,E,119,[[["self"]],[T]]],[11,R[7],E,E,119,[[["self"]],[R[8]]]],[11,"from",E,E,120,[[[T]],[T]]],[11,"into",E,E,120,[[],[U]]],[11,R[3],E,E,120,[[[U]],[R[2]]]],[11,R[4],E,E,120,[[],[R[2]]]],[11,R[5],E,E,120,[[["self"]],[T]]],[11,R[6],E,E,120,[[["self"]],[T]]],[11,R[7],E,E,120,[[["self"]],[R[8]]]],[11,"from",E,E,121,[[[T]],[T]]],[11,"into",E,E,121,[[],[U]]],[11,R[3],E,E,121,[[[U]],[R[2]]]],[11,R[4],E,E,121,[[],[R[2]]]],[11,R[5],E,E,121,[[["self"]],[T]]],[11,R[6],E,E,121,[[["self"]],[T]]],[11,R[7],E,E,121,[[["self"]],[R[8]]]],[11,"from",E,E,122,[[[T]],[T]]],[11,"into",E,E,122,[[],[U]]],[11,R[3],E,E,122,[[[U]],[R[2]]]],[11,R[4],E,E,122,[[],[R[2]]]],[11,R[5],E,E,122,[[["self"]],[T]]],[11,R[6],E,E,122,[[["self"]],[T]]],[11,R[7],E,E,122,[[["self"]],[R[8]]]],[11,"from",E,E,123,[[[T]],[T]]],[11,"into",E,E,123,[[],[U]]],[11,R[3],E,E,123,[[[U]],[R[2]]]],[11,R[4],E,E,123,[[],[R[2]]]],[11,R[5],E,E,123,[[["self"]],[T]]],[11,R[6],E,E,123,[[["self"]],[T]]],[11,R[7],E,E,123,[[["self"]],[R[8]]]],[11,"from",E,E,124,[[[T]],[T]]],[11,"into",E,E,124,[[],[U]]],[11,R[3],E,E,124,[[[U]],[R[2]]]],[11,R[4],E,E,124,[[],[R[2]]]],[11,R[5],E,E,124,[[["self"]],[T]]],[11,R[6],E,E,124,[[["self"]],[T]]],[11,R[7],E,E,124,[[["self"]],[R[8]]]],[11,"from",E,E,125,[[[T]],[T]]],[11,"into",E,E,125,[[],[U]]],[11,R[3],E,E,125,[[[U]],[R[2]]]],[11,R[4],E,E,125,[[],[R[2]]]],[11,R[5],E,E,125,[[["self"]],[T]]],[11,R[6],E,E,125,[[["self"]],[T]]],[11,R[7],E,E,125,[[["self"]],[R[8]]]],[11,"from",E,E,126,[[[T]],[T]]],[11,"into",E,E,126,[[],[U]]],[11,R[3],E,E,126,[[[U]],[R[2]]]],[11,R[4],E,E,126,[[],[R[2]]]],[11,R[5],E,E,126,[[["self"]],[T]]],[11,R[6],E,E,126,[[["self"]],[T]]],[11,R[7],E,E,126,[[["self"]],[R[8]]]],[11,"from",E,E,127,[[[T]],[T]]],[11,"into",E,E,127,[[],[U]]],[11,R[3],E,E,127,[[[U]],[R[2]]]],[11,R[4],E,E,127,[[],[R[2]]]],[11,R[5],E,E,127,[[["self"]],[T]]],[11,R[6],E,E,127,[[["self"]],[T]]],[11,R[7],E,E,127,[[["self"]],[R[8]]]],[11,"from",E,E,128,[[[T]],[T]]],[11,"into",E,E,128,[[],[U]]],[11,R[3],E,E,128,[[[U]],[R[2]]]],[11,R[4],E,E,128,[[],[R[2]]]],[11,R[5],E,E,128,[[["self"]],[T]]],[11,R[6],E,E,128,[[["self"]],[T]]],[11,R[7],E,E,128,[[["self"]],[R[8]]]],[11,"from",E,E,129,[[[T]],[T]]],[11,"into",E,E,129,[[],[U]]],[11,R[3],E,E,129,[[[U]],[R[2]]]],[11,R[4],E,E,129,[[],[R[2]]]],[11,R[5],E,E,129,[[["self"]],[T]]],[11,R[6],E,E,129,[[["self"]],[T]]],[11,R[7],E,E,129,[[["self"]],[R[8]]]],[11,"from",E,E,130,[[[T]],[T]]],[11,"into",E,E,130,[[],[U]]],[11,R[3],E,E,130,[[[U]],[R[2]]]],[11,R[4],E,E,130,[[],[R[2]]]],[11,R[5],E,E,130,[[["self"]],[T]]],[11,R[6],E,E,130,[[["self"]],[T]]],[11,R[7],E,E,130,[[["self"]],[R[8]]]],[11,"from",E,E,131,[[[T]],[T]]],[11,"into",E,E,131,[[],[U]]],[11,R[3],E,E,131,[[[U]],[R[2]]]],[11,R[4],E,E,131,[[],[R[2]]]],[11,R[5],E,E,131,[[["self"]],[T]]],[11,R[6],E,E,131,[[["self"]],[T]]],[11,R[7],E,E,131,[[["self"]],[R[8]]]],[11,"from",E,E,132,[[[T]],[T]]],[11,"into",E,E,132,[[],[U]]],[11,R[3],E,E,132,[[[U]],[R[2]]]],[11,R[4],E,E,132,[[],[R[2]]]],[11,R[5],E,E,132,[[["self"]],[T]]],[11,R[6],E,E,132,[[["self"]],[T]]],[11,R[7],E,E,132,[[["self"]],[R[8]]]],[11,"from",E,E,133,[[[T]],[T]]],[11,"into",E,E,133,[[],[U]]],[11,R[3],E,E,133,[[[U]],[R[2]]]],[11,R[4],E,E,133,[[],[R[2]]]],[11,R[5],E,E,133,[[["self"]],[T]]],[11,R[6],E,E,133,[[["self"]],[T]]],[11,R[7],E,E,133,[[["self"]],[R[8]]]],[11,"from",E,E,134,[[[T]],[T]]],[11,"into",E,E,134,[[],[U]]],[11,R[3],E,E,134,[[[U]],[R[2]]]],[11,R[4],E,E,134,[[],[R[2]]]],[11,R[5],E,E,134,[[["self"]],[T]]],[11,R[6],E,E,134,[[["self"]],[T]]],[11,R[7],E,E,134,[[["self"]],[R[8]]]],[11,"from",E,E,135,[[[T]],[T]]],[11,"into",E,E,135,[[],[U]]],[11,R[3],E,E,135,[[[U]],[R[2]]]],[11,R[4],E,E,135,[[],[R[2]]]],[11,R[5],E,E,135,[[["self"]],[T]]],[11,R[6],E,E,135,[[["self"]],[T]]],[11,R[7],E,E,135,[[["self"]],[R[8]]]],[11,"from",E,E,136,[[[T]],[T]]],[11,"into",E,E,136,[[],[U]]],[11,R[3],E,E,136,[[[U]],[R[2]]]],[11,R[4],E,E,136,[[],[R[2]]]],[11,R[5],E,E,136,[[["self"]],[T]]],[11,R[6],E,E,136,[[["self"]],[T]]],[11,R[7],E,E,136,[[["self"]],[R[8]]]],[11,"from",E,E,137,[[[T]],[T]]],[11,"into",E,E,137,[[],[U]]],[11,R[3],E,E,137,[[[U]],[R[2]]]],[11,R[4],E,E,137,[[],[R[2]]]],[11,R[5],E,E,137,[[["self"]],[T]]],[11,R[6],E,E,137,[[["self"]],[T]]],[11,R[7],E,E,137,[[["self"]],[R[8]]]],[11,"from",E,E,138,[[[T]],[T]]],[11,"into",E,E,138,[[],[U]]],[11,R[252],E,E,138,[[["self"]],[R[0]]]],[11,R[3],E,E,138,[[[U]],[R[2]]]],[11,R[4],E,E,138,[[],[R[2]]]],[11,R[5],E,E,138,[[["self"]],[T]]],[11,R[6],E,E,138,[[["self"]],[T]]],[11,R[7],E,E,138,[[["self"]],[R[8]]]],[11,"from",R[267],E,142,[[[T]],[T]]],[11,"into",E,E,142,[[],[U]]],[11,R[247],E,E,142,[[["self"]],[T]]],[11,R[246],E,E,142,[[["self"],[T]]]],[11,R[3],E,E,142,[[[U]],[R[2]]]],[11,R[4],E,E,142,[[],[R[2]]]],[11,R[5],E,E,142,[[["self"]],[T]]],[11,R[6],E,E,142,[[["self"]],[T]]],[11,R[7],E,E,142,[[["self"]],[R[8]]]],[11,"from",E,E,143,[[[T]],[T]]],[11,"into",E,E,143,[[],[U]]],[11,R[247],E,E,143,[[["self"]],[T]]],[11,R[246],E,E,143,[[["self"],[T]]]],[11,R[3],E,E,143,[[[U]],[R[2]]]],[11,R[4],E,E,143,[[],[R[2]]]],[11,R[5],E,E,143,[[["self"]],[T]]],[11,R[6],E,E,143,[[["self"]],[T]]],[11,R[7],E,E,143,[[["self"]],[R[8]]]],[11,R[248],E,E,143,[[["self"],["k"]],["bool"]]],[11,"from",E,E,144,[[[T]],[T]]],[11,"into",E,E,144,[[],[U]]],[11,R[247],E,E,144,[[["self"]],[T]]],[11,R[246],E,E,144,[[["self"],[T]]]],[11,R[3],E,E,144,[[[U]],[R[2]]]],[11,R[4],E,E,144,[[],[R[2]]]],[11,R[5],E,E,144,[[["self"]],[T]]],[11,R[6],E,E,144,[[["self"]],[T]]],[11,R[7],E,E,144,[[["self"]],[R[8]]]],[11,"from",E,E,145,[[[T]],[T]]],[11,"into",E,E,145,[[],[U]]],[11,R[247],E,E,145,[[["self"]],[T]]],[11,R[246],E,E,145,[[["self"],[T]]]],[11,R[3],E,E,145,[[[U]],[R[2]]]],[11,R[4],E,E,145,[[],[R[2]]]],[11,R[5],E,E,145,[[["self"]],[T]]],[11,R[6],E,E,145,[[["self"]],[T]]],[11,R[7],E,E,145,[[["self"]],[R[8]]]],[11,R[248],E,E,145,[[["self"],["k"]],["bool"]]],[11,"from",E,E,146,[[[T]],[T]]],[11,"into",E,E,146,[[],[U]]],[11,R[247],E,E,146,[[["self"]],[T]]],[11,R[246],E,E,146,[[["self"],[T]]]],[11,R[252],E,E,146,[[["self"]],[R[0]]]],[11,R[3],E,E,146,[[[U]],[R[2]]]],[11,R[4],E,E,146,[[],[R[2]]]],[11,R[5],E,E,146,[[["self"]],[T]]],[11,R[6],E,E,146,[[["self"]],[T]]],[11,R[7],E,E,146,[[["self"]],[R[8]]]],[11,R[248],E,E,146,[[["self"],["k"]],["bool"]]],[11,"from",E,E,147,[[[T]],[T]]],[11,"into",E,E,147,[[],[U]]],[11,R[247],E,E,147,[[["self"]],[T]]],[11,R[246],E,E,147,[[["self"],[T]]]],[11,R[3],E,E,147,[[[U]],[R[2]]]],[11,R[4],E,E,147,[[],[R[2]]]],[11,R[5],E,E,147,[[["self"]],[T]]],[11,R[6],E,E,147,[[["self"]],[T]]],[11,R[7],E,E,147,[[["self"]],[R[8]]]],[11,R[248],E,E,147,[[["self"],["k"]],["bool"]]],[11,"from",E,E,148,[[[T]],[T]]],[11,"into",E,E,148,[[],[U]]],[11,R[247],E,E,148,[[["self"]],[T]]],[11,R[246],E,E,148,[[["self"],[T]]]],[11,R[3],E,E,148,[[[U]],[R[2]]]],[11,R[4],E,E,148,[[],[R[2]]]],[11,R[5],E,E,148,[[["self"]],[T]]],[11,R[6],E,E,148,[[["self"]],[T]]],[11,R[7],E,E,148,[[["self"]],[R[8]]]],[11,R[248],E,E,148,[[["self"],["k"]],["bool"]]],[11,"from",E,E,149,[[[T]],[T]]],[11,"into",E,E,149,[[],[U]]],[11,R[247],E,E,149,[[["self"]],[T]]],[11,R[246],E,E,149,[[["self"],[T]]]],[11,R[3],E,E,149,[[[U]],[R[2]]]],[11,R[4],E,E,149,[[],[R[2]]]],[11,R[5],E,E,149,[[["self"]],[T]]],[11,R[6],E,E,149,[[["self"]],[T]]],[11,R[7],E,E,149,[[["self"]],[R[8]]]],[11,R[248],E,E,149,[[["self"],["k"]],["bool"]]],[11,"from",E,E,150,[[[T]],[T]]],[11,"into",E,E,150,[[],[U]]],[11,R[247],E,E,150,[[["self"]],[T]]],[11,R[246],E,E,150,[[["self"],[T]]]],[11,R[3],E,E,150,[[[U]],[R[2]]]],[11,R[4],E,E,150,[[],[R[2]]]],[11,R[5],E,E,150,[[["self"]],[T]]],[11,R[6],E,E,150,[[["self"]],[T]]],[11,R[7],E,E,150,[[["self"]],[R[8]]]],[11,R[248],E,E,150,[[["self"],["k"]],["bool"]]],[11,"from",E,E,151,[[[T]],[T]]],[11,"into",E,E,151,[[],[U]]],[11,R[247],E,E,151,[[["self"]],[T]]],[11,R[246],E,E,151,[[["self"],[T]]]],[11,R[3],E,E,151,[[[U]],[R[2]]]],[11,R[4],E,E,151,[[],[R[2]]]],[11,R[5],E,E,151,[[["self"]],[T]]],[11,R[6],E,E,151,[[["self"]],[T]]],[11,R[7],E,E,151,[[["self"]],[R[8]]]],[11,R[248],E,E,151,[[["self"],["k"]],["bool"]]],[11,"from",E,E,152,[[[T]],[T]]],[11,"into",E,E,152,[[],[U]]],[11,R[247],E,E,152,[[["self"]],[T]]],[11,R[246],E,E,152,[[["self"],[T]]]],[11,R[3],E,E,152,[[[U]],[R[2]]]],[11,R[4],E,E,152,[[],[R[2]]]],[11,R[5],E,E,152,[[["self"]],[T]]],[11,R[6],E,E,152,[[["self"]],[T]]],[11,R[7],E,E,152,[[["self"]],[R[8]]]],[11,R[248],E,E,152,[[["self"],["k"]],["bool"]]],[11,"from",E,E,153,[[[T]],[T]]],[11,"into",E,E,153,[[],[U]]],[11,R[247],E,E,153,[[["self"]],[T]]],[11,R[246],E,E,153,[[["self"],[T]]]],[11,R[3],E,E,153,[[[U]],[R[2]]]],[11,R[4],E,E,153,[[],[R[2]]]],[11,R[5],E,E,153,[[["self"]],[T]]],[11,R[6],E,E,153,[[["self"]],[T]]],[11,R[7],E,E,153,[[["self"]],[R[8]]]],[11,R[248],E,E,153,[[["self"],["k"]],["bool"]]],[11,"from",E,E,154,[[[T]],[T]]],[11,"into",E,E,154,[[],[U]]],[11,R[247],E,E,154,[[["self"]],[T]]],[11,R[246],E,E,154,[[["self"],[T]]]],[11,R[3],E,E,154,[[[U]],[R[2]]]],[11,R[4],E,E,154,[[],[R[2]]]],[11,R[5],E,E,154,[[["self"]],[T]]],[11,R[6],E,E,154,[[["self"]],[T]]],[11,R[7],E,E,154,[[["self"]],[R[8]]]],[11,R[248],E,E,154,[[["self"],["k"]],["bool"]]],[11,"from",E,E,155,[[[T]],[T]]],[11,"into",E,E,155,[[],[U]]],[11,R[247],E,E,155,[[["self"]],[T]]],[11,R[246],E,E,155,[[["self"],[T]]]],[11,R[3],E,E,155,[[[U]],[R[2]]]],[11,R[4],E,E,155,[[],[R[2]]]],[11,R[5],E,E,155,[[["self"]],[T]]],[11,R[6],E,E,155,[[["self"]],[T]]],[11,R[7],E,E,155,[[["self"]],[R[8]]]],[11,R[248],E,E,155,[[["self"],["k"]],["bool"]]],[11,"from",E,E,156,[[[T]],[T]]],[11,"into",E,E,156,[[],[U]]],[11,R[247],E,E,156,[[["self"]],[T]]],[11,R[246],E,E,156,[[["self"],[T]]]],[11,R[3],E,E,156,[[[U]],[R[2]]]],[11,R[4],E,E,156,[[],[R[2]]]],[11,R[5],E,E,156,[[["self"]],[T]]],[11,R[6],E,E,156,[[["self"]],[T]]],[11,R[7],E,E,156,[[["self"]],[R[8]]]],[11,R[248],E,E,156,[[["self"],["k"]],["bool"]]],[11,"from",E,E,157,[[[T]],[T]]],[11,"into",E,E,157,[[],[U]]],[11,R[247],E,E,157,[[["self"]],[T]]],[11,R[246],E,E,157,[[["self"],[T]]]],[11,R[3],E,E,157,[[[U]],[R[2]]]],[11,R[4],E,E,157,[[],[R[2]]]],[11,R[5],E,E,157,[[["self"]],[T]]],[11,R[6],E,E,157,[[["self"]],[T]]],[11,R[7],E,E,157,[[["self"]],[R[8]]]],[11,R[248],E,E,157,[[["self"],["k"]],["bool"]]],[11,"from",E,E,158,[[[T]],[T]]],[11,"into",E,E,158,[[],[U]]],[11,R[247],E,E,158,[[["self"]],[T]]],[11,R[246],E,E,158,[[["self"],[T]]]],[11,R[3],E,E,158,[[[U]],[R[2]]]],[11,R[4],E,E,158,[[],[R[2]]]],[11,R[5],E,E,158,[[["self"]],[T]]],[11,R[6],E,E,158,[[["self"]],[T]]],[11,R[7],E,E,158,[[["self"]],[R[8]]]],[11,R[248],E,E,158,[[["self"],["k"]],["bool"]]],[11,"from",E,E,159,[[[T]],[T]]],[11,"into",E,E,159,[[],[U]]],[11,R[247],E,E,159,[[["self"]],[T]]],[11,R[246],E,E,159,[[["self"],[T]]]],[11,R[3],E,E,159,[[[U]],[R[2]]]],[11,R[4],E,E,159,[[],[R[2]]]],[11,R[5],E,E,159,[[["self"]],[T]]],[11,R[6],E,E,159,[[["self"]],[T]]],[11,R[7],E,E,159,[[["self"]],[R[8]]]],[11,R[248],E,E,159,[[["self"],["k"]],["bool"]]],[11,"from",E,E,160,[[[T]],[T]]],[11,"into",E,E,160,[[],[U]]],[11,R[247],E,E,160,[[["self"]],[T]]],[11,R[246],E,E,160,[[["self"],[T]]]],[11,R[252],E,E,160,[[["self"]],[R[0]]]],[11,R[3],E,E,160,[[[U]],[R[2]]]],[11,R[4],E,E,160,[[],[R[2]]]],[11,R[5],E,E,160,[[["self"]],[T]]],[11,R[6],E,E,160,[[["self"]],[T]]],[11,R[7],E,E,160,[[["self"]],[R[8]]]],[11,R[248],E,E,160,[[["self"],["k"]],["bool"]]],[11,"from",E,E,161,[[[T]],[T]]],[11,"into",E,E,161,[[],[U]]],[11,R[247],E,E,161,[[["self"]],[T]]],[11,R[246],E,E,161,[[["self"],[T]]]],[11,R[3],E,E,161,[[[U]],[R[2]]]],[11,R[4],E,E,161,[[],[R[2]]]],[11,R[5],E,E,161,[[["self"]],[T]]],[11,R[6],E,E,161,[[["self"]],[T]]],[11,R[7],E,E,161,[[["self"]],[R[8]]]],[11,"from",E,E,162,[[[T]],[T]]],[11,"into",E,E,162,[[],[U]]],[11,R[247],E,E,162,[[["self"]],[T]]],[11,R[246],E,E,162,[[["self"],[T]]]],[11,R[3],E,E,162,[[[U]],[R[2]]]],[11,R[4],E,E,162,[[],[R[2]]]],[11,R[5],E,E,162,[[["self"]],[T]]],[11,R[6],E,E,162,[[["self"]],[T]]],[11,R[7],E,E,162,[[["self"]],[R[8]]]],[11,R[248],E,E,162,[[["self"],["k"]],["bool"]]],[11,"from",E,E,163,[[[T]],[T]]],[11,"into",E,E,163,[[],[U]]],[11,R[247],E,E,163,[[["self"]],[T]]],[11,R[246],E,E,163,[[["self"],[T]]]],[11,R[3],E,E,163,[[[U]],[R[2]]]],[11,R[4],E,E,163,[[],[R[2]]]],[11,R[5],E,E,163,[[["self"]],[T]]],[11,R[6],E,E,163,[[["self"]],[T]]],[11,R[7],E,E,163,[[["self"]],[R[8]]]],[11,"from",E,E,164,[[[T]],[T]]],[11,"into",E,E,164,[[],[U]]],[11,R[3],E,E,164,[[[U]],[R[2]]]],[11,R[4],E,E,164,[[],[R[2]]]],[11,R[5],E,E,164,[[["self"]],[T]]],[11,R[6],E,E,164,[[["self"]],[T]]],[11,R[7],E,E,164,[[["self"]],[R[8]]]],[11,"from",R[268],E,168,[[[T]],[T]]],[11,"into",E,E,168,[[],[U]]],[11,R[247],E,E,168,[[["self"]],[T]]],[11,R[246],E,E,168,[[["self"],[T]]]],[11,R[3],E,E,168,[[[U]],[R[2]]]],[11,R[4],E,E,168,[[],[R[2]]]],[11,R[5],E,E,168,[[["self"]],[T]]],[11,R[6],E,E,168,[[["self"]],[T]]],[11,R[7],E,E,168,[[["self"]],[R[8]]]],[11,R[248],E,E,168,[[["self"],["k"]],["bool"]]],[11,"from",E,E,169,[[[T]],[T]]],[11,"into",E,E,169,[[],[U]]],[11,R[247],E,E,169,[[["self"]],[T]]],[11,R[246],E,E,169,[[["self"],[T]]]],[11,R[3],E,E,169,[[[U]],[R[2]]]],[11,R[4],E,E,169,[[],[R[2]]]],[11,R[5],E,E,169,[[["self"]],[T]]],[11,R[6],E,E,169,[[["self"]],[T]]],[11,R[7],E,E,169,[[["self"]],[R[8]]]],[11,R[248],E,E,169,[[["self"],["k"]],["bool"]]],[11,"from",R[269],E,170,[[[T]],[T]]],[11,"into",E,E,170,[[],[U]]],[11,R[3],E,E,170,[[[U]],[R[2]]]],[11,R[4],E,E,170,[[],[R[2]]]],[11,R[5],E,E,170,[[["self"]],[T]]],[11,R[6],E,E,170,[[["self"]],[T]]],[11,R[7],E,E,170,[[["self"]],[R[8]]]],[11,"from",E,E,172,[[[T]],[T]]],[11,"into",E,E,172,[[],[U]]],[11,R[3],E,E,172,[[[U]],[R[2]]]],[11,R[4],E,E,172,[[],[R[2]]]],[11,R[5],E,E,172,[[["self"]],[T]]],[11,R[6],E,E,172,[[["self"]],[T]]],[11,R[7],E,E,172,[[["self"]],[R[8]]]],[11,"from",E,E,173,[[[T]],[T]]],[11,"into",E,E,173,[[],[U]]],[11,R[3],E,E,173,[[[U]],[R[2]]]],[11,R[4],E,E,173,[[],[R[2]]]],[11,R[5],E,E,173,[[["self"]],[T]]],[11,R[6],E,E,173,[[["self"]],[T]]],[11,R[7],E,E,173,[[["self"]],[R[8]]]],[11,"from",E,E,174,[[[T]],[T]]],[11,"into",E,E,174,[[],[U]]],[11,R[3],E,E,174,[[[U]],[R[2]]]],[11,R[4],E,E,174,[[],[R[2]]]],[11,R[5],E,E,174,[[["self"]],[T]]],[11,R[6],E,E,174,[[["self"]],[T]]],[11,R[7],E,E,174,[[["self"]],[R[8]]]],[11,"from",E,E,175,[[[T]],[T]]],[11,"into",E,E,175,[[],[U]]],[11,R[3],E,E,175,[[[U]],[R[2]]]],[11,R[4],E,E,175,[[],[R[2]]]],[11,R[5],E,E,175,[[["self"]],[T]]],[11,R[6],E,E,175,[[["self"]],[T]]],[11,R[7],E,E,175,[[["self"]],[R[8]]]],[11,"from",E,E,176,[[[T]],[T]]],[11,"into",E,E,176,[[],[U]]],[11,R[3],E,E,176,[[[U]],[R[2]]]],[11,R[4],E,E,176,[[],[R[2]]]],[11,R[5],E,E,176,[[["self"]],[T]]],[11,R[6],E,E,176,[[["self"]],[T]]],[11,R[7],E,E,176,[[["self"]],[R[8]]]],[11,"from",E,E,177,[[[T]],[T]]],[11,"into",E,E,177,[[],[U]]],[11,R[247],E,E,177,[[["self"]],[T]]],[11,R[246],E,E,177,[[["self"],[T]]]],[11,R[3],E,E,177,[[[U]],[R[2]]]],[11,R[4],E,E,177,[[],[R[2]]]],[11,R[5],E,E,177,[[["self"]],[T]]],[11,R[6],E,E,177,[[["self"]],[T]]],[11,R[7],E,E,177,[[["self"]],[R[8]]]],[11,"from",E,E,178,[[[T]],[T]]],[11,"into",E,E,178,[[],[U]]],[11,R[247],E,E,178,[[["self"]],[T]]],[11,R[246],E,E,178,[[["self"],[T]]]],[11,R[3],E,E,178,[[[U]],[R[2]]]],[11,R[4],E,E,178,[[],[R[2]]]],[11,R[5],E,E,178,[[["self"]],[T]]],[11,R[6],E,E,178,[[["self"]],[T]]],[11,R[7],E,E,178,[[["self"]],[R[8]]]],[11,"from",E,E,179,[[[T]],[T]]],[11,"into",E,E,179,[[],[U]]],[11,R[247],E,E,179,[[["self"]],[T]]],[11,R[246],E,E,179,[[["self"],[T]]]],[11,R[3],E,E,179,[[[U]],[R[2]]]],[11,R[4],E,E,179,[[],[R[2]]]],[11,R[5],E,E,179,[[["self"]],[T]]],[11,R[6],E,E,179,[[["self"]],[T]]],[11,R[7],E,E,179,[[["self"]],[R[8]]]],[11,"from",E,E,180,[[[T]],[T]]],[11,"into",E,E,180,[[],[U]]],[11,R[247],E,E,180,[[["self"]],[T]]],[11,R[246],E,E,180,[[["self"],[T]]]],[11,R[3],E,E,180,[[[U]],[R[2]]]],[11,R[4],E,E,180,[[],[R[2]]]],[11,R[5],E,E,180,[[["self"]],[T]]],[11,R[6],E,E,180,[[["self"]],[T]]],[11,R[7],E,E,180,[[["self"]],[R[8]]]],[11,"from",E,E,181,[[[T]],[T]]],[11,"into",E,E,181,[[],[U]]],[11,R[247],E,E,181,[[["self"]],[T]]],[11,R[246],E,E,181,[[["self"],[T]]]],[11,R[3],E,E,181,[[[U]],[R[2]]]],[11,R[4],E,E,181,[[],[R[2]]]],[11,R[5],E,E,181,[[["self"]],[T]]],[11,R[6],E,E,181,[[["self"]],[T]]],[11,R[7],E,E,181,[[["self"]],[R[8]]]],[11,"from",E,E,182,[[[T]],[T]]],[11,"into",E,E,182,[[],[U]]],[11,R[247],E,E,182,[[["self"]],[T]]],[11,R[246],E,E,182,[[["self"],[T]]]],[11,R[3],E,E,182,[[[U]],[R[2]]]],[11,R[4],E,E,182,[[],[R[2]]]],[11,R[5],E,E,182,[[["self"]],[T]]],[11,R[6],E,E,182,[[["self"]],[T]]],[11,R[7],E,E,182,[[["self"]],[R[8]]]],[11,"from",R[221],E,183,[[[T]],[T]]],[11,"into",E,E,183,[[],[U]]],[11,R[3],E,E,183,[[[U]],[R[2]]]],[11,R[4],E,E,183,[[],[R[2]]]],[11,R[5],E,E,183,[[["self"]],[T]]],[11,R[6],E,E,183,[[["self"]],[T]]],[11,R[7],E,E,183,[[["self"]],[R[8]]]],[11,"from",E,E,184,[[[T]],[T]]],[11,"into",E,E,184,[[],[U]]],[11,R[247],E,E,184,[[["self"]],[T]]],[11,R[246],E,E,184,[[["self"],[T]]]],[11,R[3],E,E,184,[[[U]],[R[2]]]],[11,R[4],E,E,184,[[],[R[2]]]],[11,R[5],E,E,184,[[["self"]],[T]]],[11,R[6],E,E,184,[[["self"]],[T]]],[11,R[7],E,E,184,[[["self"]],[R[8]]]],[11,"from",E,E,185,[[[T]],[T]]],[11,"into",E,E,185,[[],[U]]],[11,R[3],E,E,185,[[[U]],[R[2]]]],[11,R[4],E,E,185,[[],[R[2]]]],[11,R[5],E,E,185,[[["self"]],[T]]],[11,R[6],E,E,185,[[["self"]],[T]]],[11,R[7],E,E,185,[[["self"]],[R[8]]]],[11,"from",E,E,186,[[[T]],[T]]],[11,"into",E,E,186,[[],[U]]],[11,R[3],E,E,186,[[[U]],[R[2]]]],[11,R[4],E,E,186,[[],[R[2]]]],[11,R[5],E,E,186,[[["self"]],[T]]],[11,R[6],E,E,186,[[["self"]],[T]]],[11,R[7],E,E,186,[[["self"]],[R[8]]]],[11,"from",E,E,187,[[[T]],[T]]],[11,"into",E,E,187,[[],[U]]],[11,R[247],E,E,187,[[["self"]],[T]]],[11,R[246],E,E,187,[[["self"],[T]]]],[11,R[3],E,E,187,[[[U]],[R[2]]]],[11,R[4],E,E,187,[[],[R[2]]]],[11,R[5],E,E,187,[[["self"]],[T]]],[11,R[6],E,E,187,[[["self"]],[T]]],[11,R[7],E,E,187,[[["self"]],[R[8]]]],[11,"from",R[232],E,188,[[[T]],[T]]],[11,"into",E,E,188,[[],[U]]],[11,R[247],E,E,188,[[["self"]],[T]]],[11,R[246],E,E,188,[[["self"],[T]]]],[11,R[3],E,E,188,[[[U]],[R[2]]]],[11,R[4],E,E,188,[[],[R[2]]]],[11,R[5],E,E,188,[[["self"]],[T]]],[11,R[6],E,E,188,[[["self"]],[T]]],[11,R[7],E,E,188,[[["self"]],[R[8]]]],[11,R[248],E,E,188,[[["self"],["k"]],["bool"]]],[11,"from",E,E,189,[[[T]],[T]]],[11,"into",E,E,189,[[],[U]]],[11,R[247],E,E,189,[[["self"]],[T]]],[11,R[246],E,E,189,[[["self"],[T]]]],[11,R[3],E,E,189,[[[U]],[R[2]]]],[11,R[4],E,E,189,[[],[R[2]]]],[11,R[5],E,E,189,[[["self"]],[T]]],[11,R[6],E,E,189,[[["self"]],[T]]],[11,R[7],E,E,189,[[["self"]],[R[8]]]],[11,"from",E,E,190,[[[T]],[T]]],[11,"into",E,E,190,[[],[U]]],[11,R[247],E,E,190,[[["self"]],[T]]],[11,R[246],E,E,190,[[["self"],[T]]]],[11,R[3],E,E,190,[[[U]],[R[2]]]],[11,R[4],E,E,190,[[],[R[2]]]],[11,R[5],E,E,190,[[["self"]],[T]]],[11,R[6],E,E,190,[[["self"]],[T]]],[11,R[7],E,E,190,[[["self"]],[R[8]]]],[11,"from",E,E,191,[[[T]],[T]]],[11,"into",E,E,191,[[],[U]]],[11,R[247],E,E,191,[[["self"]],[T]]],[11,R[246],E,E,191,[[["self"],[T]]]],[11,R[3],E,E,191,[[[U]],[R[2]]]],[11,R[4],E,E,191,[[],[R[2]]]],[11,R[5],E,E,191,[[["self"]],[T]]],[11,R[6],E,E,191,[[["self"]],[T]]],[11,R[7],E,E,191,[[["self"]],[R[8]]]],[11,"from",E,E,192,[[[T]],[T]]],[11,"into",E,E,192,[[],[U]]],[11,R[247],E,E,192,[[["self"]],[T]]],[11,R[246],E,E,192,[[["self"],[T]]]],[11,R[3],E,E,192,[[[U]],[R[2]]]],[11,R[4],E,E,192,[[],[R[2]]]],[11,R[5],E,E,192,[[["self"]],[T]]],[11,R[6],E,E,192,[[["self"]],[T]]],[11,R[7],E,E,192,[[["self"]],[R[8]]]],[11,"from",E,E,193,[[[T]],[T]]],[11,"into",E,E,193,[[],[U]]],[11,R[247],E,E,193,[[["self"]],[T]]],[11,R[246],E,E,193,[[["self"],[T]]]],[11,R[3],E,E,193,[[[U]],[R[2]]]],[11,R[4],E,E,193,[[],[R[2]]]],[11,R[5],E,E,193,[[["self"]],[T]]],[11,R[6],E,E,193,[[["self"]],[T]]],[11,R[7],E,E,193,[[["self"]],[R[8]]]],[11,"from",E,E,194,[[[T]],[T]]],[11,"into",E,E,194,[[],[U]]],[11,R[247],E,E,194,[[["self"]],[T]]],[11,R[246],E,E,194,[[["self"],[T]]]],[11,R[3],E,E,194,[[[U]],[R[2]]]],[11,R[4],E,E,194,[[],[R[2]]]],[11,R[5],E,E,194,[[["self"]],[T]]],[11,R[6],E,E,194,[[["self"]],[T]]],[11,R[7],E,E,194,[[["self"]],[R[8]]]],[11,"from",E,E,195,[[[T]],[T]]],[11,"into",E,E,195,[[],[U]]],[11,R[247],E,E,195,[[["self"]],[T]]],[11,R[246],E,E,195,[[["self"],[T]]]],[11,R[3],E,E,195,[[[U]],[R[2]]]],[11,R[4],E,E,195,[[],[R[2]]]],[11,R[5],E,E,195,[[["self"]],[T]]],[11,R[6],E,E,195,[[["self"]],[T]]],[11,R[7],E,E,195,[[["self"]],[R[8]]]],[11,"from",E,E,196,[[[T]],[T]]],[11,"into",E,E,196,[[],[U]]],[11,R[247],E,E,196,[[["self"]],[T]]],[11,R[246],E,E,196,[[["self"],[T]]]],[11,R[3],E,E,196,[[[U]],[R[2]]]],[11,R[4],E,E,196,[[],[R[2]]]],[11,R[5],E,E,196,[[["self"]],[T]]],[11,R[6],E,E,196,[[["self"]],[T]]],[11,R[7],E,E,196,[[["self"]],[R[8]]]],[11,"from",E,E,197,[[[T]],[T]]],[11,"into",E,E,197,[[],[U]]],[11,R[247],E,E,197,[[["self"]],[T]]],[11,R[246],E,E,197,[[["self"],[T]]]],[11,R[3],E,E,197,[[[U]],[R[2]]]],[11,R[4],E,E,197,[[],[R[2]]]],[11,R[5],E,E,197,[[["self"]],[T]]],[11,R[6],E,E,197,[[["self"]],[T]]],[11,R[7],E,E,197,[[["self"]],[R[8]]]],[11,"from",E,E,198,[[[T]],[T]]],[11,"into",E,E,198,[[],[U]]],[11,R[247],E,E,198,[[["self"]],[T]]],[11,R[246],E,E,198,[[["self"],[T]]]],[11,R[3],E,E,198,[[[U]],[R[2]]]],[11,R[4],E,E,198,[[],[R[2]]]],[11,R[5],E,E,198,[[["self"]],[T]]],[11,R[6],E,E,198,[[["self"]],[T]]],[11,R[7],E,E,198,[[["self"]],[R[8]]]],[11,R[248],E,E,198,[[["self"],["k"]],["bool"]]],[11,"from",E,E,199,[[[T]],[T]]],[11,"into",E,E,199,[[],[U]]],[11,R[247],E,E,199,[[["self"]],[T]]],[11,R[246],E,E,199,[[["self"],[T]]]],[11,R[3],E,E,199,[[[U]],[R[2]]]],[11,R[4],E,E,199,[[],[R[2]]]],[11,R[5],E,E,199,[[["self"]],[T]]],[11,R[6],E,E,199,[[["self"]],[T]]],[11,R[7],E,E,199,[[["self"]],[R[8]]]],[11,R[248],E,E,199,[[["self"],["k"]],["bool"]]],[11,"from",E,E,200,[[[T]],[T]]],[11,"into",E,E,200,[[],[U]]],[11,R[247],E,E,200,[[["self"]],[T]]],[11,R[246],E,E,200,[[["self"],[T]]]],[11,R[3],E,E,200,[[[U]],[R[2]]]],[11,R[4],E,E,200,[[],[R[2]]]],[11,R[5],E,E,200,[[["self"]],[T]]],[11,R[6],E,E,200,[[["self"]],[T]]],[11,R[7],E,E,200,[[["self"]],[R[8]]]],[11,"from",R[270],E,201,[[[T]],[T]]],[11,"into",E,E,201,[[],[U]]],[11,R[247],E,E,201,[[["self"]],[T]]],[11,R[246],E,E,201,[[["self"],[T]]]],[11,R[3],E,E,201,[[[U]],[R[2]]]],[11,R[4],E,E,201,[[],[R[2]]]],[11,R[5],E,E,201,[[["self"]],[T]]],[11,R[6],E,E,201,[[["self"]],[T]]],[11,R[7],E,E,201,[[["self"]],[R[8]]]],[11,R[248],E,E,201,[[["self"],["k"]],["bool"]]],[11,"from",E,E,202,[[[T]],[T]]],[11,"into",E,E,202,[[],[U]]],[11,R[247],E,E,202,[[["self"]],[T]]],[11,R[246],E,E,202,[[["self"],[T]]]],[11,R[3],E,E,202,[[[U]],[R[2]]]],[11,R[4],E,E,202,[[],[R[2]]]],[11,R[5],E,E,202,[[["self"]],[T]]],[11,R[6],E,E,202,[[["self"]],[T]]],[11,R[7],E,E,202,[[["self"]],[R[8]]]],[11,R[248],E,E,202,[[["self"],["k"]],["bool"]]],[11,"from",E,E,203,[[[T]],[T]]],[11,"into",E,E,203,[[],[U]]],[11,R[247],E,E,203,[[["self"]],[T]]],[11,R[246],E,E,203,[[["self"],[T]]]],[11,R[3],E,E,203,[[[U]],[R[2]]]],[11,R[4],E,E,203,[[],[R[2]]]],[11,R[5],E,E,203,[[["self"]],[T]]],[11,R[6],E,E,203,[[["self"]],[T]]],[11,R[7],E,E,203,[[["self"]],[R[8]]]],[11,R[248],E,E,203,[[["self"],["k"]],["bool"]]],[11,"from",R[271],E,204,[[[T]],[T]]],[11,"into",E,E,204,[[],[U]]],[11,R[3],E,E,204,[[[U]],[R[2]]]],[11,R[4],E,E,204,[[],[R[2]]]],[11,R[5],E,E,204,[[["self"]],[T]]],[11,R[6],E,E,204,[[["self"]],[T]]],[11,R[7],E,E,204,[[["self"]],[R[8]]]],[11,"from",E,E,205,[[[T]],[T]]],[11,"into",E,E,205,[[],[U]]],[11,R[3],E,E,205,[[[U]],[R[2]]]],[11,R[4],E,E,205,[[],[R[2]]]],[11,R[5],E,E,205,[[["self"]],[T]]],[11,R[6],E,E,205,[[["self"]],[T]]],[11,R[7],E,E,205,[[["self"]],[R[8]]]],[11,"from",E,E,206,[[[T]],[T]]],[11,"into",E,E,206,[[],[U]]],[11,R[3],E,E,206,[[[U]],[R[2]]]],[11,R[4],E,E,206,[[],[R[2]]]],[11,R[5],E,E,206,[[["self"]],[T]]],[11,R[6],E,E,206,[[["self"]],[T]]],[11,R[7],E,E,206,[[["self"]],[R[8]]]],[11,"from",E,E,207,[[[T]],[T]]],[11,"into",E,E,207,[[],[U]]],[11,R[3],E,E,207,[[[U]],[R[2]]]],[11,R[4],E,E,207,[[],[R[2]]]],[11,R[5],E,E,207,[[["self"]],[T]]],[11,R[6],E,E,207,[[["self"]],[T]]],[11,R[7],E,E,207,[[["self"]],[R[8]]]],[11,"from",E,E,208,[[[T]],[T]]],[11,"into",E,E,208,[[],[U]]],[11,R[3],E,E,208,[[[U]],[R[2]]]],[11,R[4],E,E,208,[[],[R[2]]]],[11,R[5],E,E,208,[[["self"]],[T]]],[11,R[6],E,E,208,[[["self"]],[T]]],[11,R[7],E,E,208,[[["self"]],[R[8]]]],[11,"from",E,E,209,[[[T]],[T]]],[11,"into",E,E,209,[[],[U]]],[11,R[3],E,E,209,[[[U]],[R[2]]]],[11,R[4],E,E,209,[[],[R[2]]]],[11,R[5],E,E,209,[[["self"]],[T]]],[11,R[6],E,E,209,[[["self"]],[T]]],[11,R[7],E,E,209,[[["self"]],[R[8]]]],[11,"compile",R[251],E,29,[[["self"],[R[21]],["token"]],[[R[22]],[R[17],[R[22]]]]]],[11,R[55],E,E,29,[[["self"],[R[23]],["token"]],[[R[2],[R[22],R[18]]],[R[18]],[R[22]]]]],[11,R[272],R[254],E,58,[[["self"],["str"]],[[R[26],[R[81]]],[R[81]]]]],[11,R[273],E,E,58,[[["self"]],["vec"]]],[11,R[274],E,E,58,[[["self"],[R[81]],["str"]],[R[26]]]],[11,R[272],R[243],E,1,[[["self"],["str"]],[[R[26],[R[81]]],[R[81]]]]],[11,R[273],E,E,1,[[["self"]],["vec"]]],[11,R[274],E,E,1,[[["self"],[R[81]],["str"]],[R[26]]]],[11,R[241],R[253],E,55,[[["self"]],[R[81]]]],[11,R[241],R[80],E,54,[[["self"]],[R[81]]]],[11,R[241],R[101],E,69,[[["self"]],[R[81]]]],[11,R[241],R[158],E,102,[[["self"]],[R[81]]]],[11,R[241],R[245],E,3,[[["self"]],[R[81]]]],[11,"load",R[256],E,210,[[["self"],[R[95]],[R[28]],["ctx"]],[R[2]]]],[11,"call",E,E,62,[[["self"],["usize"]],[[R[2],["u128"]],["u128"]]]],[11,"new",R[244],E,86,[[["usize"]],["self"]]],[11,"index",E,E,86,[[["self"]],["usize"]]],[11,"new",E,E,87,[[["usize"]],["self"]]],[11,"index",E,E,87,[[["self"]],["usize"]]],[11,"new",R[267],E,147,[[["usize"]],["self"]]],[11,"index",E,E,147,[[["self"]],["usize"]]],[11,"new",E,E,148,[[["usize"]],["self"]]],[11,"index",E,E,148,[[["self"]],["usize"]]],[11,"new",E,E,149,[[["usize"]],["self"]]],[11,"index",E,E,149,[[["self"]],["usize"]]],[11,"new",E,E,150,[[["usize"]],["self"]]],[11,"index",E,E,150,[[["self"]],["usize"]]],[11,"new",E,E,151,[[["usize"]],["self"]]],[11,"index",E,E,151,[[["self"]],["usize"]]],[11,"new",E,E,152,[[["usize"]],["self"]]],[11,"index",E,E,152,[[["self"]],["usize"]]],[11,"new",E,E,153,[[["usize"]],["self"]]],[11,"index",E,E,153,[[["self"]],["usize"]]],[11,"new",E,E,154,[[["usize"]],["self"]]],[11,"index",E,E,154,[[["self"]],["usize"]]],[11,"new",E,E,155,[[["usize"]],["self"]]],[11,"index",E,E,155,[[["self"]],["usize"]]],[11,"new",E,E,156,[[["usize"]],["self"]]],[11,"index",E,E,156,[[["self"]],["usize"]]],[11,"new",E,E,157,[[["usize"]],["self"]]],[11,"index",E,E,157,[[["self"]],["usize"]]],[11,"new",E,E,158,[[["usize"]],["self"]]],[11,"index",E,E,158,[[["self"]],["usize"]]],[11,"new",E,E,159,[[["usize"]],["self"]]],[11,"index",E,E,159,[[["self"]],["usize"]]],[11,R[275],R[257],E,77,[[]]],[11,R[276],E,E,77,[[],["self"]]],[11,"from",R[250],E,27,[[["error"]],["self"]]],[11,"from",R[59],E,45,[[[R[279]]],["self"]]],[11,"from",E,E,45,[[[R[168]]],["self"]]],[11,"from",E,E,45,[[[R[278]]],["self"]]],[11,"from",E,E,45,[[[R[298]]],["self"]]],[11,"from",E,E,45,[[[R[41]]],["self"]]],[11,"from",E,E,45,[[["vec",[R[277]]],[R[277]]],["self"]]],[11,"from",E,E,43,[[[R[168]]],["self"]]],[11,"from",E,E,43,[[[R[278]]],["self"]]],[11,"from",E,E,48,[[["error"]],["self"]]],[11,"from",E,E,50,[[[R[127]]],["self"]]],[11,"from",E,E,39,[[[R[126]]],[R[279]]]],[11,"from",R[264],E,89,[[[R[127]]],[R[126]]]],[11,"from",R[158],E,101,[[["dynfunc"]],["self"]]],[11,"from",R[267],E,161,[[["i32"]],["self"]]],[11,"from",E,E,161,[[["i64"]],["self"]]],[11,"from",E,E,161,[[["f32"]],["self"]]],[11,"from",E,E,161,[[["f64"]],["self"]]],[11,"from",E,E,161,[[["u128"]],["self"]]],[11,"from",R[268],E,169,[[["pages"]],["bytes"]]],[11,"from",E,E,168,[[["bytes"]],["pages"]]],[11,"drop",R[249],E,21,[[["self"]]]],[11,"drop",R[243],E,61,[[["self"]]]],[11,"drop",R[256],E,63,[[["self"]]]],[11,"drop",R[152],E,14,[[["self"]]]],[11,"drop",R[155],E,100,[[["self"]]]],[11,"drop",R[269],E,170,[[["self"]]]],[11,"drop",R[271],E,204,[[["self"]]]],[11,"into",R[59],E,47,[[],[R[103]]]],[11,"into",E,E,48,[[],[R[103]]]],[11,"into",E,E,49,[[],[R[103]]]],[11,"next",R[80],E,52,[[["self"]],[R[26]]]],[11,"next",R[254],E,57,[[["self"]],[R[26]]]],[11,"next",R[140],E,98,[[["self"]],[R[26]]]],[11,"next",R[136],E,94,[[["self"]],[R[26]]]],[11,"next",E,E,95,[[["self"]],[R[26]]]],[11,"cmp",R[20],E,13,[[["self"],[R[281]]],[R[280]]]],[11,"cmp",R[267],E,147,[[["self"],[R[54]]],[R[280]]]],[11,"cmp",E,E,148,[[["self"],[R[39]]],[R[280]]]],[11,"cmp",E,E,149,[[["self"],[R[47]]],[R[280]]]],[11,"cmp",E,E,150,[[["self"],[R[184]]],[R[280]]]],[11,"cmp",E,E,151,[[["self"],[R[43]]],[R[280]]]],[11,"cmp",E,E,152,[[["self"],[R[218]]],[R[280]]]],[11,"cmp",E,E,153,[[["self"],[R[186]]],[R[280]]]],[11,"cmp",E,E,154,[[["self"],[R[44]]],[R[280]]]],[11,"cmp",E,E,155,[[["self"],[R[283]]],[R[280]]]],[11,"cmp",E,E,156,[[["self"],[R[187]]],[R[280]]]],[11,"cmp",E,E,157,[[["self"],[R[46]]],[R[280]]]],[11,"cmp",E,E,158,[[["self"],[R[284]]],[R[280]]]],[11,"cmp",R[268],E,168,[[["self"],["pages"]],[R[280]]]],[11,"cmp",E,E,169,[[["self"],["bytes"]],[R[280]]]],[11,"cmp",R[270],E,201,[[["self"],["gpr"]],[R[280]]]],[11,"cmp",E,E,202,[[["self"],["xmm"]],[R[280]]]],[11,R[282],R[20],E,13,[[["self"],[R[281]]],[[R[26],[R[280]]],[R[280]]]]],[11,R[282],R[267],E,147,[[["self"],[R[54]]],[[R[26],[R[280]]],[R[280]]]]],[11,"lt",E,E,147,[[["self"],[R[54]]],["bool"]]],[11,"le",E,E,147,[[["self"],[R[54]]],["bool"]]],[11,"gt",E,E,147,[[["self"],[R[54]]],["bool"]]],[11,"ge",E,E,147,[[["self"],[R[54]]],["bool"]]],[11,R[282],E,E,148,[[["self"],[R[39]]],[[R[26],[R[280]]],[R[280]]]]],[11,"lt",E,E,148,[[["self"],[R[39]]],["bool"]]],[11,"le",E,E,148,[[["self"],[R[39]]],["bool"]]],[11,"gt",E,E,148,[[["self"],[R[39]]],["bool"]]],[11,"ge",E,E,148,[[["self"],[R[39]]],["bool"]]],[11,R[282],E,E,149,[[["self"],[R[47]]],[[R[26],[R[280]]],[R[280]]]]],[11,"lt",E,E,149,[[["self"],[R[47]]],["bool"]]],[11,"le",E,E,149,[[["self"],[R[47]]],["bool"]]],[11,"gt",E,E,149,[[["self"],[R[47]]],["bool"]]],[11,"ge",E,E,149,[[["self"],[R[47]]],["bool"]]],[11,R[282],E,E,150,[[["self"],[R[184]]],[[R[26],[R[280]]],[R[280]]]]],[11,"lt",E,E,150,[[["self"],[R[184]]],["bool"]]],[11,"le",E,E,150,[[["self"],[R[184]]],["bool"]]],[11,"gt",E,E,150,[[["self"],[R[184]]],["bool"]]],[11,"ge",E,E,150,[[["self"],[R[184]]],["bool"]]],[11,R[282],E,E,151,[[["self"],[R[43]]],[[R[26],[R[280]]],[R[280]]]]],[11,"lt",E,E,151,[[["self"],[R[43]]],["bool"]]],[11,"le",E,E,151,[[["self"],[R[43]]],["bool"]]],[11,"gt",E,E,151,[[["self"],[R[43]]],["bool"]]],[11,"ge",E,E,151,[[["self"],[R[43]]],["bool"]]],[11,R[282],E,E,152,[[["self"],[R[218]]],[[R[26],[R[280]]],[R[280]]]]],[11,"lt",E,E,152,[[["self"],[R[218]]],["bool"]]],[11,"le",E,E,152,[[["self"],[R[218]]],["bool"]]],[11,"gt",E,E,152,[[["self"],[R[218]]],["bool"]]],[11,"ge",E,E,152,[[["self"],[R[218]]],["bool"]]],[11,R[282],E,E,153,[[["self"],[R[186]]],[[R[26],[R[280]]],[R[280]]]]],[11,"lt",E,E,153,[[["self"],[R[186]]],["bool"]]],[11,"le",E,E,153,[[["self"],[R[186]]],["bool"]]],[11,"gt",E,E,153,[[["self"],[R[186]]],["bool"]]],[11,"ge",E,E,153,[[["self"],[R[186]]],["bool"]]],[11,R[282],E,E,154,[[["self"],[R[44]]],[[R[26],[R[280]]],[R[280]]]]],[11,"lt",E,E,154,[[["self"],[R[44]]],["bool"]]],[11,"le",E,E,154,[[["self"],[R[44]]],["bool"]]],[11,"gt",E,E,154,[[["self"],[R[44]]],["bool"]]],[11,"ge",E,E,154,[[["self"],[R[44]]],["bool"]]],[11,R[282],E,E,155,[[["self"],[R[283]]],[[R[26],[R[280]]],[R[280]]]]],[11,"lt",E,E,155,[[["self"],[R[283]]],["bool"]]],[11,"le",E,E,155,[[["self"],[R[283]]],["bool"]]],[11,"gt",E,E,155,[[["self"],[R[283]]],["bool"]]],[11,"ge",E,E,155,[[["self"],[R[283]]],["bool"]]],[11,R[282],E,E,156,[[["self"],[R[187]]],[[R[26],[R[280]]],[R[280]]]]],[11,"lt",E,E,156,[[["self"],[R[187]]],["bool"]]],[11,"le",E,E,156,[[["self"],[R[187]]],["bool"]]],[11,"gt",E,E,156,[[["self"],[R[187]]],["bool"]]],[11,"ge",E,E,156,[[["self"],[R[187]]],["bool"]]],[11,R[282],E,E,157,[[["self"],[R[46]]],[[R[26],[R[280]]],[R[280]]]]],[11,"lt",E,E,157,[[["self"],[R[46]]],["bool"]]],[11,"le",E,E,157,[[["self"],[R[46]]],["bool"]]],[11,"gt",E,E,157,[[["self"],[R[46]]],["bool"]]],[11,"ge",E,E,157,[[["self"],[R[46]]],["bool"]]],[11,R[282],E,E,158,[[["self"],[R[284]]],[[R[26],[R[280]]],[R[280]]]]],[11,"lt",E,E,158,[[["self"],[R[284]]],["bool"]]],[11,"le",E,E,158,[[["self"],[R[284]]],["bool"]]],[11,"gt",E,E,158,[[["self"],[R[284]]],["bool"]]],[11,"ge",E,E,158,[[["self"],[R[284]]],["bool"]]],[11,R[282],R[268],E,168,[[["self"],["pages"]],[[R[26],[R[280]]],[R[280]]]]],[11,"lt",E,E,168,[[["self"],["pages"]],["bool"]]],[11,"le",E,E,168,[[["self"],["pages"]],["bool"]]],[11,"gt",E,E,168,[[["self"],["pages"]],["bool"]]],[11,"ge",E,E,168,[[["self"],["pages"]],["bool"]]],[11,R[282],E,E,169,[[["self"],["bytes"]],[[R[26],[R[280]]],[R[280]]]]],[11,"lt",E,E,169,[[["self"],["bytes"]],["bool"]]],[11,"le",E,E,169,[[["self"],["bytes"]],["bool"]]],[11,"gt",E,E,169,[[["self"],["bytes"]],["bool"]]],[11,"ge",E,E,169,[[["self"],["bytes"]],["bool"]]],[11,R[282],R[270],E,201,[[["self"],["gpr"]],[[R[26],[R[280]]],[R[280]]]]],[11,R[282],E,E,202,[[["self"],["xmm"]],[[R[26],[R[280]]],[R[280]]]]],[11,R[285],R[20],E,12,[[],[R[288]]]],[11,R[285],E,E,6,[[],[R[19]]]],[11,R[285],E,E,8,[[],[R[21]]]],[11,R[285],E,E,9,[[],[R[27]]]],[11,R[285],R[221],E,184,[[],[R[294]]]],[11,R[285],R[232],E,190,[[],[R[286]]]],[11,R[255],R[254],E,56,[[]]],[11,R[255],R[136],E,96,[[]]],[11,"extend",R[254],E,56,[[["self"],[R[287]]]]],[11,"extend",R[136],E,96,[[["self"],[R[287]]]]],[11,"clone",R[20],E,10,[[["self"]],[R[29]]]],[11,"clone",E,E,11,[[["self"]],[R[527]]]],[11,"clone",E,E,4,[[["self"]],[R[30]]]],[11,"clone",E,E,12,[[["self"]],[R[288]]]],[11,"clone",E,E,9,[[["self"]],[R[27]]]],[11,"clone",E,E,13,[[["self"]],[R[281]]]],[11,"clone",R[250],E,22,[[["self"]],[R[297]]]],[11,"clone",R[59],E,39,[[["self"]],[R[279]]]],[11,"clone",E,E,40,[[["self"]],[R[277]]]],[11,"clone",E,E,42,[[["self"]],[R[278]]]],[11,"clone",E,E,44,[[["self"]],[R[41]]]],[11,"clone",R[80],E,53,[[["self"]],["context"]]],[11,"clone",E,E,54,[[["self"]],[R[81]]]],[11,"clone",E,E,51,[[["self"]],["funcpointer"]]],[11,"clone",R[253],E,55,[[["self"]],["self"]]],[11,"clone",R[257],E,77,[[["self"]],["self"]]],[11,"clone",R[101],E,74,[[["self"]],["memoryvariant"]]],[11,"clone",E,E,69,[[["self"]],[R[96]]]],[11,"clone",E,E,75,[[["self"]],[R[289]]]],[11,"clone",E,E,70,[[["self"]],["self"]]],[11,"clone",E,E,72,[[["self"]],["self"]]],[11,"clone",R[244],E,80,[[["self"]],[R[28]]]],[11,"clone",E,E,2,[[["self"]],["self"]]],[11,"clone",E,E,81,[[["self"]],["importname"]]],[11,"clone",E,E,88,[[["self"]],[R[290]]]],[11,"clone",E,E,82,[[["self"]],["datainitializer"]]],[11,"clone",E,E,83,[[["self"]],["tableinitializer"]]],[11,"clone",E,E,85,[[["self"]],[R[291]]]],[11,"clone",E,E,86,[[["self"]],[R[299]]]],[11,"clone",E,E,87,[[["self"]],[R[300]]]],[11,"clone",R[136],E,93,[[["self"]],[R[36]]]],[11,"clone",E,E,96,[[["self"]],["map"]]],[11,"clone",R[152],E,14,[[["self"]],["self"]]],[11,"clone",E,E,15,[[["self"]],[R[292]]]],[11,"clone",R[158],E,102,[[["self"]],["self"]]],[11,"clone",R[245],E,110,[[["self"]],["wasm"]]],[11,"clone",R[267],E,160,[[["self"]],["type"]]],[11,"clone",E,E,161,[[["self"]],["value"]]],[11,"clone",E,E,162,[[["self"]],[R[301]]]],[11,"clone",E,E,142,[[["self"]],[R[160]]]],[11,"clone",E,E,163,[[["self"]],[R[128]]]],[11,"clone",E,E,143,[[["self"]],[R[293]]]],[11,"clone",E,E,144,[[["self"]],[R[1199]]]],[11,"clone",E,E,145,[[["self"]],[R[108]]]],[11,"clone",E,E,146,[[["self"]],[R[90]]]],[11,"clone",E,E,147,[[["self"]],[R[54]]]],[11,"clone",E,E,148,[[["self"]],[R[39]]]],[11,"clone",E,E,149,[[["self"]],[R[47]]]],[11,"clone",E,E,150,[[["self"]],[R[184]]]],[11,"clone",E,E,151,[[["self"]],[R[43]]]],[11,"clone",E,E,152,[[["self"]],[R[218]]]],[11,"clone",E,E,153,[[["self"]],[R[186]]]],[11,"clone",E,E,154,[[["self"]],[R[44]]]],[11,"clone",E,E,155,[[["self"]],[R[283]]]],[11,"clone",E,E,156,[[["self"]],[R[187]]]],[11,"clone",E,E,157,[[["self"]],[R[46]]]],[11,"clone",E,E,158,[[["self"]],[R[284]]]],[11,"clone",E,E,159,[[["self"]],[R[40]]]],[11,"clone",R[268],E,168,[[["self"]],["pages"]]],[11,"clone",E,E,169,[[["self"]],["bytes"]]],[11,"clone",R[269],E,177,[[["self"]],[R[48]]]],[11,"clone",E,E,178,[[["self"]],[R[159]]]],[11,"clone",E,E,179,[[["self"]],[R[102]]]],[11,"clone",E,E,180,[[["self"]],["localglobal"]]],[11,"clone",E,E,181,[[["self"]],["sigid"]]],[11,"clone",E,E,182,[[["self"]],["anyfunc"]]],[11,"clone",R[221],E,184,[[["self"]],[R[294]]]],[11,"clone",E,E,187,[[["self"]],[R[295]]]],[11,"clone",R[232],E,188,[[["self"]],[R[296]]]],[11,"clone",E,E,198,[[["self"]],[R[235]]]],[11,"clone",E,E,189,[[["self"]],[R[236]]]],[11,"clone",E,E,190,[[["self"]],[R[286]]]],[11,"clone",E,E,199,[[["self"]],[R[302]]]],[11,"clone",E,E,191,[[["self"]],[R[237]]]],[11,"clone",E,E,200,[[["self"]],["suspendoffset"]]],[11,"clone",E,E,192,[[["self"]],["offsetinfo"]]],[11,"clone",E,E,193,[[["self"]],[R[24]]]],[11,"clone",E,E,194,[[["self"]],["wasmfunctionstatedump"]]],[11,"clone",E,E,195,[[["self"]],[R[223]]]],[11,"clone",E,E,196,[[["self"]],[R[233]]]],[11,"clone",E,E,197,[[["self"]],[R[219]]]],[11,"clone",R[270],E,201,[[["self"]],["gpr"]]],[11,"clone",E,E,202,[[["self"]],["xmm"]]],[11,"clone",E,E,203,[[["self"]],[R[231]]]],[11,"eq",R[20],E,13,[[["self"],[R[281]]],["bool"]]],[11,"eq",R[250],E,22,[[["self"],[R[297]]],["bool"]]],[11,"ne",E,E,22,[[["self"],[R[297]]],["bool"]]],[11,"eq",R[59],E,39,[[["self"],[R[279]]],["bool"]]],[11,"eq",E,E,40,[[["self"],[R[277]]],["bool"]]],[11,"eq",E,E,41,[[["self"],[R[168]]],["bool"]]],[11,"eq",E,E,42,[[["self"],[R[278]]],["bool"]]],[11,"eq",E,E,43,[[["self"],[R[298]]],["bool"]]],[11,"eq",E,E,44,[[["self"],[R[41]]],["bool"]]],[11,"eq",E,E,45,[[["self"],["error"]],["bool"]]],[11,"eq",R[257],E,77,[[["self"]],["bool"]]],[11,"eq",R[101],E,75,[[["self"],[R[289]]],["bool"]]],[11,"eq",R[244],E,88,[[["self"],[R[290]]],["bool"]]],[11,"ne",E,E,88,[[["self"],[R[290]]],["bool"]]],[11,"eq",E,E,86,[[["self"],[R[299]]],["bool"]]],[11,"ne",E,E,86,[[["self"],[R[299]]],["bool"]]],[11,"eq",E,E,87,[[["self"],[R[300]]],["bool"]]],[11,"ne",E,E,87,[[["self"],[R[300]]],["bool"]]],[11,"eq",R[152],E,15,[[["self"],[R[292]]],["bool"]]],[11,"eq",R[267],E,160,[[["self"],["type"]],["bool"]]],[11,"eq",E,E,161,[[["self"],["value"]],["bool"]]],[11,"ne",E,E,161,[[["self"],["value"]],["bool"]]],[11,"eq",E,E,162,[[["self"],[R[301]]],["bool"]]],[11,"eq",E,E,163,[[["self"],[R[128]]],["bool"]]],[11,"ne",E,E,163,[[["self"],[R[128]]],["bool"]]],[11,"eq",E,E,143,[[["self"],[R[293]]],["bool"]]],[11,"ne",E,E,143,[[["self"],[R[293]]],["bool"]]],[11,"eq",E,E,145,[[["self"],[R[108]]],["bool"]]],[11,"ne",E,E,145,[[["self"],[R[108]]],["bool"]]],[11,"eq",E,E,146,[[["self"],[R[90]]],["bool"]]],[11,"ne",E,E,146,[[["self"],[R[90]]],["bool"]]],[11,"eq",E,E,147,[[["self"],[R[54]]],["bool"]]],[11,"ne",E,E,147,[[["self"],[R[54]]],["bool"]]],[11,"eq",E,E,148,[[["self"],[R[39]]],["bool"]]],[11,"ne",E,E,148,[[["self"],[R[39]]],["bool"]]],[11,"eq",E,E,149,[[["self"],[R[47]]],["bool"]]],[11,"ne",E,E,149,[[["self"],[R[47]]],["bool"]]],[11,"eq",E,E,150,[[["self"],[R[184]]],["bool"]]],[11,"ne",E,E,150,[[["self"],[R[184]]],["bool"]]],[11,"eq",E,E,151,[[["self"],[R[43]]],["bool"]]],[11,"ne",E,E,151,[[["self"],[R[43]]],["bool"]]],[11,"eq",E,E,152,[[["self"],[R[218]]],["bool"]]],[11,"ne",E,E,152,[[["self"],[R[218]]],["bool"]]],[11,"eq",E,E,153,[[["self"],[R[186]]],["bool"]]],[11,"ne",E,E,153,[[["self"],[R[186]]],["bool"]]],[11,"eq",E,E,154,[[["self"],[R[44]]],["bool"]]],[11,"ne",E,E,154,[[["self"],[R[44]]],["bool"]]],[11,"eq",E,E,155,[[["self"],[R[283]]],["bool"]]],[11,"ne",E,E,155,[[["self"],[R[283]]],["bool"]]],[11,"eq",E,E,156,[[["self"],[R[187]]],["bool"]]],[11,"ne",E,E,156,[[["self"],[R[187]]],["bool"]]],[11,"eq",E,E,157,[[["self"],[R[46]]],["bool"]]],[11,"ne",E,E,157,[[["self"],[R[46]]],["bool"]]],[11,"eq",E,E,158,[[["self"],[R[284]]],["bool"]]],[11,"ne",E,E,158,[[["self"],[R[284]]],["bool"]]],[11,"eq",E,E,159,[[["self"],[R[40]]],["bool"]]],[11,"ne",E,E,159,[[["self"],[R[40]]],["bool"]]],[11,"eq",R[268],E,168,[[["self"],["pages"]],["bool"]]],[11,"ne",E,E,168,[[["self"],["pages"]],["bool"]]],[11,"eq",E,E,169,[[["self"],["bytes"]],["bool"]]],[11,"ne",E,E,169,[[["self"],["bytes"]],["bool"]]],[11,"eq",R[232],E,188,[[["self"],[R[296]]],["bool"]]],[11,"ne",E,E,188,[[["self"],[R[296]]],["bool"]]],[11,"eq",E,E,198,[[["self"],[R[235]]],["bool"]]],[11,"ne",E,E,198,[[["self"],[R[235]]],["bool"]]],[11,"eq",E,E,199,[[["self"],[R[302]]],["bool"]]],[11,"ne",E,E,199,[[["self"],[R[302]]],["bool"]]],[11,"eq",R[270],E,201,[[["self"],["gpr"]],["bool"]]],[11,"eq",E,E,202,[[["self"],["xmm"]],["bool"]]],[11,"eq",E,E,203,[[["self"],[R[231]]],["bool"]]],[11,"ne",E,E,203,[[["self"],[R[231]]],["bool"]]],[11,R[303],R[20],E,13,[[["self"]]]],[11,R[303],R[250],E,22,[[["self"]]]],[11,R[303],R[101],E,75,[[["self"]]]],[11,R[303],R[244],E,88,[[["self"]]]],[11,R[303],E,E,86,[[["self"]]]],[11,R[303],E,E,87,[[["self"]]]],[11,R[303],R[152],E,15,[[["self"]]]],[11,R[303],R[267],E,160,[[["self"]]]],[11,R[303],E,E,162,[[["self"]]]],[11,R[303],E,E,143,[[["self"]]]],[11,R[303],E,E,145,[[["self"]]]],[11,R[303],E,E,146,[[["self"]]]],[11,R[303],E,E,147,[[["self"]]]],[11,R[303],E,E,148,[[["self"]]]],[11,R[303],E,E,149,[[["self"]]]],[11,R[303],E,E,150,[[["self"]]]],[11,R[303],E,E,151,[[["self"]]]],[11,R[303],E,E,152,[[["self"]]]],[11,R[303],E,E,153,[[["self"]]]],[11,R[303],E,E,154,[[["self"]]]],[11,R[303],E,E,155,[[["self"]]]],[11,R[303],E,E,156,[[["self"]]]],[11,R[303],E,E,157,[[["self"]]]],[11,R[303],E,E,158,[[["self"]]]],[11,R[303],E,E,159,[[["self"]]]],[11,R[303],R[268],E,168,[[["self"]]]],[11,R[303],E,E,169,[[["self"]]]],[11,R[303],R[232],E,188,[[["self"]]]],[11,R[303],E,E,198,[[["self"]]]],[11,R[303],E,E,199,[[["self"]]]],[11,R[303],R[270],E,201,[[["self"]]]],[11,R[303],E,E,202,[[["self"]]]],[11,R[303],E,E,203,[[["self"]]]],[11,"deref",R[256],E,63,[[["self"]]]],[11,"deref",R[101],E,68,[[["self"]]]],[11,"deref",E,E,68,[[["self"]]]],[11,"deref",R[265],E,90,[[["self"]],["rwlock"]]],[11,"deref",R[136],E,93,[[["self"]],[R[45]]]],[11,"deref",E,E,96,[[["self"]],[R[45]]]],[11,"deref",R[266],E,107,[[["self"]]]],[11,"deref",R[221],E,186,[[["self"]],["interruptsignalmem"]]],[11,"fmt",R[59],E,39,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,40,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,41,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,42,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,43,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,44,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,45,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,46,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,47,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,48,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,49,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",R[245],E,138,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",R[267],E,160,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,146,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",R[20],E,10,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,11,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,4,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,12,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,6,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,7,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,8,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,9,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,13,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",R[249],E,19,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,20,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,21,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",R[250],E,26,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,27,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,22,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",R[251],E,33,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,34,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",R[59],E,39,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,40,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,41,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,42,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,43,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,44,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,45,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,46,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,47,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,48,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,49,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,50,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",R[80],E,53,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,54,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,51,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",R[253],E,55,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",R[257],E,77,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",R[101],E,69,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,75,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",R[244],E,80,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,81,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,88,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,82,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,83,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,85,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,86,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,87,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",R[264],E,89,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",R[20],E,92,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",R[136],E,93,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,96,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,97,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",R[152],E,14,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,15,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",R[155],E,100,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",R[158],E,102,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",R[266],E,109,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",R[267],E,160,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,161,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,162,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,142,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,163,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,143,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,144,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,145,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,146,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,147,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,148,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,149,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,150,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,151,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,152,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,153,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,154,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,155,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,156,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,157,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,158,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,159,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",R[268],E,168,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,169,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",R[269],E,170,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,171,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,176,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,177,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,178,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,179,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,180,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,181,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,182,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",R[221],E,187,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",R[232],E,188,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,198,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,189,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,190,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,199,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,191,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,200,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,192,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,193,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,194,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,195,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,196,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",R[270],E,201,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,202,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,203,[[["self"],[R[304]]],[R[2]]]],[11,"sub",R[268],E,168,[[[T]],["pages"]]],[11,"sub",E,E,169,[[[T]],["bytes"]]],[11,"add",E,E,168,[[[T]],["pages"]]],[11,"add",E,E,169,[[[T]],["bytes"]]],[11,R[105],R[256],E,63,[[["self"]]]],[11,R[105],R[136],E,93,[[["self"]],[R[45]]]],[11,R[105],E,E,96,[[["self"]],[R[45]]]],[11,"index",E,E,97,[[["self"],["k"]],["v"]]],[11,"index_mut",E,E,97,[[["self"],["k"]],["v"]]],[11,"hash",R[250],E,22,[[["self"],["__h"]]]],[11,"hash",R[101],E,75,[[["self"],["__h"]]]],[11,"hash",R[244],E,86,[[["self"],["__h"]]]],[11,"hash",E,E,87,[[["self"],["__h"]]]],[11,"hash",R[267],E,160,[[["self"],["__h"]]]],[11,"hash",E,E,146,[[["self"],["__h"]]]],[11,"hash",E,E,147,[[["self"],["__h"]]]],[11,"hash",E,E,148,[[["self"],["__h"]]]],[11,"hash",E,E,149,[[["self"],["__h"]]]],[11,"hash",E,E,150,[[["self"],["__h"]]]],[11,"hash",E,E,151,[[["self"],["__h"]]]],[11,"hash",E,E,152,[[["self"],["__h"]]]],[11,"hash",E,E,153,[[["self"],["__h"]]]],[11,"hash",E,E,154,[[["self"],["__h"]]]],[11,"hash",E,E,155,[[["self"],["__h"]]]],[11,"hash",E,E,156,[[["self"],["__h"]]]],[11,"hash",E,E,157,[[["self"],["__h"]]]],[11,"hash",E,E,158,[[["self"],["__h"]]]],[11,"hash",E,E,159,[[["self"],["__h"]]]],[11,"hash",R[232],E,188,[[["self"],["__h"]]]],[11,"hash",E,E,198,[[["self"],["__h"]]]],[11,"hash",E,E,199,[[["self"],["__h"]]]],[11,"hash",R[270],E,201,[[["self"],["__h"]]]],[11,"hash",E,E,202,[[["self"],["__h"]]]],[11,"from_iter",R[136],E,96,[[[R[287]]],["self"]]],[11,R[305],R[265],E,90,[[["self"]]]],[11,R[305],R[266],E,107,[[["self"]]]],[11,R[305],R[221],E,186,[[["self"]]]],[11,R[306],R[20],E,9,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,13,[[["self"],["__s"]],[R[2]]]],[11,R[306],R[250],E,22,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,24,[[["self"],["__s"]],[R[2]]]],[11,R[306],R[101],E,75,[[["self"],["__s"]],[R[2]]]],[11,R[306],R[244],E,80,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,81,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,88,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,82,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,83,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,85,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,86,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,87,[[["self"],["__s"]],[R[2]]]],[11,R[306],R[136],E,96,[[["self"],["__s"]],[R[2]]]],[11,R[306],R[152],E,15,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,14,[[["self"],["s"]],[R[2]]]],[11,R[306],R[267],E,160,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,161,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,162,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,142,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,163,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,143,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,144,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,145,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,146,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,147,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,148,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,149,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,150,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,151,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,152,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,153,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,154,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,155,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,156,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,157,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,158,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,159,[[["self"],["__s"]],[R[2]]]],[11,R[306],R[268],E,168,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,169,[[["self"],["__s"]],[R[2]]]],[11,R[306],R[232],E,188,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,198,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,189,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,190,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,199,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,191,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,200,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,192,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,193,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,194,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,195,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,196,[[["self"],["__s"]],[R[2]]]],[11,R[307],R[20],E,9,[[["__d"]],[R[2]]]],[11,R[307],E,E,13,[[["__d"]],[R[2]]]],[11,R[307],R[250],E,22,[[["__d"]],[R[2]]]],[11,R[307],E,E,24,[[["__d"]],[R[2]]]],[11,R[307],R[101],E,75,[[["__d"]],[R[2]]]],[11,R[307],R[244],E,80,[[["__d"]],[R[2]]]],[11,R[307],E,E,81,[[["__d"]],[R[2]]]],[11,R[307],E,E,88,[[["__d"]],[R[2]]]],[11,R[307],E,E,82,[[["__d"]],[R[2]]]],[11,R[307],E,E,83,[[["__d"]],[R[2]]]],[11,R[307],E,E,85,[[["__d"]],[R[2]]]],[11,R[307],E,E,86,[[["__d"]],[R[2]]]],[11,R[307],E,E,87,[[["__d"]],[R[2]]]],[11,R[307],R[136],E,96,[[["__d"]],[R[2]]]],[11,R[307],R[152],E,15,[[["__d"]],[R[2]]]],[11,R[307],E,E,14,[[["d"]],[R[2]]]],[11,R[307],R[267],E,160,[[["__d"]],[R[2]]]],[11,R[307],E,E,161,[[["__d"]],[R[2]]]],[11,R[307],E,E,162,[[["__d"]],[R[2]]]],[11,R[307],E,E,142,[[["__d"]],[R[2]]]],[11,R[307],E,E,163,[[["__d"]],[R[2]]]],[11,R[307],E,E,143,[[["__d"]],[R[2]]]],[11,R[307],E,E,144,[[["__d"]],[R[2]]]],[11,R[307],E,E,145,[[["__d"]],[R[2]]]],[11,R[307],E,E,146,[[["__d"]],[R[2]]]],[11,R[307],E,E,147,[[["__d"]],[R[2]]]],[11,R[307],E,E,148,[[["__d"]],[R[2]]]],[11,R[307],E,E,149,[[["__d"]],[R[2]]]],[11,R[307],E,E,150,[[["__d"]],[R[2]]]],[11,R[307],E,E,151,[[["__d"]],[R[2]]]],[11,R[307],E,E,152,[[["__d"]],[R[2]]]],[11,R[307],E,E,153,[[["__d"]],[R[2]]]],[11,R[307],E,E,154,[[["__d"]],[R[2]]]],[11,R[307],E,E,155,[[["__d"]],[R[2]]]],[11,R[307],E,E,156,[[["__d"]],[R[2]]]],[11,R[307],E,E,157,[[["__d"]],[R[2]]]],[11,R[307],E,E,158,[[["__d"]],[R[2]]]],[11,R[307],E,E,159,[[["__d"]],[R[2]]]],[11,R[307],R[268],E,168,[[["__d"]],[R[2]]]],[11,R[307],E,E,169,[[["__d"]],[R[2]]]],[11,R[307],R[232],E,188,[[["__d"]],[R[2]]]],[11,R[307],E,E,198,[[["__d"]],[R[2]]]],[11,R[307],E,E,189,[[["__d"]],[R[2]]]],[11,R[307],E,E,190,[[["__d"]],[R[2]]]],[11,R[307],E,E,199,[[["__d"]],[R[2]]]],[11,R[307],E,E,191,[[["__d"]],[R[2]]]],[11,R[307],E,E,200,[[["__d"]],[R[2]]]],[11,R[307],E,E,192,[[["__d"]],[R[2]]]],[11,R[307],E,E,193,[[["__d"]],[R[2]]]],[11,R[307],E,E,194,[[["__d"]],[R[2]]]],[11,R[307],E,E,195,[[["__d"]],[R[2]]]],[11,R[307],E,E,196,[[["__d"]],[R[2]]]]],"p":[[3,"DynFunc"],[3,R[82]],[3,"Module"],[3,"Func"],[3,R[308]],[3,"Token"],[3,"Features"],[3,R[309]],[3,R[310]],[3,R[311]],[4,R[312]],[4,R[313]],[4,R[314]],[4,R[315]],[3,"Memory"],[4,"Protect"],[8,"Compiler"],[8,R[316]],[8,"CacheGen"],[3,R[317]],[3,R[192]],[3,R[189]],[3,"WasmHash"],[3,R[318]],[3,R[319]],[3,"Artifact"],[4,R[320]],[4,"Error"],[3,R[321]],[3,R[322]],[3,R[323]],[3,R[324]],[3,R[325]],[4,"Event"],[4,R[326]],[8,R[327]],[8,R[328]],[8,R[329]],[8,R[330]],[4,R[70]],[4,R[71]],[4,R[72]],[4,R[73]],[4,R[74]],[4,R[75]],[4,"Error"],[4,R[331]],[4,R[332]],[4,R[333]],[4,R[334]],[4,R[335]],[3,R[336]],[3,R[337]],[4,"Context"],[4,"Export"],[3,"Global"],[3,R[338]],[3,R[339]],[3,R[340]],[8,R[341]],[8,R[342]],[3,R[343]],[3,R[344]],[3,R[345]],[8,"Loader"],[8,R[82]],[3,R[100]],[3,R[107]],[3,R[115]],[3,"Memory"],[3,R[346]],[3,R[347]],[3,R[348]],[3,R[349]],[4,R[350]],[4,R[351]],[4,R[352]],[3,"WasmPtr"],[8,"Atomic"],[3,R[353]],[3,R[354]],[3,R[355]],[3,R[356]],[3,R[357]],[3,R[358]],[3,R[359]],[3,R[360]],[3,R[361]],[4,R[362]],[4,R[363]],[3,R[132]],[3,R[364]],[3,R[130]],[3,R[365]],[3,"Iter"],[3,"IterMut"],[3,"Map"],[3,R[366]],[3,"IntoIter"],[8,R[367]],[3,"RawFd"],[3,R[206]],[3,"Table"],[4,"Element"],[4,R[368]],[3,R[369]],[4,R[370]],[3,R[161]],[3,R[371]],[3,R[372]],[3,"Wasm"],[3,"Host"],[3,"S1"],[3,"S2"],[3,"S3"],[3,"S4"],[3,"S5"],[3,"S6"],[3,"S7"],[3,"S8"],[3,"S9"],[3,"S10"],[3,"S11"],[3,"S12"],[3,"S13"],[3,"S14"],[3,"S15"],[3,"S16"],[3,"S17"],[3,"S18"],[3,"S19"],[3,"S20"],[3,"S21"],[3,"S22"],[3,"S23"],[3,"S24"],[3,"S25"],[3,"S26"],[4,R[373]],[8,R[374]],[8,R[375]],[8,R[376]],[3,R[377]],[3,R[378]],[3,R[379]],[3,R[380]],[3,"FuncSig"],[3,R[381]],[3,R[382]],[3,R[383]],[3,R[384]],[3,R[385]],[3,R[386]],[3,R[387]],[3,R[388]],[3,R[389]],[3,R[390]],[3,R[391]],[3,R[392]],[3,"SigIndex"],[4,"Type"],[4,"Value"],[4,R[393]],[4,R[394]],[4,R[395]],[8,R[396]],[8,R[397]],[8,R[398]],[3,"Pages"],[3,"Bytes"],[3,"Ctx"],[3,R[399]],[3,R[400]],[3,R[401]],[3,"Func"],[3,"FuncEnv"],[3,"FuncCtx"],[3,R[402]],[3,R[403]],[3,R[404]],[3,R[405]],[3,"SigId"],[3,R[206]],[3,R[406]],[3,R[407]],[3,R[408]],[3,R[222]],[3,R[409]],[3,R[410]],[3,R[411]],[3,R[412]],[3,R[413]],[3,R[414]],[3,R[415]],[3,R[416]],[3,R[417]],[3,R[418]],[3,R[419]],[4,R[420]],[4,R[421]],[4,R[422]],[4,"GPR"],[4,"XMM"],[4,R[423]],[3,"Defer"],[3,R[424]],[3,R[425]],[3,R[426]],[3,R[427]],[4,R[428]],[3,R[429]],[3,R[113]],[3,"Array"],[3,"Item"],[3,R[430]],[4,R[431]],[4,R[432]],[4,R[167]],[3,R[433]],[3,R[434]],[3,"S0"]]};
searchIndex["wasmer_runtime_core_tests"]={"doc":E,"i":[[5,"wat2wasm","wasmer_runtime_core_tests",R[1497],N,[[["s"]],[["error"],["vec",["u8"]],[R[2],["vec","error"]]]]],[5,R[1498],E,E,N,[[]]]],"p":[]};
searchIndex["wasmer_singlepass_backend"]={"doc":E,"i":[[3,R[330],R[482],E,N,N],[12,R[228],E,E,0,N],[12,R[460],E,E,0,N],[12,R[462],E,E,0,N],[12,"fsm",E,E,0,N],[12,"offset",E,E,0,N],[12,R[464],E,E,0,N],[12,R[463],E,E,0,N],[12,R[461],E,E,0,N],[12,R[467],E,E,0,N],[12,"locals",E,E,0,N],[12,R[468],E,E,0,N],[12,R[469],E,E,0,N],[12,R[470],E,E,0,N],[12,R[471],E,E,0,N],[12,R[484],E,E,0,N],[12,R[472],E,E,0,N],[12,"config",E,E,0,N],[12,R[473],E,E,0,N],[3,R[327],E,E,N,N],[12,R[465],E,E,1,N],[12,R[460],E,E,1,N],[12,R[462],E,E,1,N],[12,R[463],E,E,1,N],[12,R[464],E,E,1,N],[12,R[466],E,E,1,N],[12,"config",E,E,1,N],[0,"codegen_x64",E,E,N,N],[3,R[481],R[529],"Performs a System V call to `target` with…",N,N],[12,R[129],E,E,2,N],[3,"X64ModuleCodeGenerator",E,E,N,N],[12,R[465],E,E,1,N],[12,R[460],E,E,1,N],[12,R[462],E,E,1,N],[12,R[463],E,E,1,N],[12,R[464],E,E,1,N],[12,R[466],E,E,1,N],[12,"config",E,E,1,N],[3,"X64FunctionCode",E,E,N,N],[12,R[228],E,E,0,N],[12,R[460],E,E,0,N],[12,R[462],E,E,0,N],[12,"fsm",E,E,0,N],[12,"offset",E,E,0,N],[12,R[464],E,E,0,N],[12,R[463],E,E,0,N],[12,R[461],E,E,0,N],[12,R[467],E,E,0,N],[12,"locals",E,E,0,N],[12,R[468],E,E,0,N],[12,R[469],E,E,0,N],[12,R[470],E,E,0,N],[12,R[471],E,E,0,N],[12,R[484],E,E,0,N],[12,R[472],E,E,0,N],[12,"config",E,E,0,N],[12,R[473],E,E,0,N],[3,"FuncPtr",E,E,N,N],[12,"0",E,E,3,N],[3,R[558],E,E,N,N],[12,"code",E,E,4,N],[12,R[474],E,E,4,N],[12,R[475],E,E,4,N],[12,R[460],E,E,4,N],[12,R[461],E,E,4,N],[12,R[466],E,E,4,N],[12,"msm",E,E,4,N],[12,R[473],E,E,4,N],[3,R[559],E,"On-disk cache format. Offsets are relative to the start of…",N,N],[12,"code",E,"The executable image.",5,N],[12,R[474],E,"Offsets to the start of each function. Including…",5,N],[12,R[475],E,"Offsets to the start of each function after trampoline.",5,N],[12,R[466],E,"Number of imported functions.",5,N],[12,"msm",E,"Module state map.",5,N],[12,R[473],E,"An exception table that maps instruction offsets to…",5,N],[3,R[560],E,E,N,N],[12,"label",E,E,6,N],[12,"loop_like",E,E,6,N],[12,"if_else",E,E,6,N],[12,R[467],E,E,6,N],[12,"value_stack_depth",E,E,6,N],[12,"state",E,E,6,N],[12,"state_diff_id",E,E,6,N],[3,R[561],E,E,N,N],[12,"buffer",E,E,7,N],[3,R[562],E,E,N,N],[12,"message",E,E,8,N],[3,R[563],E,E,N,N],[12,R[476],E,E,9,N],[12,R[477],E,E,9,N],[12,R[478],E,E,9,N],[12,R[479],E,E,9,N],[4,R[570],E,E,N,N],[4,R[564],E,E,N,N],[13,"None",E,E,10,N],[13,"If",E,E,10,N],[13,"Else",E,E,10,N],[5,R[480],E,E,N,[[["type"]],["wptype"]]],[5,"get_location_released",E,E,N,[[[R[484]],[R[464]],[R[483]]],[R[483]]]],[5,"sort_call_movs",E,E,N,[[]]],[7,"ARCH",E,E,N,N],[7,R[1166],E,E,N,N],[7,R[481],E,E,N,N],[17,"INLINE_BREAKPOINT_SIZE_X86_SINGLEPASS",E,"Inline breakpoint size for x86-64.",N,N],[17,"INLINE_BREAKPOINT_SIZE_AARCH64_SINGLEPASS",E,"Inline breakpoint size for aarch64.",N,N],[17,"_IMPL_SERIALIZE_FOR_CacheImage",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_CacheImage",E,E,N,N],[17,"GEF32_LT_I32_MIN",E,"Greatest Exact Float (32 bits) less-than i32::MIN when…",N,N],[17,"LEF32_GT_I32_MAX",E,"Least Exact Float (32 bits) greater-than i32::MAX when…",N,N],[17,"GEF32_LT_I64_MIN",E,"Greatest Exact Float (32 bits) less-than i64::MIN when…",N,N],[17,"LEF32_GT_I64_MAX",E,"Least Exact Float (32 bits) greater-than i64::MAX when…",N,N],[17,"GEF32_LT_U32_MIN",E,"Greatest Exact Float (32 bits) less-than u32::MIN when…",N,N],[17,"LEF32_GT_U32_MAX",E,"Least Exact Float (32 bits) greater-than u32::MAX when…",N,N],[17,"GEF32_LT_U64_MIN",E,"Greatest Exact Float (32 bits) less-than u64::MIN when…",N,N],[17,"LEF32_GT_U64_MAX",E,"Least Exact Float (32 bits) greater-than u64::MAX when…",N,N],[17,"GEF64_LT_I32_MIN",E,"Greatest Exact Float (64 bits) less-than i32::MIN when…",N,N],[17,"LEF64_GT_I32_MAX",E,"Least Exact Float (64 bits) greater-than i32::MAX when…",N,N],[17,"GEF64_LT_I64_MIN",E,"Greatest Exact Float (64 bits) less-than i64::MIN when…",N,N],[17,"LEF64_GT_I64_MAX",E,"Least Exact Float (64 bits) greater-than i64::MAX when…",N,N],[17,"GEF64_LT_U32_MIN",E,"Greatest Exact Float (64 bits) less-than u32::MIN when…",N,N],[17,"LEF64_GT_U32_MAX",E,"Least Exact Float (64 bits) greater-than u32::MAX when…",N,N],[17,"GEF64_LT_U64_MIN",E,"Greatest Exact Float (64 bits) less-than u64::MIN when…",N,N],[17,"LEF64_GT_U64_MAX",E,"Least Exact Float (64 bits) greater-than u64::MAX when…",N,N],[11,"mark_trappable",R[482],E,0,[[[R[484]],[R[464]],[R[237]]]]],[11,"mark_range_with_exception_code",E,"Marks each address in the code range emitted by `f` with…",0,[[["fnonce"],[R[464]],[R[27]],[R[281]]],["r"]]],[11,"emit_relaxed_xdiv",E,"Moves `loc` to a valid location for `div`/`idiv`.",0,[[[R[483]],[R[27]],[R[484]],[R[464]],["size"],[R[237]]]]],[11,"emit_relaxed_zx_sx",E,"Moves `src` and `dst` to valid locations for…",0,[[[R[483]],[R[464]],["size"],[R[484]]],[[R[2],[R[485]]],[R[485]]]]],[11,"emit_relaxed_binop",E,"Moves `src` and `dst` to valid locations for generic…",0,[[[R[483]],[R[464]],["size"],[R[484]]]]],[11,"emit_relaxed_avx",E,R[486],0,[[[R[483]],[R[464]],[R[484]]],[[R[2],[R[485]]],[R[485]]]]],[11,"emit_relaxed_avx_base",E,R[486],0,[[[R[483]],[R[464]],[R[484]],["fnonce"]],[[R[2],[R[485]]],[R[485]]]]],[11,"emit_binop_i32",E,"I32 binary operation with both operands popped from the…",0,[[["vec"],[R[464]],[R[484]]]]],[11,"emit_binop_i64",E,"I64 binary operation with both operands popped from the…",0,[[["vec"],[R[464]],[R[484]]]]],[11,"emit_cmpop_i32_dynamic_b",E,"I32 comparison with `loc_b` from input.",0,[[["vec"],[R[483]],[R[464]],[R[484]],[R[487]]],[[R[2],[R[485]]],[R[485]]]]],[11,"emit_cmpop_i32",E,"I32 comparison with both operands popped from the virtual…",0,[[["vec"],[R[464]],[R[484]],[R[487]]],[[R[2],[R[485]]],[R[485]]]]],[11,"emit_cmpop_i64_dynamic_b",E,"I64 comparison with `loc_b` from input.",0,[[["vec"],[R[483]],[R[464]],[R[484]],[R[487]]],[[R[2],[R[485]]],[R[485]]]]],[11,"emit_cmpop_i64",E,"I64 comparison with both operands popped from the virtual…",0,[[["vec"],[R[464]],[R[484]],[R[487]]],[[R[2],[R[485]]],[R[485]]]]],[11,"emit_xcnt_i32",E,"I32 `lzcnt`/`tzcnt`/`popcnt` with operand popped from the…",0,[[["vec"],[R[464]],[R[484]]],[[R[2],[R[485]]],[R[485]]]]],[11,"emit_xcnt_i64",E,"I64 `lzcnt`/`tzcnt`/`popcnt` with operand popped from the…",0,[[["vec"],[R[464]],[R[484]]],[[R[2],[R[485]]],[R[485]]]]],[11,"emit_shift_i32",E,"I32 shift with both operands popped from the virtual stack.",0,[[["vec"],[R[464]],[R[484]]]]],[11,"emit_shift_i64",E,"I64 shift with both operands popped from the virtual stack.",0,[[["vec"],[R[464]],[R[484]]]]],[11,"emit_fp_binop_avx",E,R[488],0,[[["vec"],[R[464]],[R[484]]],[[R[2],[R[485]]],[R[485]]]]],[11,"emit_fp_cmpop_avx",E,"Floating point (AVX) comparison with both operands popped…",0,[[["vec"],[R[464]],[R[484]]],[[R[2],[R[485]]],[R[485]]]]],[11,"emit_fp_unop_avx",E,R[488],0,[[["vec"],[R[464]],[R[484]]],[[R[2],[R[485]]],[R[485]]]]],[11,"emit_call_sysv",E,"Emits a System V call sequence.",0,[[[R[464]],["iterator"],[R[484]],[R[26]],["fnonce"]],[[R[2],[R[485]]],[R[485]]]]],[11,"emit_call_sysv_label",E,"Emits a System V call sequence, specialized for labels as…",0,[[[R[464]],["dynamiclabel"],["iterator"],[R[484]],[R[26]]],[[R[2],[R[485]]],[R[485]]]]],[11,"emit_memory_op",E,R[489],0,[[[R[483]],[R[27]],[R[484]],["bool"],[R[464]],[R[490]],[R[491]],["usize"],["fnonce"],[R[28]]],[[R[2],[R[485]]],[R[485]]]]],[11,"emit_compare_and_swap",E,R[489],0,[[[R[483]],[R[27]],["fnonce"],[R[484]],[R[464]],[R[490]],[R[491]],["usize"],["size"],[R[28]]],[[R[2],[R[485]]],[R[485]]]]],[11,"emit_f32_int_conv_check",E,E,0,[[["f32"],["xmm"],[R[464]],[R[484]]]]],[11,"emit_f32_int_conv_check_trap",E,E,0,[[["f32"],["xmm"],[R[464]],[R[27]],[R[484]]]]],[11,"emit_f32_int_conv_check_sat",E,E,0,[[["f32"],["xmm"],[R[464]],[R[26]],["fnonce"],[R[484]]]]],[11,"emit_f64_int_conv_check",E,E,0,[[["xmm"],[R[464]],[R[484]],["f64"]]]],[11,"emit_f64_int_conv_check_trap",E,E,0,[[["xmm"],[R[464]],[R[27]],[R[484]],["f64"]]]],[11,"emit_f64_int_conv_check_sat",E,E,0,[[[R[26]],["xmm"],[R[464]],["fnonce"],[R[484]],["f64"]]]],[11,"get_state_diff",E,E,0,[[[R[484]],[R[237]]],["usize"]]],[0,"emitter_x64",E,E,N,N],[4,"GPR",R[530],R[230],N,N],[13,"RAX",E,R[492],11,N],[13,"RCX",E,R[493],11,N],[13,"RDX",E,R[494],11,N],[13,"RBX",E,R[495],11,N],[13,"RSP",E,R[496],11,N],[13,"RBP",E,R[497],11,N],[13,"RSI",E,R[498],11,N],[13,"RDI",E,R[499],11,N],[13,"R8",E,R[500],11,N],[13,"R9",E,R[501],11,N],[13,"R10",E,R[502],11,N],[13,"R11",E,R[503],11,N],[13,"R12",E,R[504],11,N],[13,"R13",E,R[505],11,N],[13,"R14",E,R[506],11,N],[13,"R15",E,R[507],11,N],[4,"XMM",E,R[508],N,N],[13,"XMM0",E,R[509],12,N],[13,"XMM1",E,R[510],12,N],[13,"XMM2",E,R[511],12,N],[13,"XMM3",E,R[512],12,N],[13,"XMM4",E,R[513],12,N],[13,"XMM5",E,R[514],12,N],[13,"XMM6",E,R[515],12,N],[13,"XMM7",E,R[516],12,N],[13,"XMM8",E,R[517],12,N],[13,"XMM9",E,R[518],12,N],[13,"XMM10",E,R[519],12,N],[13,"XMM11",E,R[520],12,N],[13,"XMM12",E,R[521],12,N],[13,"XMM13",E,R[522],12,N],[13,"XMM14",E,R[523],12,N],[13,"XMM15",E,R[524],12,N],[4,"Location",E,E,N,N],[13,"Imm8",E,E,13,N],[13,"Imm32",E,E,13,N],[13,"Imm64",E,E,13,N],[13,"Imm128",E,E,13,N],[13,"GPR",E,E,13,N],[13,"XMM",E,E,13,N],[13,"Memory",E,E,13,N],[4,R[565],E,E,N,N],[13,"None",E,E,14,N],[13,"Above",E,E,14,N],[13,"AboveEqual",E,E,14,N],[13,"Below",E,E,14,N],[13,"BelowEqual",E,E,14,N],[13,"Greater",E,E,14,N],[13,"GreaterEqual",E,E,14,N],[13,"Less",E,E,14,N],[13,"LessEqual",E,E,14,N],[13,"Equal",E,E,14,N],[13,"NotEqual",E,E,14,N],[13,"Signed",E,E,14,N],[4,"Size",E,E,N,N],[13,"S8",E,E,15,N],[13,"S16",E,E,15,N],[13,"S32",E,E,15,N],[13,"S64",E,E,15,N],[4,R[566],E,E,N,N],[13,"XMM",E,E,16,N],[13,"Memory",E,E,16,N],[4,R[567],E,E,N,N],[13,"GPR",E,E,17,N],[13,"Memory",E,E,17,N],[5,"_dummy",E,E,N,[[[R[464]]]]],[8,"Emitter",E,E,N,N],[16,"Label",E,E,18,N],[16,"Offset",E,E,18,N],[10,"get_label",E,E,18,[[["self"]]]],[10,"get_offset",E,E,18,[[["self"]]]],[10,"get_jmp_instr_size",E,E,18,[[["self"]],["u8"]]],[10,"emit_u64",E,E,18,[[["self"],["u64"]]]],[10,"emit_label",E,E,18,[[["self"]]]],[10,"emit_nop",E,E,18,[[["self"]]]],[10,"emit_mov",E,E,18,[[["self"],[R[483]],["size"]]]],[10,"emit_lea",E,E,18,[[["self"],[R[483]],["size"]]]],[10,"emit_lea_label",E,E,18,[[["self"],[R[483]]]]],[10,"emit_cdq",E,E,18,[[["self"]]]],[10,"emit_cqo",E,E,18,[[["self"]]]],[10,"emit_xor",E,E,18,[[["self"],[R[483]],["size"]]]],[10,"emit_jmp",E,E,18,[[["self"],[R[487]]]]],[10,"emit_jmp_location",E,E,18,[[["self"],[R[483]]]]],[10,"emit_conditional_trap",E,E,18,[[["self"],[R[487]]]]],[10,"emit_set",E,E,18,[[["self"],[R[487]],["gpr"]]]],[10,"emit_push",E,E,18,[[["self"],[R[483]],["size"]]]],[10,"emit_pop",E,E,18,[[["self"],[R[483]],["size"]]]],[10,"emit_cmp",E,E,18,[[["self"],[R[483]],["size"]]]],[10,"emit_add",E,E,18,[[["self"],[R[483]],["size"]]]],[10,"emit_sub",E,E,18,[[["self"],[R[483]],["size"]]]],[10,"emit_neg",E,E,18,[[["self"],[R[483]],["size"]]]],[10,"emit_imul",E,E,18,[[["self"],[R[483]],["size"]]]],[10,"emit_imul_imm32_gpr64",E,E,18,[[["self"],["u32"],["gpr"]]]],[10,"emit_div",E,E,18,[[["self"],[R[483]],["size"]]]],[10,"emit_idiv",E,E,18,[[["self"],[R[483]],["size"]]]],[10,"emit_shl",E,E,18,[[["self"],[R[483]],["size"]]]],[10,"emit_shr",E,E,18,[[["self"],[R[483]],["size"]]]],[10,"emit_sar",E,E,18,[[["self"],[R[483]],["size"]]]],[10,"emit_rol",E,E,18,[[["self"],[R[483]],["size"]]]],[10,"emit_ror",E,E,18,[[["self"],[R[483]],["size"]]]],[10,"emit_and",E,E,18,[[["self"],[R[483]],["size"]]]],[10,"emit_or",E,E,18,[[["self"],[R[483]],["size"]]]],[10,"emit_bsr",E,E,18,[[["self"],[R[483]],["size"]]]],[10,"emit_bsf",E,E,18,[[["self"],[R[483]],["size"]]]],[10,"emit_popcnt",E,E,18,[[["self"],[R[483]],["size"]]]],[10,"emit_movzx",E,E,18,[[["self"],[R[483]],["size"]]]],[10,"emit_movsx",E,E,18,[[["self"],[R[483]],["size"]]]],[10,"emit_xchg",E,E,18,[[["self"],[R[483]],["size"]]]],[10,"emit_lock_xadd",E,E,18,[[["self"],[R[483]],["size"]]]],[10,"emit_lock_cmpxchg",E,E,18,[[["self"],[R[483]],["size"]]]],[10,"emit_btc_gpr_imm8_32",E,E,18,[[["self"],["gpr"],["u8"]]]],[10,"emit_btc_gpr_imm8_64",E,E,18,[[["self"],["gpr"],["u8"]]]],[10,"emit_cmovae_gpr_32",E,E,18,[[["self"],["gpr"]]]],[10,"emit_cmovae_gpr_64",E,E,18,[[["self"],["gpr"]]]],[10,"emit_vmovaps",E,E,18,[[["self"],[R[525]]]]],[10,"emit_vmovapd",E,E,18,[[["self"],[R[525]]]]],[10,"emit_vxorps",E,E,18,[[["self"],["xmm"],[R[525]]]]],[10,"emit_vxorpd",E,E,18,[[["self"],["xmm"],[R[525]]]]],[10,"emit_vaddss",E,E,18,[[["self"],["xmm"],[R[525]]]]],[10,"emit_vaddsd",E,E,18,[[["self"],["xmm"],[R[525]]]]],[10,"emit_vsubss",E,E,18,[[["self"],["xmm"],[R[525]]]]],[10,"emit_vsubsd",E,E,18,[[["self"],["xmm"],[R[525]]]]],[10,"emit_vmulss",E,E,18,[[["self"],["xmm"],[R[525]]]]],[10,"emit_vmulsd",E,E,18,[[["self"],["xmm"],[R[525]]]]],[10,"emit_vdivss",E,E,18,[[["self"],["xmm"],[R[525]]]]],[10,"emit_vdivsd",E,E,18,[[["self"],["xmm"],[R[525]]]]],[10,"emit_vmaxss",E,E,18,[[["self"],["xmm"],[R[525]]]]],[10,"emit_vmaxsd",E,E,18,[[["self"],["xmm"],[R[525]]]]],[10,"emit_vminss",E,E,18,[[["self"],["xmm"],[R[525]]]]],[10,"emit_vminsd",E,E,18,[[["self"],["xmm"],[R[525]]]]],[10,"emit_vcmpeqss",E,E,18,[[["self"],["xmm"],[R[525]]]]],[10,"emit_vcmpeqsd",E,E,18,[[["self"],["xmm"],[R[525]]]]],[10,"emit_vcmpneqss",E,E,18,[[["self"],["xmm"],[R[525]]]]],[10,"emit_vcmpneqsd",E,E,18,[[["self"],["xmm"],[R[525]]]]],[10,"emit_vcmpltss",E,E,18,[[["self"],["xmm"],[R[525]]]]],[10,"emit_vcmpltsd",E,E,18,[[["self"],["xmm"],[R[525]]]]],[10,"emit_vcmpless",E,E,18,[[["self"],["xmm"],[R[525]]]]],[10,"emit_vcmplesd",E,E,18,[[["self"],["xmm"],[R[525]]]]],[10,"emit_vcmpgtss",E,E,18,[[["self"],["xmm"],[R[525]]]]],[10,"emit_vcmpgtsd",E,E,18,[[["self"],["xmm"],[R[525]]]]],[10,"emit_vcmpgess",E,E,18,[[["self"],["xmm"],[R[525]]]]],[10,"emit_vcmpgesd",E,E,18,[[["self"],["xmm"],[R[525]]]]],[10,"emit_vcmpunordss",E,E,18,[[["self"],["xmm"],[R[525]]]]],[10,"emit_vcmpunordsd",E,E,18,[[["self"],["xmm"],[R[525]]]]],[10,"emit_vcmpordss",E,E,18,[[["self"],["xmm"],[R[525]]]]],[10,"emit_vcmpordsd",E,E,18,[[["self"],["xmm"],[R[525]]]]],[10,"emit_vsqrtss",E,E,18,[[["self"],["xmm"],[R[525]]]]],[10,"emit_vsqrtsd",E,E,18,[[["self"],["xmm"],[R[525]]]]],[10,"emit_vroundss_nearest",E,E,18,[[["self"],["xmm"],[R[525]]]]],[10,"emit_vroundss_floor",E,E,18,[[["self"],["xmm"],[R[525]]]]],[10,"emit_vroundss_ceil",E,E,18,[[["self"],["xmm"],[R[525]]]]],[10,"emit_vroundss_trunc",E,E,18,[[["self"],["xmm"],[R[525]]]]],[10,"emit_vroundsd_nearest",E,E,18,[[["self"],["xmm"],[R[525]]]]],[10,"emit_vroundsd_floor",E,E,18,[[["self"],["xmm"],[R[525]]]]],[10,"emit_vroundsd_ceil",E,E,18,[[["self"],["xmm"],[R[525]]]]],[10,"emit_vroundsd_trunc",E,E,18,[[["self"],["xmm"],[R[525]]]]],[10,"emit_vcvtss2sd",E,E,18,[[["self"],["xmm"],[R[525]]]]],[10,"emit_vcvtsd2ss",E,E,18,[[["self"],["xmm"],[R[525]]]]],[10,"emit_ucomiss",E,E,18,[[["self"],[R[525]],["xmm"]]]],[10,"emit_ucomisd",E,E,18,[[["self"],[R[525]],["xmm"]]]],[10,"emit_cvttss2si_32",E,E,18,[[["self"],[R[525]],["gpr"]]]],[10,"emit_cvttss2si_64",E,E,18,[[["self"],[R[525]],["gpr"]]]],[10,"emit_cvttsd2si_32",E,E,18,[[["self"],[R[525]],["gpr"]]]],[10,"emit_cvttsd2si_64",E,E,18,[[["self"],[R[525]],["gpr"]]]],[10,"emit_vcvtsi2ss_32",E,E,18,[[["self"],["xmm"],[R[526]]]]],[10,"emit_vcvtsi2ss_64",E,E,18,[[["self"],["xmm"],[R[526]]]]],[10,"emit_vcvtsi2sd_32",E,E,18,[[["self"],["xmm"],[R[526]]]]],[10,"emit_vcvtsi2sd_64",E,E,18,[[["self"],["xmm"],[R[526]]]]],[10,"emit_vblendvps",E,E,18,[[["self"],["xmm"],[R[525]]]]],[10,"emit_vblendvpd",E,E,18,[[["self"],["xmm"],[R[525]]]]],[10,"emit_test_gpr_64",E,E,18,[[["self"],["gpr"]]]],[10,"emit_ud2",E,E,18,[[["self"]]]],[10,"emit_ret",E,E,18,[[["self"]]]],[10,"emit_call_label",E,E,18,[[["self"]]]],[10,"emit_call_location",E,E,18,[[["self"],[R[483]]]]],[10,"emit_bkpt",E,E,18,[[["self"]]]],[10,"emit_host_redirection",E,E,18,[[["self"],["gpr"]]]],[10,"emit_inline_breakpoint",E,E,18,[[["self"],[R[527]]]]],[11,"arch_has_itruncf",E,E,18,[[["self"]],["bool"]]],[11,"arch_emit_i32_trunc_sf32",E,E,18,[[["self"],["xmm"],["gpr"]]]],[11,"arch_emit_i32_trunc_sf64",E,E,18,[[["self"],["xmm"],["gpr"]]]],[11,"arch_emit_i32_trunc_uf32",E,E,18,[[["self"],["xmm"],["gpr"]]]],[11,"arch_emit_i32_trunc_uf64",E,E,18,[[["self"],["xmm"],["gpr"]]]],[11,"arch_emit_i64_trunc_sf32",E,E,18,[[["self"],["xmm"],["gpr"]]]],[11,"arch_emit_i64_trunc_sf64",E,E,18,[[["self"],["xmm"],["gpr"]]]],[11,"arch_emit_i64_trunc_uf32",E,E,18,[[["self"],["xmm"],["gpr"]]]],[11,"arch_emit_i64_trunc_uf64",E,E,18,[[["self"],["xmm"],["gpr"]]]],[11,"arch_has_fconverti",E,E,18,[[["self"]],["bool"]]],[11,"arch_emit_f32_convert_si32",E,E,18,[[["self"],["xmm"],["gpr"]]]],[11,"arch_emit_f32_convert_si64",E,E,18,[[["self"],["xmm"],["gpr"]]]],[11,"arch_emit_f32_convert_ui32",E,E,18,[[["self"],["xmm"],["gpr"]]]],[11,"arch_emit_f32_convert_ui64",E,E,18,[[["self"],["xmm"],["gpr"]]]],[11,"arch_emit_f64_convert_si32",E,E,18,[[["self"],["xmm"],["gpr"]]]],[11,"arch_emit_f64_convert_si64",E,E,18,[[["self"],["xmm"],["gpr"]]]],[11,"arch_emit_f64_convert_ui32",E,E,18,[[["self"],["xmm"],["gpr"]]]],[11,"arch_emit_f64_convert_ui64",E,E,18,[[["self"],["xmm"],["gpr"]]]],[11,"arch_has_fneg",E,E,18,[[["self"]],["bool"]]],[11,"arch_emit_f32_neg",E,E,18,[[["self"],["xmm"]]]],[11,"arch_emit_f64_neg",E,E,18,[[["self"],["xmm"]]]],[11,"arch_has_xzcnt",E,E,18,[[["self"]],["bool"]]],[11,"arch_emit_lzcnt",E,E,18,[[["self"],[R[483]],["size"]]]],[11,"arch_emit_tzcnt",E,E,18,[[["self"],[R[483]],["size"]]]],[11,"arch_supports_canonicalize_nan",E,E,18,[[["self"]],["bool"]]],[11,"arch_requires_indirect_call_trampoline",E,E,18,[[["self"]],["bool"]]],[11,"arch_emit_indirect_call_with_trampoline",E,E,18,[[["self"],[R[483]]]]],[11,"arch_emit_entry_trampoline",E,E,18,[[["self"]]]],[0,R[484],R[482],E,N,N],[3,R[568],R[531],E,N,N],[12,"0",E,E,19,N],[3,"Machine",E,E,N,N],[12,"used_gprs",E,E,20,N],[12,"used_xmms",E,E,20,N],[12,"stack_offset",E,E,20,N],[12,"save_area_offset",E,E,20,N],[12,"state",E,E,20,N],[12,R[478],E,E,20,N],[11,"new",E,E,20,[[],["self"]]],[11,"get_stack_offset",E,E,20,[[["self"]],["usize"]]],[11,"get_used_gprs",E,E,20,[[["self"]],[["vec",["gpr"]],["gpr"]]]],[11,"get_used_xmms",E,E,20,[[["self"]],[["xmm"],["vec",["xmm"]]]]],[11,"get_vmctx_reg",E,E,20,[[],["gpr"]]],[11,"pick_gpr",E,"Picks an unused general purpose register for…",20,[[["self"]],[["gpr"],[R[26],["gpr"]]]]],[11,"pick_temp_gpr",E,"Picks an unused general purpose register for internal…",20,[[["self"]],[["gpr"],[R[26],["gpr"]]]]],[11,"acquire_temp_gpr",E,"Acquires a temporary GPR.",20,[[["self"]],[["gpr"],[R[26],["gpr"]]]]],[11,"release_temp_gpr",E,"Releases a temporary GPR.",20,[[["self"],["gpr"]]]],[11,"reserve_unused_temp_gpr",E,"Specify that a given register is in use.",20,[[["self"],["gpr"]],["gpr"]]],[11,"pick_xmm",E,"Picks an unused XMM register.",20,[[["self"]],[["xmm"],[R[26],["xmm"]]]]],[11,"pick_temp_xmm",E,"Picks an unused XMM register for internal temporary use.",20,[[["self"]],[["xmm"],[R[26],["xmm"]]]]],[11,"acquire_temp_xmm",E,"Acquires a temporary XMM register.",20,[[["self"]],[["xmm"],[R[26],["xmm"]]]]],[11,"release_temp_xmm",E,"Releases a temporary XMM register.",20,[[["self"],["xmm"]]]],[11,"acquire_locations",E,"Acquires locations from the machine state.",20,[[["self"],["e"],["bool"]],["smallvec"]]],[11,"release_locations",E,"Releases locations used for stack value.",20,[[["self"],["e"]]]],[11,"release_locations_only_regs",E,E,20,[[["self"]]]],[11,"release_locations_only_stack",E,E,20,[[["self"],["e"]]]],[11,"release_locations_only_osr_state",E,E,20,[[["self"],["usize"]]]],[11,"release_locations_keep_state",E,E,20,[[["self"],["e"]]]],[11,"init_locals",E,E,20,[[["self"],["e"],["usize"]],[["vec",[R[483]]],[R[483]]]]],[11,"finalize_locals",E,E,20,[[["self"],["e"]]]],[11,"get_param_location",E,E,20,[[["usize"]],[R[483]]]],[0,"protect_unix",R[482],R[1167],N,N],[4,R[569],R[532],E,N,N],[13,"Trap",E,E,21,N],[13,"Error",E,E,21,N],[5,R[1168],E,E,N,[[]]],[5,R[1169],E,E,N,[[[R[26],[R[25]]],[R[25]]],[[R[2],[R[528]]],[R[528]]]]],[5,"throw",E,E,N,[[["box",["any"]],["any"]]]],[17,R[1170],E,E,N,N],[6,"SinglePassCompiler",R[482],E,N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[3],E,E,0,[[[U]],[R[2]]]],[11,R[4],E,E,0,[[],[R[2]]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[R[8]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[3],E,E,1,[[[U]],[R[2]]]],[11,R[4],E,E,1,[[],[R[2]]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[R[8]]]],[11,"from",R[529],E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[3],E,E,2,[[[U]],[R[2]]]],[11,R[4],E,E,2,[[],[R[2]]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[R[8]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[247],E,E,3,[[["self"]],[T]]],[11,R[246],E,E,3,[[["self"],[T]]]],[11,R[3],E,E,3,[[[U]],[R[2]]]],[11,R[4],E,E,3,[[],[R[2]]]],[11,R[5],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"]],[R[8]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[3],E,E,4,[[[U]],[R[2]]]],[11,R[4],E,E,4,[[],[R[2]]]],[11,R[5],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[7],E,E,4,[[["self"]],[R[8]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[247],E,E,5,[[["self"]],[T]]],[11,R[246],E,E,5,[[["self"],[T]]]],[11,R[3],E,E,5,[[[U]],[R[2]]]],[11,R[4],E,E,5,[[],[R[2]]]],[11,R[5],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[7],E,E,5,[[["self"]],[R[8]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[3],E,E,6,[[[U]],[R[2]]]],[11,R[4],E,E,6,[[],[R[2]]]],[11,R[5],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[7],E,E,6,[[["self"]],[R[8]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[3],E,E,7,[[[U]],[R[2]]]],[11,R[4],E,E,7,[[],[R[2]]]],[11,R[5],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[7],E,E,7,[[["self"]],[R[8]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[3],E,E,8,[[[U]],[R[2]]]],[11,R[4],E,E,8,[[],[R[2]]]],[11,R[5],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[7],E,E,8,[[["self"]],[R[8]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[247],E,E,9,[[["self"]],[T]]],[11,R[246],E,E,9,[[["self"],[T]]]],[11,R[3],E,E,9,[[[U]],[R[2]]]],[11,R[4],E,E,9,[[],[R[2]]]],[11,R[5],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[T]]],[11,R[7],E,E,9,[[["self"]],[R[8]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[3],E,E,22,[[[U]],[R[2]]]],[11,R[4],E,E,22,[[],[R[2]]]],[11,R[5],E,E,22,[[["self"]],[T]]],[11,R[6],E,E,22,[[["self"]],[T]]],[11,R[7],E,E,22,[[["self"]],[R[8]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[247],E,E,10,[[["self"]],[T]]],[11,R[246],E,E,10,[[["self"],[T]]]],[11,R[3],E,E,10,[[[U]],[R[2]]]],[11,R[4],E,E,10,[[],[R[2]]]],[11,R[5],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[T]]],[11,R[7],E,E,10,[[["self"]],[R[8]]]],[11,"from",R[530],E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[247],E,E,11,[[["self"]],[T]]],[11,R[246],E,E,11,[[["self"],[T]]]],[11,R[3],E,E,11,[[[U]],[R[2]]]],[11,R[4],E,E,11,[[],[R[2]]]],[11,R[5],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[T]]],[11,R[7],E,E,11,[[["self"]],[R[8]]]],[11,R[248],E,E,11,[[["self"],["k"]],["bool"]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[247],E,E,12,[[["self"]],[T]]],[11,R[246],E,E,12,[[["self"],[T]]]],[11,R[3],E,E,12,[[[U]],[R[2]]]],[11,R[4],E,E,12,[[],[R[2]]]],[11,R[5],E,E,12,[[["self"]],[T]]],[11,R[6],E,E,12,[[["self"]],[T]]],[11,R[7],E,E,12,[[["self"]],[R[8]]]],[11,R[248],E,E,12,[[["self"],["k"]],["bool"]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[247],E,E,13,[[["self"]],[T]]],[11,R[246],E,E,13,[[["self"],[T]]]],[11,R[3],E,E,13,[[[U]],[R[2]]]],[11,R[4],E,E,13,[[],[R[2]]]],[11,R[5],E,E,13,[[["self"]],[T]]],[11,R[6],E,E,13,[[["self"]],[T]]],[11,R[7],E,E,13,[[["self"]],[R[8]]]],[11,R[248],E,E,13,[[["self"],["k"]],["bool"]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[247],E,E,14,[[["self"]],[T]]],[11,R[246],E,E,14,[[["self"],[T]]]],[11,R[3],E,E,14,[[[U]],[R[2]]]],[11,R[4],E,E,14,[[],[R[2]]]],[11,R[5],E,E,14,[[["self"]],[T]]],[11,R[6],E,E,14,[[["self"]],[T]]],[11,R[7],E,E,14,[[["self"]],[R[8]]]],[11,R[248],E,E,14,[[["self"],["k"]],["bool"]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[247],E,E,15,[[["self"]],[T]]],[11,R[246],E,E,15,[[["self"],[T]]]],[11,R[3],E,E,15,[[[U]],[R[2]]]],[11,R[4],E,E,15,[[],[R[2]]]],[11,R[5],E,E,15,[[["self"]],[T]]],[11,R[6],E,E,15,[[["self"]],[T]]],[11,R[7],E,E,15,[[["self"]],[R[8]]]],[11,R[248],E,E,15,[[["self"],["k"]],["bool"]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[247],E,E,16,[[["self"]],[T]]],[11,R[246],E,E,16,[[["self"],[T]]]],[11,R[3],E,E,16,[[[U]],[R[2]]]],[11,R[4],E,E,16,[[],[R[2]]]],[11,R[5],E,E,16,[[["self"]],[T]]],[11,R[6],E,E,16,[[["self"]],[T]]],[11,R[7],E,E,16,[[["self"]],[R[8]]]],[11,R[248],E,E,16,[[["self"],["k"]],["bool"]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[247],E,E,17,[[["self"]],[T]]],[11,R[246],E,E,17,[[["self"],[T]]]],[11,R[3],E,E,17,[[[U]],[R[2]]]],[11,R[4],E,E,17,[[],[R[2]]]],[11,R[5],E,E,17,[[["self"]],[T]]],[11,R[6],E,E,17,[[["self"]],[T]]],[11,R[7],E,E,17,[[["self"]],[R[8]]]],[11,"from",R[531],E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[3],E,E,19,[[[U]],[R[2]]]],[11,R[4],E,E,19,[[],[R[2]]]],[11,R[5],E,E,19,[[["self"]],[T]]],[11,R[6],E,E,19,[[["self"]],[T]]],[11,R[7],E,E,19,[[["self"]],[R[8]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[3],E,E,20,[[[U]],[R[2]]]],[11,R[4],E,E,20,[[],[R[2]]]],[11,R[5],E,E,20,[[["self"]],[T]]],[11,R[6],E,E,20,[[["self"]],[T]]],[11,R[7],E,E,20,[[["self"]],[R[8]]]],[11,"from",R[532],E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[3],E,E,21,[[[U]],[R[2]]]],[11,R[4],E,E,21,[[],[R[2]]]],[11,R[5],E,E,21,[[["self"]],[T]]],[11,R[6],E,E,21,[[["self"]],[T]]],[11,R[7],E,E,21,[[["self"]],[R[8]]]],[11,"fmt",R[530],E,12,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"fmt",E,E,11,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,"hash",E,E,12,[[["self"],["__h"]]]],[11,"hash",E,E,11,[[["self"],["__h"]]]],[11,R[303],E,E,12,[[["self"]]]],[11,R[303],E,E,11,[[["self"]]]],[11,"eq",E,E,12,[[["self"],["xmm"]],["bool"]]],[11,"eq",E,E,11,[[["self"],["gpr"]],["bool"]]],[11,"clone",E,E,12,[[["self"]],["xmm"]]],[11,"clone",E,E,11,[[["self"]],["gpr"]]],[11,R[282],E,E,12,[[["self"],["xmm"]],[[R[280]],[R[26],[R[280]]]]]],[11,R[282],E,E,11,[[["self"],["gpr"]],[[R[280]],[R[26],[R[280]]]]]],[11,"cmp",E,E,12,[[["self"],["xmm"]],[R[280]]]],[11,"cmp",E,E,11,[[["self"],["gpr"]],[R[280]]]],[11,"cmp",E,E,13,[[["self"],[R[483]]],[R[280]]]],[11,"cmp",E,E,15,[[["self"],["size"]],[R[280]]]],[11,R[282],E,E,13,[[["self"],[R[483]]],[[R[26],[R[280]]],[R[280]]]]],[11,"lt",E,E,13,[[["self"],[R[483]]],["bool"]]],[11,"le",E,E,13,[[["self"],[R[483]]],["bool"]]],[11,"gt",E,E,13,[[["self"],[R[483]]],["bool"]]],[11,"ge",E,E,13,[[["self"],[R[483]]],["bool"]]],[11,R[282],E,E,15,[[["self"],["size"]],[[R[26],[R[280]]],[R[280]]]]],[11,"clone",R[529],E,3,[[["self"]],["funcptr"]]],[11,"clone",E,E,5,[[["self"]],["cacheimage"]]],[11,"clone",E,E,10,[[["self"]],["ifelsestate"]]],[11,"clone",E,E,9,[[["self"]],[R[490]]]],[11,"clone",R[530],E,13,[[["self"]],[R[483]]]],[11,"clone",E,E,14,[[["self"]],[R[487]]]],[11,"clone",E,E,15,[[["self"]],["size"]]],[11,"clone",E,E,16,[[["self"]],[R[525]]]],[11,"clone",E,E,17,[[["self"]],[R[526]]]],[11,"eq",E,E,13,[[["self"],[R[483]]],["bool"]]],[11,"ne",E,E,13,[[["self"],[R[483]]],["bool"]]],[11,"eq",E,E,14,[[["self"],[R[487]]],["bool"]]],[11,"eq",E,E,15,[[["self"],["size"]],["bool"]]],[11,"eq",E,E,16,[[["self"],[R[525]]],["bool"]]],[11,"ne",E,E,16,[[["self"],[R[525]]],["bool"]]],[11,R[303],E,E,13,[[["self"]]]],[11,R[303],E,E,14,[[["self"]]]],[11,R[303],E,E,15,[[["self"]]]],[11,R[303],E,E,16,[[["self"]]]],[11,"deref",R[529],E,2,[[["self"]]]],[11,"fmt",E,E,3,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,5,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,6,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,10,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,8,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,9,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",R[530],E,13,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,14,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,15,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,16,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,17,[[["self"],[R[304]]],[R[2]]]],[11,"hash",E,E,13,[[["self"],["__h"]]]],[11,R[306],R[529],E,5,[[["self"],["__s"]],[R[2]]]],[11,R[307],E,E,5,[[["__d"]],[R[2]]]],[11,R[305],E,E,2,[[["self"]]]],[11,"get_func",E,E,4,[[["self"],[R[39]],[R[28]]],[[R[26],[R[89]]],[R[89],["func"]]]]],[11,R[533],E,E,4,[[["self"]],[[R[26],[R[24]]],[R[24]]]]],[11,R[534],E,E,4,[[["self"]],[[R[26],[R[25]]],[R[25]]]]],[11,R[535],E,E,4,[[["self"]],[[R[27]],[R[26],[R[27]]]]]],[11,R[536],E,E,4,[[["self"],["usize"]],["bool"]]],[11,R[162],E,E,4,[[["self"],[R[40]],[R[28]]],[[R[26],["wasm"]],["wasm"]]]],[11,R[537],E,E,4,[[["self"],["box",["any"]],["any"]]]],[11,"get_code",E,E,4,[[["self"]],[R[26]]]],[11,R[538],E,E,4,[[["self"]],[["vec",["usize"]],[R[26],["vec"]]]]],[11,R[539],E,E,4,[[["self"]],[["vec",["usize"]],[R[26],["vec"]]]]],[11,R[540],E,R[541],4,[[["self"],[R[29]]],[["usize"],[R[26],["usize"]]]]],[11,R[542],E,R[543],4,[[["self"],[R[29]]],[[R[30]],[R[26],[R[30]]]]]],[11,R[544],E,E,7,[[["self"]],[[R[2],[R[18]]],[R[18]]]]],[11,"new",R[482],E,1,[[],["x64modulecodegenerator"]]],[11,R[545],E,"Singlepass does validation as it compiles",1,[[],["bool"]]],[11,R[238],E,E,1,[[],["str"]]],[11,R[546],E,E,1,[[[R[0]],[R[26],[R[0]]]],["self"]]],[11,R[547],E,E,1,[[["self"],[R[28]]],[[R[2],[R[485]]],[R[485]]]]],[11,R[548],E,E,1,[[["self"],["rwlock",[R[28]]],["arc",["rwlock"]]],[[R[2],[R[549],R[485]]],[R[549]],[R[485]]]]],[11,R[58],E,E,1,[[[R[28]]],[[R[2],[R[485]]],[R[485]]]]],[11,R[550],E,E,1,[[["self"],[R[90]],["map",[R[40],R[90]]],[R[40]]],[[R[2],[R[485]]],[R[485]]]]],[11,R[551],E,E,1,[[["self"],["map",[R[54],R[40]]],[R[54]],[R[40]]],[[R[2],[R[485]]],[R[485]]]]],[11,R[552],E,E,1,[[["self"]],[[R[2],[R[485]]],[R[485]]]]],[11,R[553],E,E,1,[[["self"],[R[21]]],[[R[2],[R[485]]],[R[485]]]]],[11,R[55],E,E,1,[[["token"],[R[23]]],[[R[22]],[R[2],[R[22],R[18]]],[R[18]]]]],[11,R[554],E,E,0,[[["self"],["wptype"]],[[R[2],[R[485]]],[R[485]]]]],[11,R[555],E,E,0,[[["self"],["wptype"]],[[R[2],[R[485]]],[R[485]]]]],[11,R[556],E,E,0,[[["self"],["usize"],["wptype"]],[[R[2],[R[485]]],[R[485]]]]],[11,R[557],E,E,0,[[["self"],[R[28]]],[[R[2],[R[485]]],[R[485]]]]],[11,R[58],E,E,0,[[["self"]],[[R[2],[R[485]]],[R[485]]]]],[11,R[56],E,E,0,[[["self"],[R[28]],["event"]],[[R[2],[R[485]]],[R[485]]]]]],"p":[[3,R[330]],[3,R[327]],[3,R[481]],[3,"FuncPtr"],[3,R[558]],[3,R[559]],[3,R[560]],[3,R[561]],[3,R[562]],[3,R[563]],[4,R[564]],[4,"GPR"],[4,"XMM"],[4,"Location"],[4,R[565]],[4,"Size"],[4,R[566]],[4,R[567]],[8,"Emitter"],[3,R[568]],[3,"Machine"],[4,R[569]],[4,R[570]]]};
searchIndex["wasmer_wasi"]={"doc":"Wasmer's WASI implementation","i":[[3,"ExitCode",R[622],"This is returned in the Box RuntimeError::Error variant.…",N,N],[12,"code",E,E,0,N],[4,R[800],E,R[801],N,N],[13,R[802],E,R[803],1,N],[13,R[804],E,R[805],1,N],[13,"Latest",E,R[806],1,N],[5,R[809],E,R[810],N,[[[R[16]],["bool"]],[[R[26],[R[617]]],[R[617]]]]],[5,R[807],E,R[808],N,[[[R[16]]],["bool"]]],[5,"generate_import_object",E,"Creates a Wasi [`ImportObject`] with [`WasiState`] with…",N,[[["vec"],["vec",[R[618]]],["vec",["u8"]],["vec",["vec"]],[R[618]]],[R[37]]]],[5,"generate_import_object_from_state",E,"Create an [`ImportObject`] with an existing [`WasiState`].…",N,[[[R[617]],[R[627]]],[R[37]]]],[5,"generate_import_object_for_version",E,"Creates a Wasi [`ImportObject`] with [`WasiState`] for the…",N,[[["vec"],[R[617]],["vec",["u8"]],["vec",["vec"]],[R[618]],["vec",[R[618]]]],[R[37]]]],[5,"generate_import_object_snapshot0",E,"Creates a legacy Wasi [`ImportObject`] with [`WasiState`].",N,[[["vec"],["vec",[R[618]]],["vec",["u8"]],["vec",["vec"]],[R[618]]],[R[37]]]],[5,"generate_import_object_snapshot0_inner",E,R[619],N,[[["f"]],[R[37]]]],[5,"generate_import_object_snapshot1_inner",E,R[619],N,[[["f"]],[R[37]]]],[0,"macros",E,"Macros to simplify some common WASI-specific tasks.",N,N],[0,"ptr",E,R[620],N,N],[3,"Array",R[1024],"Array.",N,N],[3,"WasmPtr",E,E,N,N],[12,"0",E,E,2,N],[11,"new",E,E,2,[[["u32"]],["self"]]],[11,"offset",E,E,2,[[],["u32"]]],[11,"deref",E,E,2,[[[R[96]]],[["cell"],[R[621]],[R[2],["cell",R[621]]]]]],[11,"deref",E,E,2,[[[R[96]],["u32"]],[[R[621]],[R[2],[R[621]]]]]],[11,R[614],E,E,2,[[[R[96]],["u32"]],[[R[26],["str"]],["str"]]]],[0,"state",R[622],"WARNING: the API exposed here is unstable and very…",N,N],[3,"Inode",R[625],"An index (and generation) into an `Arena`.",N,N],[12,"index",E,E,3,N],[12,"generation",E,E,3,N],[3,R[628],E,R[629],N,N],[12,"args",E,E,4,N],[12,"envs",E,E,4,N],[12,"preopens",E,E,4,N],[12,R[630],E,E,4,N],[12,R[631],E,E,4,N],[12,R[632],E,E,4,N],[12,R[633],E,E,4,N],[3,R[634],E,R[635],N,N],[12,"path",E,E,5,N],[12,"alias",E,E,5,N],[12,"read",E,E,5,N],[12,"write",E,E,5,N],[12,"create",E,E,5,N],[3,R[650],E,E,N,N],[12,"inner",E,E,6,N],[3,R[651],E,E,N,N],[12,"pes",E,E,7,N],[12,"i",E,E,7,N],[3,"HostFile",E,R[652],N,N],[12,"inner",E,E,8,N],[12,R[653],E,E,8,N],[12,"flags",E,E,8,N],[3,"Stdout",E,R[654],N,N],[3,"Stderr",E,R[655],N,N],[3,"Stdin",E,R[656],N,N],[3,"InodeVal",E,"A file that Wasi knows about that may or may not be open",N,N],[12,"stat",E,E,9,N],[12,"is_preopened",E,E,9,N],[12,"name",E,E,9,N],[12,"kind",E,E,9,N],[3,"Fd",E,E,N,N],[12,"rights",E,E,10,N],[12,"rights_inheriting",E,E,10,N],[12,"flags",E,E,10,N],[12,"offset",E,E,10,N],[12,"open_flags",E,"Flags that determine how the [`Fd`] can be used.",10,N],[12,"inode",E,E,10,N],[3,"WasiFs",E,"Warning, modifying these fields directly may cause…",N,N],[12,"preopen_fds",E,E,11,N],[12,"name_map",E,E,11,N],[12,"inodes",E,E,11,N],[12,"fd_map",E,E,11,N],[12,"next_fd",E,E,11,N],[12,"inode_counter",E,E,11,N],[12,"orphan_fds",E,"for fds still open after the file has been deleted",11,N],[3,"WasiState",E,"Top level data type containing all* the state with which…",N,N],[12,"fs",E,E,12,N],[12,"args",E,E,12,N],[12,"envs",E,E,12,N],[4,R[636],E,R[637],N,N],[13,R[638],E,E,13,N],[13,R[639],E,E,13,N],[13,R[640],E,E,13,N],[13,R[641],E,E,13,N],[13,R[642],E,E,13,N],[13,R[643],E,E,13,N],[13,R[644],E,E,13,N],[13,R[623],E,E,13,N],[4,R[623],E,R[657],N,N],[13,R[658],E,R[659],14,N],[13,"NotAFile",E,R[660],14,N],[13,R[661],E,R[662],14,N],[13,R[663],E,R[664],14,N],[13,"IOError",E,R[665],14,N],[13,R[666],E,R[667],14,N],[13,R[668],E,R[669],14,N],[13,R[670],E,R[671],14,N],[13,R[672],E,R[673],14,N],[13,R[674],E,R[675],14,N],[13,R[676],E,R[677],14,N],[13,R[678],E,R[679],14,N],[13,R[680],E,R[681],14,N],[13,R[624],E,R[682],14,N],[13,R[683],E,R[684],14,N],[13,R[685],E,R[686],14,N],[13,"NoDevice",E,R[687],14,N],[13,R[688],E,R[689],14,N],[13,"TimedOut",E,R[690],14,N],[13,R[691],E,R[692],14,N],[13,R[693],E,R[694],14,N],[13,R[695],E,R[696],14,N],[13,R[697],E,R[698],14,N],[4,R[699],E,E,N,N],[13,"PollIn",E,R[700],15,N],[13,"PollOut",E,R[701],15,N],[13,R[702],E,R[703],15,N],[13,R[704],E,R[705],15,N],[13,R[706],E,R[707],15,N],[4,"Kind",E,"The core of the filesystem abstraction. Includes…",N,N],[13,"File",E,E,16,N],[12,"handle",R[626],"the open file, if it's open",16,N],[12,"path",E,"The path on the host system where the file is located This…",16,N],[12,"fd",E,"Marks the file as a special file that only one `fd` can…",16,N],[13,"Dir",R[625],E,16,N],[12,"parent",R[626],"Parent directory",16,N],[12,"path",E,"The path on the host system where the directory is located",16,N],[12,"entries",E,"The entries of a directory are lazily filled.",16,N],[13,"Root",R[625],"The same as Dir but without the irrelevant bits The root…",16,N],[12,"entries",R[626],E,16,N],[13,"Symlink",R[625],"The first two fields are data about the symlink the last…",16,N],[12,"base_po_dir",R[626],"The preopened dir that this symlink file is relative to…",16,N],[12,"path_to_symlink",E,"The path to the symlink from the `base_po_dir`",16,N],[12,"relative_path",E,"the value of the symlink as a relative path",16,N],[13,"Buffer",R[625],E,16,N],[12,"buffer",R[626],E,16,N],[5,R[708],R[625],E,N,[[[R[709]]],[R[710]]]],[5,"get_wasi_state",E,"Get WasiState from a Ctx This function is unsafe because…",N,[[["ctx"]],[R[627]]]],[5,"host_file_type_to_wasi_file_type",E,E,N,[[["filetype"]],[R[766]]]],[0,"builder",E,"Builder system for configuring a [`WasiState`] and…",N,N],[3,R[628],R[1027],R[629],N,N],[12,"args",E,E,4,N],[12,"envs",E,E,4,N],[12,"preopens",E,E,4,N],[12,R[630],E,E,4,N],[12,R[631],E,E,4,N],[12,R[632],E,E,4,N],[12,R[633],E,E,4,N],[3,R[634],E,R[635],N,N],[12,"path",E,E,5,N],[12,"alias",E,E,5,N],[12,"read",E,E,5,N],[12,"write",E,E,5,N],[12,"create",E,E,5,N],[3,R[1036],E,"The built version of `PreopenDirBuilder`",N,N],[12,"path",E,E,17,N],[12,"alias",E,E,17,N],[12,"read",E,E,17,N],[12,"write",E,E,17,N],[12,"create",E,E,17,N],[4,R[636],E,R[637],N,N],[13,R[638],E,E,13,N],[13,R[639],E,E,13,N],[13,R[640],E,E,13,N],[13,R[641],E,E,13,N],[13,R[642],E,E,13,N],[13,R[643],E,E,13,N],[13,R[644],E,E,13,N],[13,R[623],E,E,13,N],[5,"create_wasi_state",E,"Creates an empty [`WasiStateBuilder`].",N,[[["str"]],[R[751]]]],[5,"validate_mapped_dir_alias",E,E,N,[[["str"]],[[R[645]],[R[2],[R[645]]]]]],[11,"env",R[625],"Add an environment variable pair. Environment variable…",4,[[["self"],["key"],["value"]],["self"]]],[11,"arg",E,"Add an argument. Arguments must not contain the nul (0x0)…",4,[[["self"],["arg"]],["self"]]],[11,"envs",E,"Add multiple environment variable pairs. Keys and values…",4,[[["self"],["i"]],["self"]]],[11,"args",E,"Add multiple arguments. Arguments must not contain the nul…",4,[[["self"],["i"]],["self"]]],[11,"preopen_dir",E,R[646],4,[[["self"],[R[648]]],[["self"],[R[645]],[R[2],[R[645]]]]]],[11,"preopen",E,"Preopen a directory and configure it.",4,[[["self"],["f"]],[["self"],[R[645]],[R[2],[R[645]]]]]],[11,"preopen_dirs",E,R[646],4,[[["self"],["i"]],[["self"],[R[645]],[R[2],[R[645]]]]]],[11,"map_dir",E,"Preopen a directory with a different name exposed to the…",4,[[["self"],["str"],[R[648]]],[["self"],[R[645]],[R[2],[R[645]]]]]],[11,"map_dirs",E,"Preopen directorys with a different names exposed to the…",4,[[["self"],["i"]],[["self"],[R[645]],[R[2],[R[645]]]]]],[11,"stdout",E,"Overwrite the default WASI `stdout`, if you want to hold…",4,[[["self"],["box",[R[647]]],[R[647]]],["self"]]],[11,"stderr",E,"Overwrite the default WASI `stderr`, if you want to hold…",4,[[["self"],["box",[R[647]]],[R[647]]],["self"]]],[11,"stdin",E,"Overwrite the default WASI `stdin`, if you want to hold on…",4,[[["self"],["box",[R[647]]],[R[647]]],["self"]]],[11,"setup_fs",E,"Setup the WASI filesystem before running",4,[[["self"],["box",["fn"]],["fn"]],["self"]]],[11,"build",E,"Consumes the [`WasiStateBuilder`] and produces a…",4,[[["self"]],[[R[627]],[R[645]],[R[2],[R[627],R[645]]]]]],[11,"new",E,"Create an empty builder",5,[[],["self"]]],[11,"directory",E,"Point the preopened directory to the path given by `po_dir`",5,[[["self"],[R[648]]],["self"]]],[11,"alias",E,"Make this preopened directory appear to the WASI program…",5,[[["self"],["str"]],["self"]]],[11,"read",E,"Set read permissions affecting files in the directory",5,[[["self"],["bool"]],["self"]]],[11,"write",E,"Set write permissions affecting files in the directory",5,[[["self"],["bool"]],["self"]]],[11,"create",E,"Set create permissions affecting files in the directory",5,[[["self"],["bool"]],["self"]]],[11,"build",E,E,5,[[["self"]],[[R[2],[R[649],R[645]]],[R[649]],[R[645]]]]],[0,"types",E,E,N,N],[3,R[650],R[724],E,N,N],[12,"inner",E,E,6,N],[3,R[651],E,E,N,N],[12,"pes",E,E,7,N],[12,"i",E,E,7,N],[3,"HostFile",E,R[652],N,N],[12,"inner",E,E,8,N],[12,R[653],E,E,8,N],[12,"flags",E,E,8,N],[3,"Stdout",E,R[654],N,N],[3,"Stderr",E,R[655],N,N],[3,"Stdin",E,R[656],N,N],[4,R[623],E,R[657],N,N],[13,R[658],E,R[659],14,N],[13,"NotAFile",E,R[660],14,N],[13,R[661],E,R[662],14,N],[13,R[663],E,R[664],14,N],[13,"IOError",E,R[665],14,N],[13,R[666],E,R[667],14,N],[13,R[668],E,R[669],14,N],[13,R[670],E,R[671],14,N],[13,R[672],E,R[673],14,N],[13,R[674],E,R[675],14,N],[13,R[676],E,R[677],14,N],[13,R[678],E,R[679],14,N],[13,R[680],E,R[681],14,N],[13,R[624],E,R[682],14,N],[13,R[683],E,R[684],14,N],[13,R[685],E,R[686],14,N],[13,"NoDevice",E,R[687],14,N],[13,R[688],E,R[689],14,N],[13,"TimedOut",E,R[690],14,N],[13,R[691],E,R[692],14,N],[13,R[693],E,R[694],14,N],[13,R[695],E,R[696],14,N],[13,R[697],E,R[698],14,N],[4,R[699],E,E,N,N],[13,"PollIn",E,R[700],15,N],[13,"PollOut",E,R[701],15,N],[13,R[702],E,R[703],15,N],[13,R[704],E,R[705],15,N],[13,R[706],E,R[707],15,N],[5,R[708],E,E,N,[[[R[709]]],[R[710]]]],[5,"poll_event_set_to_platform_poll_events",E,E,N,[[[R[709]]],["i16"]]],[5,"platform_poll_events_to_pollevent_set",E,E,N,[[["i16"]],[R[709]]]],[5,"poll",E,E,N,[[],[[R[2],["u32",R[711]]],["u32"],[R[711]]]]],[5,"host_file_bytes_available",E,E,N,[[["i32"]],[[R[2],["usize",R[711]]],["usize"],[R[711]]]]],[6,R[715],E,E,N,N],[7,"__init11443140379011782265",E,E,N,N],[7,"__init4101275917581315507",E,E,N,N],[7,"__init13307808497877035200",E,E,N,N],[7,"__init8582603105775486881",E,E,N,N],[17,"_WasiFile_registry",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_HostFile",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_Stdout",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Stdout",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_Stderr",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Stderr",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_Stdin",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Stdin",E,E,N,N],[8,"WasiFile",E,R[716],N,N],[10,R[717],E,R[718],18,[[["self"]],[R[712]]]],[10,R[719],E,R[720],18,[[["self"]],[R[712]]]],[10,R[721],E,R[722],18,[[["self"]],[R[712]]]],[11,R[723],E,R[725],18,[[["self"],[R[712]]]]],[11,R[726],E,R[727],18,[[["self"],[R[712]]]]],[11,R[728],E,R[729],18,[[["self"],[R[712]]]]],[10,"size",E,R[730],18,[[["self"]],["u64"]]],[10,"set_len",E,R[731],18,[[["self"],[R[732]]],[[R[2],[R[711]]],[R[711]]]]],[10,"unlink",E,R[733],18,[[["self"]],[[R[2],[R[711]]],[R[711]]]]],[11,R[734],E,R[735],18,[[["self"]],[[R[2],[R[711]]],[R[711]]]]],[11,R[736],E,R[737],18,[[["self"],["path"]],[[R[2],[R[711]]],[R[711]]]]],[10,R[738],E,R[739],18,[[["self"]],[[R[2],["usize",R[711]]],["usize"],[R[711]]]]],[11,R[740],E,R[741],18,[[["self"]],[["i32"],[R[26],["i32"]]]]],[10,R[742],E,E,18,[[["self"]],["str"]]],[10,R[743],E,E,18,[[["self"]]]],[8,"WasiPath",E,E,N,N],[11,"from_wasi_err",R[625],E,14,[[[R[621]]],[R[711]]]],[11,"into_wasi_err",E,E,14,[[],[R[621]]]],[11,"from_i16",E,E,15,[[["i16"]],[[R[713]],[R[26],[R[713]]]]]],[11,"new",E,E,6,[[],[R[714]]]],[11,"add",E,E,6,[[[R[713]]],[R[714]]]],[11,"build",E,E,6,[[],[R[709]]]],[18,"READ",E,E,8,N],[18,"WRITE",E,E,8,N],[18,"APPEND",E,E,8,N],[11,"new",E,"creates a new host file from a `std::fs::File` and a path",8,[[["file"],[R[618]],["bool"]],["self"]]],[11,"metadata",E,E,8,[[["self"]],["metadata"]]],[6,R[715],E,E,N,N],[17,"VIRTUAL_ROOT_FD",E,"the fd value of the virtual root",N,N],[17,"ALL_RIGHTS",E,"all the rights enabled",N,N],[17,"STDIN_DEFAULT_RIGHTS",E,E,N,N],[17,"STDOUT_DEFAULT_RIGHTS",E,E,N,N],[17,"STDERR_DEFAULT_RIGHTS",E,E,N,N],[17,"MAX_SYMLINKS",E,"A completely aribtrary \"big enough\" number used as the…",N,N],[17,"_IMPL_SERIALIZE_FOR_InodeVal",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_InodeVal",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_Kind",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Kind",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_Fd",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Fd",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_WasiFs",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_WasiFs",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_WasiState",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_WasiState",E,E,N,N],[8,"WasiFile",E,R[716],N,N],[10,R[717],E,R[718],18,[[["self"]],[R[712]]]],[10,R[719],E,R[720],18,[[["self"]],[R[712]]]],[10,R[721],E,R[722],18,[[["self"]],[R[712]]]],[11,R[723],R[724],R[725],18,[[["self"],[R[712]]]]],[11,R[726],E,R[727],18,[[["self"],[R[712]]]]],[11,R[728],E,R[729],18,[[["self"],[R[712]]]]],[10,"size",R[625],R[730],18,[[["self"]],["u64"]]],[10,"set_len",E,R[731],18,[[["self"],[R[732]]],[[R[2],[R[711]]],[R[711]]]]],[10,"unlink",E,R[733],18,[[["self"]],[[R[2],[R[711]]],[R[711]]]]],[11,R[734],R[724],R[735],18,[[["self"]],[[R[2],[R[711]]],[R[711]]]]],[11,R[736],E,R[737],18,[[["self"],["path"]],[[R[2],[R[711]]],[R[711]]]]],[10,R[738],R[625],R[739],18,[[["self"]],[[R[2],["usize",R[711]]],["usize"],[R[711]]]]],[11,R[740],R[724],R[741],18,[[["self"]],[["i32"],[R[26],["i32"]]]]],[10,R[742],R[625],E,18,[[["self"]],["str"]]],[10,R[743],E,E,18,[[["self"]]]],[8,"WasiPath",E,E,N,N],[18,"READ",E,"This [`Fd`] can be used with read system calls.",10,N],[18,"WRITE",E,"This [`Fd`] can be used with write system calls.",10,N],[18,"APPEND",E,"This [`Fd`] can append in write system calls. Note that…",10,N],[18,"TRUNCATE",E,"This [`Fd`] will delete everything before writing. Note…",10,N],[18,"CREATE",E,"This [`Fd`] may create a file before writing to it. Note…",10,N],[11,"new",E,"Internal function for constructing a [`WasiFs`]. Please…",11,[[],[[R[2],[R[0]]],[R[0]]]]],[11,"new_with_preopen",E,"Created for the builder API. like `new` but with more…",11,[[],[[R[2],[R[0]]],[R[0]]]]],[11,"new_init",E,"Private helper function to init the filesystem, called in…",11,[[],[[R[0]],[R[2],[R[0]]]]]],[11,"stdout",E,"Get the `WasiFile` object at stdout",11,[[["self"]],[[R[2],[R[26],R[711]]],[R[26]],[R[711]]]]],[11,"stdout_mut",E,"Get the `WasiFile` object at stdout mutably",11,[[["self"]],[[R[26]],[R[2],[R[26],R[711]]],[R[711]]]]],[11,"stderr",E,"Get the `WasiFile` object at stderr",11,[[["self"]],[[R[2],[R[26],R[711]]],[R[26]],[R[711]]]]],[11,"stderr_mut",E,"Get the `WasiFile` object at stderr mutably",11,[[["self"]],[[R[26]],[R[2],[R[26],R[711]]],[R[711]]]]],[11,"stdin",E,"Get the `WasiFile` object at stdin",11,[[["self"]],[[R[2],[R[26],R[711]]],[R[26]],[R[711]]]]],[11,"stdin_mut",E,"Get the `WasiFile` object at stdin mutably",11,[[["self"]],[[R[26]],[R[2],[R[26],R[711]]],[R[711]]]]],[11,"std_dev_get",E,"Internal helper function to get a standard device handle.…",11,[[["self"],[R[744]]],[[R[2],[R[26],R[711]]],[R[26]],[R[711]]]]],[11,"std_dev_get_mut",E,"Internal helper function to mutably get a standard device…",11,[[["self"],[R[744]]],[[R[26]],[R[2],[R[26],R[711]]],[R[711]]]]],[11,"get_next_inode_index",E,"Returns the next available inode index for creating a new…",11,[[["self"]],["u64"]]],[11,"open_dir_all",E,"like create dir all, but it also opens it Function is…",11,[[["self"],[R[744]],[R[0]],[R[745]],[R[746]]],[[R[744]],[R[711]],[R[2],[R[744],R[711]]]]]],[11,"open_file_at",E,"Opens a user-supplied file in the directory specified with…",11,[[["self"],[R[0]],["box",[R[647]]],[R[744]],[R[745]],[R[647]],["u16"],[R[746]]],[[R[744]],[R[711]],[R[2],[R[744],R[711]]]]]],[11,"swap_file",E,"Change the backing of a given file descriptor Returns the…",11,[[["self"],[R[744]],["box",[R[647]]],[R[647]]],[[R[2],[R[26],R[711]]],[R[711]],[R[26],["box"]]]]],[11,"filestat_resync_size",E,"refresh size from filesystem",11,[[["self"],[R[744]]],[[R[621]],[R[2],[R[732],R[621]]],[R[732]]]]],[11,"get_inode_at_path_inner",E,"Internal part of the core path resolution function which…",11,[[["self"],[R[744]],["u32"],["str"],["bool"]],[[R[621]],[R[2],["inode",R[621]]],["inode"]]]],[11,"path_into_pre_open_and_relative_path",E,"Splits a path into the first preopened directory that is a…",11,[[["self"],["path"]],[[R[2],[R[621]]],[R[621]]]]],[11,"path_relative_to_fd",E,E,11,[[["self"],[R[744]],["inode"]],[[R[618]],[R[621]],[R[2],[R[618],R[621]]]]]],[11,"path_depth_from_fd",E,"finds the number of directories between the fd and the…",11,[[["self"],[R[744]],["inode"]],[[R[2],["usize",R[621]]],["usize"],[R[621]]]]],[11,"get_inode_at_path",E,"gets a host file from a base directory and a path this…",11,[[["self"],[R[744]],["str"],["bool"]],[[R[621]],[R[2],["inode",R[621]]],["inode"]]]],[11,"get_parent_inode_at_path",E,"Returns the parent Dir or Root that the file at a given…",11,[[["self"],[R[744]],["path"],["bool"]],[[R[621]],[R[2],[R[621]]]]]],[11,"get_fd",E,E,11,[[["self"],[R[744]]],[[R[2],["fd",R[621]]],["fd"],[R[621]]]]],[11,"get_inodeval_mut",E,"gets either a normal inode or an orphaned inode",11,[[["self"],[R[744]]],[[R[750]],[R[2],[R[750],R[621]]],[R[621]]]]],[11,"filestat_fd",E,E,11,[[["self"],[R[744]]],[[R[2],[R[747],R[621]]],[R[747]],[R[621]]]]],[11,"fdstat",E,E,11,[[["self"],[R[744]]],[[R[2],[R[748],R[621]]],[R[621]],[R[748]]]]],[11,"prestat_fd",E,E,11,[[["self"],[R[744]]],[[R[2],[R[749],R[621]]],[R[749]],[R[621]]]]],[11,"flush",E,E,11,[[["self"],[R[744]]],[[R[2],[R[621]]],[R[621]]]]],[11,"create_inode",E,"Creates an inode and inserts it given a Kind and some…",11,[[["self"],[R[0]],["kind"],["bool"]],[[R[621]],[R[2],["inode",R[621]]],["inode"]]]],[11,"create_inode_with_default_stat",E,"creates an inode and inserts it given a Kind, does not…",11,[[["self"],[R[0]],["kind"],["bool"]],["inode"]]],[11,"create_fd",E,E,11,[[["self"],[R[745]],["u16"],[R[746]],["inode"]],[[R[744]],[R[2],[R[744],R[621]]],[R[621]]]]],[11,"remove_inode",E,"This function is unsafe because it's the caller's…",11,[[["self"],["inode"]],[[R[26],[R[750]]],[R[750]]]]],[11,"create_virtual_root",E,E,11,[[["self"]],["inode"]]],[11,"create_stdout",E,E,11,[[["self"]]]],[11,"create_stdin",E,E,11,[[["self"]]]],[11,"create_stderr",E,E,11,[[["self"]]]],[11,"create_std_dev_inner",E,E,11,[[["self"],[R[647]],["str"],[R[744]],[R[745]],[R[746]],["box",[R[647]]]]]],[11,"get_stat_for_kind",E,E,11,[[["self"],["kind"]],[[R[747]],[R[26],[R[747]]]]]],[11,"close_fd",E,"Closes an open FD, handling all details such as FD being…",11,[[["self"],[R[744]]],[[R[2],[R[621]]],[R[621]]]]],[11,"new",E,"Create a [`WasiStateBuilder`] to construct a validated…",12,[[["str"]],[R[751]]]],[11,"freeze",E,"Turn the WasiState into bytes",12,[[["self"]],[["vec",["u8"]],[R[26],["vec"]]]]],[11,"unfreeze",E,"Get a WasiState from bytes",12,[[],[R[26]]]],[0,"syscalls",R[622],E,N,N],[5,"get_memory_and_wasi_state",R[795],"This function is not safe",N,[[["ctx"],["u32"]]]],[5,"write_bytes_inner",E,E,N,[[["write"],[R[96]]],[[R[2],["u32",R[621]]],["u32"],[R[621]]]]],[5,"write_bytes",E,E,N,[[["write"],[R[96]]],[[R[2],["u32",R[621]]],["u32"],[R[621]]]]],[5,"read_bytes",E,E,N,[[["read"],[R[96]]],[[R[2],["u32",R[621]]],["u32"],[R[621]]]]],[5,"has_rights",E,"checks that `rights_check_set` is a subset of `rights_set`",N,[[[R[745]]],["bool"]]],[5,"write_buffer_array",E,E,N,[[[R[752],[R[752],"array"]],["array"],[R[752],["u8","array"]],[R[96]],["u8"]],[R[621]]]],[5,"get_current_time_in_nanos",E,E,N,[[],[[R[712]],[R[2],[R[712],R[621]]],[R[621]]]]],[5,"args_get",E,"`args_get()` Read command-line argument data. The sizes of…",N,[[["ctx"],[R[752],[R[752],"array"]],["array"],[R[752],["u8","array"]],["u8"]],[R[621]]]],[5,"args_sizes_get",E,"`args_sizes_get()` Return command-line argument data…",N,[[["ctx"],[R[752],["u32"]],["u32"]],[R[621]]]],[5,"clock_res_get",E,"`clock_res_get()` Get the resolution of the specified…",N,[[["ctx"],[R[753]],[R[712]],[R[752],[R[712]]]],[R[621]]]],[5,"clock_time_get",E,"`clock_time_get()` Get the time of the specified clock…",N,[[["ctx"],[R[753]],[R[712]],[R[752],[R[712]]]],[R[621]]]],[5,"environ_get",E,"`environ_get()` Read environment variable data. The sizes…",N,[[["ctx"],[R[752],[R[752],"array"]],["array"],[R[752],["u8","array"]],["u8"]],[R[621]]]],[5,"environ_sizes_get",E,"`environ_sizes_get()` Return command-line argument data…",N,[[["ctx"],[R[752],["u32"]],["u32"]],[R[621]]]],[5,"fd_advise",E,"`fd_advise()` Advise the system about how a file will be…",N,[[[R[744]],["ctx"],[R[732]],[R[774]]],[R[621]]]],[5,"fd_allocate",E,"`fd_allocate` Allocate extra space for a file descriptor…",N,[[[R[744]],["ctx"],[R[732]]],[R[621]]]],[5,"fd_close",E,"`fd_close()` Close an open file descriptor Inputs: -…",N,[[[R[744]],["ctx"]],[R[621]]]],[5,"fd_datasync",E,"`fd_datasync()` Synchronize the file data to disk Inputs:…",N,[[[R[744]],["ctx"]],[R[621]]]],[5,"fd_fdstat_get",E,"`fd_fdstat_get()` Get metadata of a file descriptor Input:…",N,[[[R[744]],["ctx"],[R[748]],[R[752],[R[748]]]],[R[621]]]],[5,"fd_fdstat_set_flags",E,"`fd_fdstat_set_flags()` Set file descriptor flags for a…",N,[[[R[744]],["ctx"],[R[746]]],[R[621]]]],[5,"fd_fdstat_set_rights",E,"`fd_fdstat_set_rights()` Set the rights of a file…",N,[[[R[744]],["ctx"],[R[745]]],[R[621]]]],[5,R[797],E,"`fd_filestat_get()` Get the metadata of an open file…",N,[[[R[744]],["ctx"],[R[752],[R[747]]],[R[747]]],[R[621]]]],[5,"fd_filestat_set_size",E,"`fd_filestat_set_size()` Change the size of an open file,…",N,[[[R[744]],["ctx"],[R[732]]],[R[621]]]],[5,"fd_filestat_set_times",E,"`fd_filestat_set_times()` Set timestamp metadata on a file…",N,[[[R[744]],["ctx"],[R[756]],[R[712]]],[R[621]]]],[5,"fd_pread",E,"`fd_pread()` Read from the file at the given offset…",N,[[["ctx"],["array"],["u32"],[R[752],["u32"]],[R[754]],[R[744]],[R[732]],[R[752],[R[754],"array"]]],[R[621]]]],[5,"fd_prestat_get",E,"`fd_prestat_get()` Get metadata about a preopened file…",N,[[[R[744]],["ctx"],[R[749]],[R[752],[R[749]]]],[R[621]]]],[5,"fd_prestat_dir_name",E,E,N,[[[R[744]],["ctx"],["array"],[R[752],["u8","array"]],["u32"],["u8"]],[R[621]]]],[5,"fd_pwrite",E,"`fd_pwrite()` Write to a file without adjusting its offset…",N,[[["ctx"],[R[752],[R[755],"array"]],["array"],[R[755]],["u32"],[R[752],["u32"]],[R[744]],[R[732]]],[R[621]]]],[5,"fd_read",E,"`fd_read()` Read data from file descriptor Inputs: -…",N,[[[R[744]],["ctx"],["array"],["u32"],[R[752],["u32"]],[R[752],[R[754],"array"]],[R[754]]],[R[621]]]],[5,"fd_readdir",E,"`fd_readdir()` Read data from directory specified by file…",N,[[["ctx"],["array"],["u32"],[R[752],["u32"]],[R[744]],[R[752],["u8","array"]],[R[775]],["u8"]],[R[621]]]],[5,"fd_renumber",E,"`fd_renumber()` Atomically copy file descriptor Inputs: -…",N,[[[R[744]],["ctx"]],[R[621]]]],[5,"fd_seek",E,"`fd_seek()` Update file descriptor offset Inputs: -…",N,[[[R[744]],["ctx"],[R[778]],[R[773]],[R[732]],[R[752],[R[732]]]],[R[621]]]],[5,"fd_sync",E,"`fd_sync()` Synchronize file and metadata to disk (TODO:…",N,[[[R[744]],["ctx"]],[R[621]]]],[5,"fd_tell",E,"`fd_tell()` Get the offset of the file descriptor Inputs:…",N,[[[R[744]],["ctx"],[R[732]],[R[752],[R[732]]]],[R[621]]]],[5,"fd_write",E,"`fd_write()` Write data to the file descriptor Inputs: -…",N,[[[R[744]],["ctx"],[R[752],[R[755],"array"]],["array"],[R[755]],["u32"],[R[752],["u32"]]],[R[621]]]],[5,"path_create_directory",E,"`path_create_directory()` Create directory at a path…",N,[[[R[744]],["ctx"],["array"],[R[752],["u8","array"]],["u32"],["u8"]],[R[621]]]],[5,R[798],E,"`path_filestat_get()` Access metadata about a file or…",N,[[[R[752],[R[747]]],["ctx"],["array"],["u32"],[R[744]],[R[752],["u8","array"]],[R[747]],[R[757]],["u8"]],[R[621]]]],[5,"path_filestat_set_times",E,"`path_filestat_set_times()` Update time metadata on a file…",N,[[["ctx"],["array"],["u32"],[R[712]],[R[744]],[R[756]],[R[752],["u8","array"]],[R[757]],["u8"]],[R[621]]]],[5,"path_link",E,"`path_link()` Create a hard link Inputs: - `__wasi_fd_t…",N,[[["ctx"],["array"],["u32"],[R[744]],[R[752],["u8","array"]],[R[757]],["u8"]],[R[621]]]],[5,"path_open",E,"`path_open()` Open file located at the given path Inputs:…",N,[[[R[746]],["ctx"],["array"],["u32"],[R[744]],[R[745]],[R[752],["u8","array"]],[R[780]],[R[752],[R[744]]],[R[757]],["u8"]],[R[621]]]],[5,"path_readlink",E,"`path_readlink()` Read the value of a symlink Inputs: -…",N,[[["ctx"],["array"],["u32"],[R[752],["u32"]],[R[744]],[R[752],["u8","array"]],["u8"]],[R[621]]]],[5,"path_remove_directory",E,"Returns __WASI_ENOTEMTPY if directory is not empty",N,[[[R[744]],["ctx"],["array"],[R[752],["u8","array"]],["u32"],["u8"]],[R[621]]]],[5,"path_rename",E,"`path_rename()` Rename a file or directory Inputs: -…",N,[[["ctx"],["array"],["u32"],[R[744]],[R[752],["u8","array"]],["u8"]],[R[621]]]],[5,"path_symlink",E,"`path_symlink()` Create a symlink Inputs: - `const char…",N,[[["ctx"],["array"],["u32"],[R[744]],[R[752],["u8","array"]],["u8"]],[R[621]]]],[5,"path_unlink_file",E,"`path_unlink_file()` Unlink a file, deleting if the number…",N,[[[R[744]],["ctx"],["array"],[R[752],["u8","array"]],["u32"],["u8"]],[R[621]]]],[5,R[799],E,"`poll_oneoff()` Concurrently poll for a set of events…",N,[[["ctx"],["array"],[R[752],[R[758],"array"]],["u32"],[R[752],["u32"]],[R[752],[R[759],"array"]],[R[758]],[R[759]]],[R[621]]]],[5,"proc_exit",E,E,N,[[["ctx"],[R[777]]],[[R[2],[R[262],"exitcode"]],[R[262]],["exitcode"]]]],[5,"proc_raise",E,E,N,[[["ctx"],[R[784]]],[R[621]]]],[5,"random_get",E,"`random_get()` Fill buffer with high-quality random data.…",N,[[["ctx"],["array"],[R[752],["u8","array"]],["u32"],["u8"]],[R[621]]]],[5,"sched_yield",E,"`sched_yield()` Yields execution of the thread",N,[[["ctx"]],[R[621]]]],[5,"sock_recv",E,E,N,[[["ctx"],["array"],["u32"],[R[752],["u32"]],[R[754]],[R[781]],[R[752],[R[760]]],[R[744]],[R[760]],[R[752],[R[754],"array"]]],[R[621]]]],[5,"sock_send",E,E,N,[[["ctx"],[R[752],[R[755],"array"]],["array"],[R[755]],["u32"],[R[783]],[R[752],["u32"]],[R[744]]],[R[621]]]],[5,"sock_shutdown",E,E,N,[[[R[744]],["ctx"],[R[782]]],[R[621]]]],[0,"types",E,E,N,N],[3,R[755],R[762],E,N,N],[12,"buf",E,E,19,N],[12,"buf_len",E,E,19,N],[3,R[765],E,E,N,N],[12,"d_next",E,E,20,N],[12,"d_ino",E,E,20,N],[12,"d_namlen",E,E,20,N],[12,"d_type",E,E,20,N],[3,R[811],E,E,N,N],[12,"nbytes",E,E,21,N],[12,"flags",E,E,21,N],[3,R[758],E,E,N,N],[12,R[768],E,E,22,N],[12,"error",E,E,22,N],[12,"type_",E,E,22,N],[12,U,E,E,22,N],[3,R[812],E,E,N,N],[12,R[763],E,E,23,N],[3,R[749],E,E,N,N],[12,"pr_type",E,E,24,N],[12,U,E,E,24,N],[3,R[748],E,E,N,N],[12,R[813],E,E,25,N],[12,"fs_flags",E,E,25,N],[12,R[814],E,E,25,N],[12,R[815],E,E,25,N],[3,R[747],E,E,N,N],[12,"st_dev",E,E,26,N],[12,"st_ino",E,E,26,N],[12,R[770],E,E,26,N],[12,R[771],E,E,26,N],[12,"st_size",E,E,26,N],[12,"st_atim",E,E,26,N],[12,"st_mtim",E,E,26,N],[12,"st_ctim",E,E,26,N],[3,R[754],E,E,N,N],[12,"buf",E,E,27,N],[12,"buf_len",E,E,27,N],[3,R[767],E,E,N,N],[12,R[816],E,E,28,N],[12,"timeout",E,E,28,N],[12,R[769],E,E,28,N],[12,"flags",E,E,28,N],[3,R[817],E,E,N,N],[12,"fd",E,E,29,N],[3,R[759],E,E,N,N],[12,R[768],E,E,30,N],[12,"type_",E,E,30,N],[12,U,E,E,30,N],[3,R[818],E,R[819],N,N],[12,R[820],E,E,31,N],[12,R[821],E,E,31,N],[19,R[790],E,E,N,N],[12,R[761],E,E,32,N],[19,R[792],E,E,N,N],[12,"dir",E,E,33,N],[19,R[772],E,E,N,N],[12,"clock",E,E,34,N],[12,R[761],E,E,34,N],[4,R[822],E,E,N,N],[13,R[764],E,E,35,N],[12,"nbytes","wasmer_wasi::syscalls::types::EventEnum",E,35,N],[12,"flags",E,E,35,N],[4,R[823],R[762],E,N,N],[13,"Dir",E,E,36,N],[12,R[763],"wasmer_wasi::syscalls::types::PrestatEnum",E,36,N],[4,R[825],R[762],R[826],N,N],[13,"Clock",E,E,37,N],[13,"Read",E,E,37,N],[13,"Write",E,E,37,N],[4,R[827],E,E,N,N],[13,"Clock",E,E,38,N],[13,R[764],E,E,38,N],[5,R[828],E,E,N,[[[R[765]]],[["vec",["u8"]],["u8"]]]],[5,R[829],E,E,N,[[[R[776]]],["str"]]],[5,R[830],E,E,N,[[[R[766]]],["str"]]],[5,R[831],E,R[832],N,[[[R[745]]]]],[5,R[833],E,R[834],N,[[[R[745]]],[[R[26],["str"]],["str"]]]],[0,R[796],E,E,N,N],[3,R[767],R[1028],E,N,N],[12,R[768],E,E,39,N],[12,R[816],E,E,39,N],[12,"timeout",E,E,39,N],[12,R[769],E,E,39,N],[12,"flags",E,E,39,N],[3,R[759],E,E,N,N],[12,R[768],E,E,40,N],[12,"type_",E,E,40,N],[12,U,E,E,40,N],[3,R[747],E,E,N,N],[12,"st_dev",E,E,41,N],[12,"st_ino",E,E,41,N],[12,R[770],E,E,41,N],[12,R[771],E,E,41,N],[12,"st_size",E,E,41,N],[12,"st_atim",E,E,41,N],[12,"st_mtim",E,E,41,N],[12,"st_ctim",E,E,41,N],[19,R[772],E,E,N,N],[12,"clock",E,E,42,N],[12,R[761],E,E,42,N],[6,R[779],E,E,N,N],[6,R[773],E,E,N,N],[17,R[788],E,E,N,N],[17,R[789],E,E,N,N],[17,R[787],E,E,N,N],[17,R[785],E,E,N,N],[17,R[786],E,E,N,N],[6,R[774],R[762],E,N,N],[6,R[753],E,E,N,N],[6,R[835],E,E,N,N],[6,R[775],E,E,N,N],[6,R[621],E,E,N,N],[6,R[836],E,E,N,N],[6,R[776],E,E,N,N],[6,R[777],E,E,N,N],[6,R[744],E,E,N,N],[6,R[746],E,E,N,N],[6,R[837],E,E,N,N],[6,R[778],E,E,N,N],[6,R[732],E,E,N,N],[6,R[766],E,E,N,N],[6,R[756],E,E,N,N],[6,R[838],E,E,N,N],[6,R[779],E,E,N,N],[6,R[757],E,E,N,N],[6,R[780],E,E,N,N],[6,R[781],E,E,N,N],[6,R[745],E,E,N,N],[6,R[760],E,E,N,N],[6,R[782],E,E,N,N],[6,R[783],E,E,N,N],[6,R[784],E,E,N,N],[6,R[839],E,E,N,N],[6,R[712],E,E,N,N],[6,R[840],E,E,N,N],[6,R[773],E,E,N,N],[17,R[841],E,E,N,N],[17,R[842],E,E,N,N],[17,R[843],E,E,N,N],[17,R[844],E,E,N,N],[17,R[845],E,E,N,N],[17,R[846],E,E,N,N],[17,R[847],E,E,N,N],[17,R[848],E,E,N,N],[17,R[849],E,E,N,N],[17,R[850],E,E,N,N],[17,R[851],E,E,N,N],[17,R[852],E,E,N,N],[17,R[853],E,E,N,N],[17,R[854],E,E,N,N],[17,R[855],E,E,N,N],[17,R[856],E,E,N,N],[17,R[857],E,E,N,N],[17,R[858],E,E,N,N],[17,R[859],E,E,N,N],[17,R[860],E,E,N,N],[17,R[861],E,E,N,N],[17,R[862],E,E,N,N],[17,R[863],E,E,N,N],[17,R[864],E,E,N,N],[17,R[865],E,E,N,N],[17,R[866],E,E,N,N],[17,R[867],E,E,N,N],[17,R[868],E,E,N,N],[17,R[869],E,E,N,N],[17,R[870],E,E,N,N],[17,R[871],E,E,N,N],[17,R[872],E,E,N,N],[17,R[873],E,E,N,N],[17,R[874],E,E,N,N],[17,R[875],E,E,N,N],[17,R[876],E,E,N,N],[17,R[877],E,E,N,N],[17,R[878],E,E,N,N],[17,R[879],E,E,N,N],[17,R[880],E,E,N,N],[17,R[881],E,E,N,N],[17,R[882],E,E,N,N],[17,R[883],E,E,N,N],[17,R[884],E,E,N,N],[17,R[885],E,E,N,N],[17,R[886],E,E,N,N],[17,R[887],E,E,N,N],[17,R[888],E,E,N,N],[17,R[889],E,E,N,N],[17,R[890],E,E,N,N],[17,R[891],E,E,N,N],[17,R[892],E,E,N,N],[17,R[893],E,E,N,N],[17,R[894],E,E,N,N],[17,R[895],E,E,N,N],[17,R[896],E,E,N,N],[17,R[897],E,E,N,N],[17,R[898],E,E,N,N],[17,R[899],E,E,N,N],[17,R[900],E,E,N,N],[17,R[901],E,E,N,N],[17,R[902],E,E,N,N],[17,R[903],E,E,N,N],[17,R[904],E,E,N,N],[17,R[905],E,E,N,N],[17,R[906],E,E,N,N],[17,R[907],E,E,N,N],[17,R[908],E,E,N,N],[17,R[909],E,E,N,N],[17,R[910],E,E,N,N],[17,R[911],E,E,N,N],[17,R[912],E,E,N,N],[17,R[913],E,E,N,N],[17,R[914],E,E,N,N],[17,R[915],E,E,N,N],[17,R[916],E,E,N,N],[17,R[917],E,E,N,N],[17,R[918],E,E,N,N],[17,R[919],E,E,N,N],[17,R[920],E,E,N,N],[17,R[921],E,E,N,N],[17,R[922],E,E,N,N],[17,R[923],E,E,N,N],[17,R[924],E,E,N,N],[17,R[925],E,E,N,N],[17,R[926],E,E,N,N],[17,R[927],E,E,N,N],[17,R[928],E,E,N,N],[17,R[929],E,E,N,N],[17,R[930],E,E,N,N],[17,R[931],E,E,N,N],[17,R[932],E,E,N,N],[17,R[933],E,E,N,N],[17,R[934],E,E,N,N],[17,R[935],E,E,N,N],[17,R[936],E,E,N,N],[17,R[937],E,E,N,N],[17,R[938],E,E,N,N],[17,R[939],E,E,N,N],[17,R[940],E,E,N,N],[17,R[941],E,E,N,N],[17,R[785],E,E,N,N],[17,R[786],E,E,N,N],[17,R[942],E,E,N,N],[17,R[943],E,E,N,N],[17,R[944],E,E,N,N],[17,R[945],E,E,N,N],[17,R[946],E,E,N,N],[17,R[947],E,E,N,N],[17,R[948],E,E,N,N],[17,R[949],E,E,N,N],[17,R[950],E,E,N,N],[17,R[951],E,E,N,N],[17,R[952],E,E,N,N],[17,R[953],E,E,N,N],[17,R[954],E,E,N,N],[17,R[955],E,E,N,N],[17,R[956],E,E,N,N],[17,R[957],E,E,N,N],[17,R[958],E,E,N,N],[17,R[959],E,E,N,N],[17,R[960],E,E,N,N],[17,R[961],E,E,N,N],[17,R[962],E,E,N,N],[17,R[963],E,E,N,N],[17,R[964],E,E,N,N],[17,R[965],E,E,N,N],[17,R[966],E,E,N,N],[17,R[967],E,E,N,N],[17,R[968],E,E,N,N],[17,R[969],E,E,N,N],[17,R[970],E,E,N,N],[17,R[971],E,E,N,N],[17,R[972],E,E,N,N],[17,R[973],E,E,N,N],[17,R[974],E,E,N,N],[17,R[975],E,E,N,N],[17,R[976],E,E,N,N],[17,R[977],E,E,N,N],[17,R[978],E,E,N,N],[17,R[979],E,E,N,N],[17,R[980],E,E,N,N],[17,R[981],E,E,N,N],[17,R[982],E,E,N,N],[17,R[983],E,E,N,N],[17,R[984],E,E,N,N],[17,R[985],E,E,N,N],[17,R[986],E,E,N,N],[17,R[987],E,E,N,N],[17,R[988],E,E,N,N],[17,R[989],E,E,N,N],[17,R[990],E,E,N,N],[17,R[991],E,E,N,N],[17,R[992],E,E,N,N],[17,R[993],E,E,N,N],[17,R[994],E,E,N,N],[17,R[995],E,E,N,N],[17,R[996],E,E,N,N],[17,R[997],E,E,N,N],[17,R[998],E,E,N,N],[17,R[999],E,E,N,N],[17,R[1000],E,E,N,N],[17,R[1001],E,E,N,N],[17,R[1002],E,E,N,N],[17,R[1003],E,E,N,N],[17,R[1004],E,E,N,N],[17,R[1005],E,E,N,N],[17,R[1006],E,E,N,N],[17,R[1007],E,E,N,N],[17,R[1008],E,E,N,N],[17,R[1009],E,E,N,N],[17,R[1010],E,E,N,N],[17,R[1011],E,E,N,N],[17,R[1012],E,E,N,N],[17,R[1013],E,E,N,N],[17,R[1014],E,E,N,N],[17,R[1015],E,E,N,N],[17,R[1016],E,E,N,N],[17,R[1017],E,E,N,N],[17,R[1018],E,E,N,N],[17,R[1019],E,E,N,N],[17,R[1020],E,E,N,N],[17,R[1021],E,E,N,N],[17,R[1022],E,E,N,N],[17,R[1023],E,E,N,N],[17,R[787],E,E,N,N],[17,R[788],E,E,N,N],[17,R[789],E,E,N,N],[11,"untagged",E,E,35,[[],[R[790]]]],[11,"tagged",E,E,22,[[["self"]],[[R[791]],[R[26],[R[791]]]]]],[11,"untagged",E,E,36,[[],[R[792]]]],[11,"tagged",E,E,24,[[["self"]],[[R[26],[R[793]]],[R[793]]]]],[11,"raw_tag",E,E,37,[[["self"]],[R[776]]]],[11,"tagged",E,E,30,[[["self"]],[[R[794]],[R[26],[R[794]]]]]],[0,"unix",R[795],E,N,N],[5,"platform_clock_res_get","wasmer_wasi::syscalls::unix",E,N,[[["cell"],[R[753]]],[R[621]]]],[5,"platform_clock_time_get",E,E,N,[[[R[712]],["cell"],[R[753]]],[R[621]]]],[0,"legacy",R[795],"These modules provide wrappers and implementations for…",N,N],[0,R[796],"wasmer_wasi::syscalls::legacy",E,N,N],[5,R[797],"wasmer_wasi::syscalls::legacy::snapshot0","Wrapper around `syscalls::fd_filestat_get` with extra…",N,[[["ctx"],[R[747]],[R[752],[R[747]]],[R[744]]],[R[621]]]],[5,R[798],E,"Wrapper around `syscalls::path_filestat_get` with extra…",N,[[[R[744]],["ctx"],["array"],["u32"],[R[752],[R[747]]],[R[747]],[R[752],["u8","array"]],[R[757]],["u8"]],[R[621]]]],[5,"fd_seek",E,"Wrapper around `syscalls::fd_seek` with extra logic to…",N,[[["ctx"],[R[773]],[R[778]],[R[752],[R[732]]],[R[732]],[R[744]]],[R[621]]]],[5,R[799],E,"Wrapper around `syscalls::poll_oneoff` with extra logic to…",N,[[[R[759]],["ctx"],[R[752],[R[759],"array"]],["array"],[R[758]],["u32"],[R[752],[R[758],"array"]],[R[752],["u32"]]],[R[621]]]],[0,"utils",R[622],E,N,N],[4,R[800],"wasmer_wasi::utils",R[801],N,N],[13,R[802],E,R[803],1,N],[13,R[804],E,R[805],1,N],[13,"Latest",E,R[806],1,N],[5,R[807],E,R[808],N,[[[R[16]]],["bool"]]],[5,R[809],E,R[810],N,[[[R[16]],["bool"]],[[R[26],[R[617]]],[R[617]]]]],[17,"SNAPSHOT0_NAMESPACE",E,"Namespace for the `Snapshot0` version.",N,N],[17,"SNAPSHOT1_NAMESPACE",E,"Namespace for the `Snapshot1` version.",N,N],[0,"types",R[622],E,N,N],[3,R[755],R[824],E,N,N],[12,"buf",E,E,19,N],[12,"buf_len",E,E,19,N],[3,R[765],E,E,N,N],[12,"d_next",E,E,20,N],[12,"d_ino",E,E,20,N],[12,"d_namlen",E,E,20,N],[12,"d_type",E,E,20,N],[3,R[811],E,E,N,N],[12,"nbytes",E,E,21,N],[12,"flags",E,E,21,N],[3,R[758],E,E,N,N],[12,R[768],E,E,22,N],[12,"error",E,E,22,N],[12,"type_",E,E,22,N],[12,U,E,E,22,N],[3,R[812],E,E,N,N],[12,R[763],E,E,23,N],[3,R[749],E,E,N,N],[12,"pr_type",E,E,24,N],[12,U,E,E,24,N],[3,R[748],E,E,N,N],[12,R[813],E,E,25,N],[12,"fs_flags",E,E,25,N],[12,R[814],E,E,25,N],[12,R[815],E,E,25,N],[3,R[747],E,E,N,N],[12,"st_dev",E,E,26,N],[12,"st_ino",E,E,26,N],[12,R[770],E,E,26,N],[12,R[771],E,E,26,N],[12,"st_size",E,E,26,N],[12,"st_atim",E,E,26,N],[12,"st_mtim",E,E,26,N],[12,"st_ctim",E,E,26,N],[3,R[754],E,E,N,N],[12,"buf",E,E,27,N],[12,"buf_len",E,E,27,N],[3,R[767],E,E,N,N],[12,R[816],E,E,28,N],[12,"timeout",E,E,28,N],[12,R[769],E,E,28,N],[12,"flags",E,E,28,N],[3,R[817],E,E,N,N],[12,"fd",E,E,29,N],[3,R[759],E,E,N,N],[12,R[768],E,E,30,N],[12,"type_",E,E,30,N],[12,U,E,E,30,N],[3,R[818],E,R[819],N,N],[12,R[820],E,E,31,N],[12,R[821],E,E,31,N],[19,R[790],E,E,N,N],[12,R[761],E,E,32,N],[19,R[792],E,E,N,N],[12,"dir",E,E,33,N],[19,R[772],E,E,N,N],[12,"clock",E,E,34,N],[12,R[761],E,E,34,N],[4,R[822],E,E,N,N],[13,R[764],E,E,35,N],[12,"nbytes","wasmer_wasi::types::EventEnum",E,35,N],[12,"flags",E,E,35,N],[4,R[823],R[824],E,N,N],[13,"Dir",E,E,36,N],[12,R[763],"wasmer_wasi::types::PrestatEnum",E,36,N],[4,R[825],R[824],R[826],N,N],[13,"Clock",E,E,37,N],[13,"Read",E,E,37,N],[13,"Write",E,E,37,N],[4,R[827],E,E,N,N],[13,"Clock",E,E,38,N],[13,R[764],E,E,38,N],[5,R[828],E,E,N,[[[R[765]]],[["vec",["u8"]],["u8"]]]],[5,R[829],E,E,N,[[[R[776]]],["str"]]],[5,R[830],E,E,N,[[[R[766]]],["str"]]],[5,R[831],E,R[832],N,[[[R[745]]]]],[5,R[833],E,R[834],N,[[[R[745]]],[[R[26],["str"]],["str"]]]],[0,R[796],E,E,N,N],[3,R[767],"wasmer_wasi::types::snapshot0",E,N,N],[12,R[768],E,E,39,N],[12,R[816],E,E,39,N],[12,"timeout",E,E,39,N],[12,R[769],E,E,39,N],[12,"flags",E,E,39,N],[3,R[759],E,E,N,N],[12,R[768],E,E,40,N],[12,"type_",E,E,40,N],[12,U,E,E,40,N],[3,R[747],E,E,N,N],[12,"st_dev",E,E,41,N],[12,"st_ino",E,E,41,N],[12,R[770],E,E,41,N],[12,R[771],E,E,41,N],[12,"st_size",E,E,41,N],[12,"st_atim",E,E,41,N],[12,"st_mtim",E,E,41,N],[12,"st_ctim",E,E,41,N],[19,R[772],E,E,N,N],[12,"clock",E,E,42,N],[12,R[761],E,E,42,N],[6,R[779],E,E,N,N],[6,R[773],E,E,N,N],[17,R[788],E,E,N,N],[17,R[789],E,E,N,N],[17,R[787],E,E,N,N],[6,R[774],R[824],E,N,N],[6,R[753],E,E,N,N],[6,R[835],E,E,N,N],[6,R[775],E,E,N,N],[6,R[621],E,E,N,N],[6,R[836],E,E,N,N],[6,R[776],E,E,N,N],[6,R[777],E,E,N,N],[6,R[744],E,E,N,N],[6,R[746],E,E,N,N],[6,R[837],E,E,N,N],[6,R[778],E,E,N,N],[6,R[732],E,E,N,N],[6,R[766],E,E,N,N],[6,R[756],E,E,N,N],[6,R[838],E,E,N,N],[6,R[779],E,E,N,N],[6,R[757],E,E,N,N],[6,R[780],E,E,N,N],[6,R[781],E,E,N,N],[6,R[745],E,E,N,N],[6,R[760],E,E,N,N],[6,R[782],E,E,N,N],[6,R[783],E,E,N,N],[6,R[784],E,E,N,N],[6,R[839],E,E,N,N],[6,R[712],E,E,N,N],[6,R[840],E,E,N,N],[6,R[773],E,E,N,N],[17,R[841],E,E,N,N],[17,R[842],E,E,N,N],[17,R[843],E,E,N,N],[17,R[844],E,E,N,N],[17,R[845],E,E,N,N],[17,R[846],E,E,N,N],[17,R[847],E,E,N,N],[17,R[848],E,E,N,N],[17,R[849],E,E,N,N],[17,R[850],E,E,N,N],[17,R[851],E,E,N,N],[17,R[852],E,E,N,N],[17,R[853],E,E,N,N],[17,R[854],E,E,N,N],[17,R[855],E,E,N,N],[17,R[856],E,E,N,N],[17,R[857],E,E,N,N],[17,R[858],E,E,N,N],[17,R[859],E,E,N,N],[17,R[860],E,E,N,N],[17,R[861],E,E,N,N],[17,R[862],E,E,N,N],[17,R[863],E,E,N,N],[17,R[864],E,E,N,N],[17,R[865],E,E,N,N],[17,R[866],E,E,N,N],[17,R[867],E,E,N,N],[17,R[868],E,E,N,N],[17,R[869],E,E,N,N],[17,R[870],E,E,N,N],[17,R[871],E,E,N,N],[17,R[872],E,E,N,N],[17,R[873],E,E,N,N],[17,R[874],E,E,N,N],[17,R[875],E,E,N,N],[17,R[876],E,E,N,N],[17,R[877],E,E,N,N],[17,R[878],E,E,N,N],[17,R[879],E,E,N,N],[17,R[880],E,E,N,N],[17,R[881],E,E,N,N],[17,R[882],E,E,N,N],[17,R[883],E,E,N,N],[17,R[884],E,E,N,N],[17,R[885],E,E,N,N],[17,R[886],E,E,N,N],[17,R[887],E,E,N,N],[17,R[888],E,E,N,N],[17,R[889],E,E,N,N],[17,R[890],E,E,N,N],[17,R[891],E,E,N,N],[17,R[892],E,E,N,N],[17,R[893],E,E,N,N],[17,R[894],E,E,N,N],[17,R[895],E,E,N,N],[17,R[896],E,E,N,N],[17,R[897],E,E,N,N],[17,R[898],E,E,N,N],[17,R[899],E,E,N,N],[17,R[900],E,E,N,N],[17,R[901],E,E,N,N],[17,R[902],E,E,N,N],[17,R[903],E,E,N,N],[17,R[904],E,E,N,N],[17,R[905],E,E,N,N],[17,R[906],E,E,N,N],[17,R[907],E,E,N,N],[17,R[908],E,E,N,N],[17,R[909],E,E,N,N],[17,R[910],E,E,N,N],[17,R[911],E,E,N,N],[17,R[912],E,E,N,N],[17,R[913],E,E,N,N],[17,R[914],E,E,N,N],[17,R[915],E,E,N,N],[17,R[916],E,E,N,N],[17,R[917],E,E,N,N],[17,R[918],E,E,N,N],[17,R[919],E,E,N,N],[17,R[920],E,E,N,N],[17,R[921],E,E,N,N],[17,R[922],E,E,N,N],[17,R[923],E,E,N,N],[17,R[924],E,E,N,N],[17,R[925],E,E,N,N],[17,R[926],E,E,N,N],[17,R[927],E,E,N,N],[17,R[928],E,E,N,N],[17,R[929],E,E,N,N],[17,R[930],E,E,N,N],[17,R[931],E,E,N,N],[17,R[932],E,E,N,N],[17,R[933],E,E,N,N],[17,R[934],E,E,N,N],[17,R[935],E,E,N,N],[17,R[936],E,E,N,N],[17,R[937],E,E,N,N],[17,R[938],E,E,N,N],[17,R[939],E,E,N,N],[17,R[940],E,E,N,N],[17,R[941],E,E,N,N],[17,R[942],E,E,N,N],[17,R[943],E,E,N,N],[17,R[944],E,E,N,N],[17,R[945],E,E,N,N],[17,R[946],E,E,N,N],[17,R[947],E,E,N,N],[17,R[948],E,E,N,N],[17,R[949],E,E,N,N],[17,R[950],E,E,N,N],[17,R[951],E,E,N,N],[17,R[952],E,E,N,N],[17,R[953],E,E,N,N],[17,R[954],E,E,N,N],[17,R[955],E,E,N,N],[17,R[956],E,E,N,N],[17,R[957],E,E,N,N],[17,R[958],E,E,N,N],[17,R[959],E,E,N,N],[17,R[960],E,E,N,N],[17,R[961],E,E,N,N],[17,R[962],E,E,N,N],[17,R[963],E,E,N,N],[17,R[964],E,E,N,N],[17,R[965],E,E,N,N],[17,R[966],E,E,N,N],[17,R[967],E,E,N,N],[17,R[968],E,E,N,N],[17,R[969],E,E,N,N],[17,R[970],E,E,N,N],[17,R[971],E,E,N,N],[17,R[972],E,E,N,N],[17,R[973],E,E,N,N],[17,R[974],E,E,N,N],[17,R[975],E,E,N,N],[17,R[976],E,E,N,N],[17,R[977],E,E,N,N],[17,R[978],E,E,N,N],[17,R[979],E,E,N,N],[17,R[980],E,E,N,N],[17,R[981],E,E,N,N],[17,R[982],E,E,N,N],[17,R[983],E,E,N,N],[17,R[984],E,E,N,N],[17,R[985],E,E,N,N],[17,R[986],E,E,N,N],[17,R[987],E,E,N,N],[17,R[988],E,E,N,N],[17,R[989],E,E,N,N],[17,R[990],E,E,N,N],[17,R[991],E,E,N,N],[17,R[992],E,E,N,N],[17,R[993],E,E,N,N],[17,R[994],E,E,N,N],[17,R[995],E,E,N,N],[17,R[996],E,E,N,N],[17,R[997],E,E,N,N],[17,R[998],E,E,N,N],[17,R[999],E,E,N,N],[17,R[1000],E,E,N,N],[17,R[1001],E,E,N,N],[17,R[1002],E,E,N,N],[17,R[1003],E,E,N,N],[17,R[1004],E,E,N,N],[17,R[1005],E,E,N,N],[17,R[1006],E,E,N,N],[17,R[1007],E,E,N,N],[17,R[1008],E,E,N,N],[17,R[1009],E,E,N,N],[17,R[1010],E,E,N,N],[17,R[1011],E,E,N,N],[17,R[1012],E,E,N,N],[17,R[1013],E,E,N,N],[17,R[1014],E,E,N,N],[17,R[1015],E,E,N,N],[17,R[1016],E,E,N,N],[17,R[1017],E,E,N,N],[17,R[1018],E,E,N,N],[17,R[1019],E,E,N,N],[17,R[1020],E,E,N,N],[17,R[1021],E,E,N,N],[17,R[1022],E,E,N,N],[17,R[1023],E,E,N,N],[17,R[787],E,E,N,N],[17,R[788],E,E,N,N],[17,R[789],E,E,N,N],[11,"from",R[622],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[3],E,E,0,[[[U]],[R[2]]]],[11,R[4],E,E,0,[[],[R[2]]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[R[8]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[247],E,E,1,[[["self"]],[T]]],[11,R[246],E,E,1,[[["self"],[T]]]],[11,R[3],E,E,1,[[[U]],[R[2]]]],[11,R[4],E,E,1,[[],[R[2]]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[R[8]]]],[11,"from",R[1024],E,43,[[[T]],[T]]],[11,"into",E,E,43,[[],[U]]],[11,R[3],E,E,43,[[[U]],[R[2]]]],[11,R[4],E,E,43,[[],[R[2]]]],[11,R[5],E,E,43,[[["self"]],[T]]],[11,R[6],E,E,43,[[["self"]],[T]]],[11,R[7],E,E,43,[[["self"]],[R[8]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[247],E,E,2,[[["self"]],[T]]],[11,R[246],E,E,2,[[["self"],[T]]]],[11,R[3],E,E,2,[[[U]],[R[2]]]],[11,R[4],E,E,2,[[],[R[2]]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[R[8]]]],[11,R[258],E,E,2,[[],["a"]]],[11,R[259],E,E,2,[[]]],[11,R[260],E,E,2,[[],["a"]]],[11,R[261],E,E,2,[[]]],[11,"types",E,E,2,[[]]],[11,"call",E,E,2,[[[R[89],["func"]],["func"],["wasm"]],[[R[2],[R[168]]],[R[168]]]]],[11,"report",E,E,2,[[],[[R[2],[R[262]]],[R[262]]]]],[11,R[248],E,E,2,[[["self"],["k"]],["bool"]]],[11,"from",R[625],E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[247],E,E,3,[[["self"]],[T]]],[11,R[246],E,E,3,[[["self"],[T]]]],[11,R[3],E,E,3,[[[U]],[R[2]]]],[11,R[4],E,E,3,[[],[R[2]]]],[11,R[5],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"]],[R[8]]]],[11,R[248],E,E,3,[[["self"],["k"]],["bool"]]],[11,R[1025],E,E,3,[[["self"],[R[1026]]],[["error"],["ok"],[R[2],["ok","error"]]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[3],E,E,4,[[[U]],[R[2]]]],[11,R[4],E,E,4,[[],[R[2]]]],[11,R[5],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[7],E,E,4,[[["self"]],[R[8]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[3],E,E,5,[[[U]],[R[2]]]],[11,R[4],E,E,5,[[],[R[2]]]],[11,R[5],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[7],E,E,5,[[["self"]],[R[8]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[247],E,E,6,[[["self"]],[T]]],[11,R[246],E,E,6,[[["self"],[T]]]],[11,R[3],E,E,6,[[[U]],[R[2]]]],[11,R[4],E,E,6,[[],[R[2]]]],[11,R[5],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[7],E,E,6,[[["self"]],[R[8]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[255],E,E,7,[[],["i"]]],[11,R[3],E,E,7,[[[U]],[R[2]]]],[11,R[4],E,E,7,[[],[R[2]]]],[11,R[5],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[7],E,E,7,[[["self"]],[R[8]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[3],E,E,8,[[[U]],[R[2]]]],[11,R[4],E,E,8,[[],[R[2]]]],[11,R[5],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[7],E,E,8,[[["self"]],[R[8]]]],[11,R[1025],E,E,8,[[["self"],[R[1026]]],[["error"],["ok"],[R[2],["ok","error"]]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,"into",E,E,44,[[],[U]]],[11,R[3],E,E,44,[[[U]],[R[2]]]],[11,R[4],E,E,44,[[],[R[2]]]],[11,R[5],E,E,44,[[["self"]],[T]]],[11,R[6],E,E,44,[[["self"]],[T]]],[11,R[7],E,E,44,[[["self"]],[R[8]]]],[11,R[1025],E,E,44,[[["self"],[R[1026]]],[["error"],["ok"],[R[2],["ok","error"]]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,"into",E,E,45,[[],[U]]],[11,R[3],E,E,45,[[[U]],[R[2]]]],[11,R[4],E,E,45,[[],[R[2]]]],[11,R[5],E,E,45,[[["self"]],[T]]],[11,R[6],E,E,45,[[["self"]],[T]]],[11,R[7],E,E,45,[[["self"]],[R[8]]]],[11,R[1025],E,E,45,[[["self"],[R[1026]]],[["error"],["ok"],[R[2],["ok","error"]]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,"into",E,E,46,[[],[U]]],[11,R[3],E,E,46,[[[U]],[R[2]]]],[11,R[4],E,E,46,[[],[R[2]]]],[11,R[5],E,E,46,[[["self"]],[T]]],[11,R[6],E,E,46,[[["self"]],[T]]],[11,R[7],E,E,46,[[["self"]],[R[8]]]],[11,R[1025],E,E,46,[[["self"],[R[1026]]],[["error"],["ok"],[R[2],["ok","error"]]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[3],E,E,9,[[[U]],[R[2]]]],[11,R[4],E,E,9,[[],[R[2]]]],[11,R[5],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[T]]],[11,R[7],E,E,9,[[["self"]],[R[8]]]],[11,R[1025],E,E,9,[[["self"],[R[1026]]],[["error"],["ok"],[R[2],["ok","error"]]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[3],E,E,10,[[[U]],[R[2]]]],[11,R[4],E,E,10,[[],[R[2]]]],[11,R[5],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[T]]],[11,R[7],E,E,10,[[["self"]],[R[8]]]],[11,R[1025],E,E,10,[[["self"],[R[1026]]],[["error"],["ok"],[R[2],["ok","error"]]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[3],E,E,11,[[[U]],[R[2]]]],[11,R[4],E,E,11,[[],[R[2]]]],[11,R[5],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[T]]],[11,R[7],E,E,11,[[["self"]],[R[8]]]],[11,R[1025],E,E,11,[[["self"],[R[1026]]],[["error"],["ok"],[R[2],["ok","error"]]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[3],E,E,12,[[[U]],[R[2]]]],[11,R[4],E,E,12,[[],[R[2]]]],[11,R[5],E,E,12,[[["self"]],[T]]],[11,R[6],E,E,12,[[["self"]],[T]]],[11,R[7],E,E,12,[[["self"]],[R[8]]]],[11,R[1025],E,E,12,[[["self"],[R[1026]]],[["error"],["ok"],[R[2],["ok","error"]]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[3],E,E,13,[[[U]],[R[2]]]],[11,R[4],E,E,13,[[],[R[2]]]],[11,R[5],E,E,13,[[["self"]],[T]]],[11,R[6],E,E,13,[[["self"]],[T]]],[11,R[7],E,E,13,[[["self"]],[R[8]]]],[11,R[248],E,E,13,[[["self"],["k"]],["bool"]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[247],E,E,14,[[["self"]],[T]]],[11,R[246],E,E,14,[[["self"],[T]]]],[11,R[3],E,E,14,[[[U]],[R[2]]]],[11,R[4],E,E,14,[[],[R[2]]]],[11,R[5],E,E,14,[[["self"]],[T]]],[11,R[6],E,E,14,[[["self"]],[T]]],[11,R[7],E,E,14,[[["self"]],[R[8]]]],[11,R[248],E,E,14,[[["self"],["k"]],["bool"]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[247],E,E,15,[[["self"]],[T]]],[11,R[246],E,E,15,[[["self"],[T]]]],[11,R[3],E,E,15,[[[U]],[R[2]]]],[11,R[4],E,E,15,[[],[R[2]]]],[11,R[5],E,E,15,[[["self"]],[T]]],[11,R[6],E,E,15,[[["self"]],[T]]],[11,R[7],E,E,15,[[["self"]],[R[8]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[3],E,E,16,[[[U]],[R[2]]]],[11,R[4],E,E,16,[[],[R[2]]]],[11,R[5],E,E,16,[[["self"]],[T]]],[11,R[6],E,E,16,[[["self"]],[T]]],[11,R[7],E,E,16,[[["self"]],[R[8]]]],[11,R[1025],E,E,16,[[["self"],[R[1026]]],[["error"],["ok"],[R[2],["ok","error"]]]]],[11,"from",R[1027],E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[3],E,E,17,[[[U]],[R[2]]]],[11,R[4],E,E,17,[[],[R[2]]]],[11,R[5],E,E,17,[[["self"]],[T]]],[11,R[6],E,E,17,[[["self"]],[T]]],[11,R[7],E,E,17,[[["self"]],[R[8]]]],[11,"from",R[762],E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[247],E,E,19,[[["self"]],[T]]],[11,R[246],E,E,19,[[["self"],[T]]]],[11,R[3],E,E,19,[[[U]],[R[2]]]],[11,R[4],E,E,19,[[],[R[2]]]],[11,R[5],E,E,19,[[["self"]],[T]]],[11,R[6],E,E,19,[[["self"]],[T]]],[11,R[7],E,E,19,[[["self"]],[R[8]]]],[11,R[248],E,E,19,[[["self"],["k"]],["bool"]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[247],E,E,20,[[["self"]],[T]]],[11,R[246],E,E,20,[[["self"],[T]]]],[11,R[3],E,E,20,[[[U]],[R[2]]]],[11,R[4],E,E,20,[[],[R[2]]]],[11,R[5],E,E,20,[[["self"]],[T]]],[11,R[6],E,E,20,[[["self"]],[T]]],[11,R[7],E,E,20,[[["self"]],[R[8]]]],[11,R[248],E,E,20,[[["self"],["k"]],["bool"]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[247],E,E,21,[[["self"]],[T]]],[11,R[246],E,E,21,[[["self"],[T]]]],[11,R[3],E,E,21,[[[U]],[R[2]]]],[11,R[4],E,E,21,[[],[R[2]]]],[11,R[5],E,E,21,[[["self"]],[T]]],[11,R[6],E,E,21,[[["self"]],[T]]],[11,R[7],E,E,21,[[["self"]],[R[8]]]],[11,R[248],E,E,21,[[["self"],["k"]],["bool"]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[247],E,E,22,[[["self"]],[T]]],[11,R[246],E,E,22,[[["self"],[T]]]],[11,R[3],E,E,22,[[[U]],[R[2]]]],[11,R[4],E,E,22,[[],[R[2]]]],[11,R[5],E,E,22,[[["self"]],[T]]],[11,R[6],E,E,22,[[["self"]],[T]]],[11,R[7],E,E,22,[[["self"]],[R[8]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[247],E,E,23,[[["self"]],[T]]],[11,R[246],E,E,23,[[["self"],[T]]]],[11,R[3],E,E,23,[[[U]],[R[2]]]],[11,R[4],E,E,23,[[],[R[2]]]],[11,R[5],E,E,23,[[["self"]],[T]]],[11,R[6],E,E,23,[[["self"]],[T]]],[11,R[7],E,E,23,[[["self"]],[R[8]]]],[11,R[248],E,E,23,[[["self"],["k"]],["bool"]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[247],E,E,24,[[["self"]],[T]]],[11,R[246],E,E,24,[[["self"],[T]]]],[11,R[3],E,E,24,[[[U]],[R[2]]]],[11,R[4],E,E,24,[[],[R[2]]]],[11,R[5],E,E,24,[[["self"]],[T]]],[11,R[6],E,E,24,[[["self"]],[T]]],[11,R[7],E,E,24,[[["self"]],[R[8]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[247],E,E,25,[[["self"]],[T]]],[11,R[246],E,E,25,[[["self"],[T]]]],[11,R[3],E,E,25,[[[U]],[R[2]]]],[11,R[4],E,E,25,[[],[R[2]]]],[11,R[5],E,E,25,[[["self"]],[T]]],[11,R[6],E,E,25,[[["self"]],[T]]],[11,R[7],E,E,25,[[["self"]],[R[8]]]],[11,R[248],E,E,25,[[["self"],["k"]],["bool"]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[247],E,E,26,[[["self"]],[T]]],[11,R[246],E,E,26,[[["self"],[T]]]],[11,R[3],E,E,26,[[[U]],[R[2]]]],[11,R[4],E,E,26,[[],[R[2]]]],[11,R[5],E,E,26,[[["self"]],[T]]],[11,R[6],E,E,26,[[["self"]],[T]]],[11,R[7],E,E,26,[[["self"]],[R[8]]]],[11,R[248],E,E,26,[[["self"],["k"]],["bool"]]],[11,R[1025],E,E,26,[[["self"],[R[1026]]],[["error"],["ok"],[R[2],["ok","error"]]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[247],E,E,27,[[["self"]],[T]]],[11,R[246],E,E,27,[[["self"],[T]]]],[11,R[3],E,E,27,[[[U]],[R[2]]]],[11,R[4],E,E,27,[[],[R[2]]]],[11,R[5],E,E,27,[[["self"]],[T]]],[11,R[6],E,E,27,[[["self"]],[T]]],[11,R[7],E,E,27,[[["self"]],[R[8]]]],[11,R[248],E,E,27,[[["self"],["k"]],["bool"]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[247],E,E,28,[[["self"]],[T]]],[11,R[246],E,E,28,[[["self"],[T]]]],[11,R[3],E,E,28,[[[U]],[R[2]]]],[11,R[4],E,E,28,[[],[R[2]]]],[11,R[5],E,E,28,[[["self"]],[T]]],[11,R[6],E,E,28,[[["self"]],[T]]],[11,R[7],E,E,28,[[["self"]],[R[8]]]],[11,R[248],E,E,28,[[["self"],["k"]],["bool"]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[247],E,E,29,[[["self"]],[T]]],[11,R[246],E,E,29,[[["self"],[T]]]],[11,R[3],E,E,29,[[[U]],[R[2]]]],[11,R[4],E,E,29,[[],[R[2]]]],[11,R[5],E,E,29,[[["self"]],[T]]],[11,R[6],E,E,29,[[["self"]],[T]]],[11,R[7],E,E,29,[[["self"]],[R[8]]]],[11,R[248],E,E,29,[[["self"],["k"]],["bool"]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[247],E,E,30,[[["self"]],[T]]],[11,R[246],E,E,30,[[["self"],[T]]]],[11,R[3],E,E,30,[[[U]],[R[2]]]],[11,R[4],E,E,30,[[],[R[2]]]],[11,R[5],E,E,30,[[["self"]],[T]]],[11,R[6],E,E,30,[[["self"]],[T]]],[11,R[7],E,E,30,[[["self"]],[R[8]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[247],E,E,31,[[["self"]],[T]]],[11,R[246],E,E,31,[[["self"],[T]]]],[11,R[3],E,E,31,[[[U]],[R[2]]]],[11,R[4],E,E,31,[[],[R[2]]]],[11,R[5],E,E,31,[[["self"]],[T]]],[11,R[6],E,E,31,[[["self"]],[T]]],[11,R[7],E,E,31,[[["self"]],[R[8]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[247],E,E,32,[[["self"]],[T]]],[11,R[246],E,E,32,[[["self"],[T]]]],[11,R[3],E,E,32,[[[U]],[R[2]]]],[11,R[4],E,E,32,[[],[R[2]]]],[11,R[5],E,E,32,[[["self"]],[T]]],[11,R[6],E,E,32,[[["self"]],[T]]],[11,R[7],E,E,32,[[["self"]],[R[8]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[247],E,E,33,[[["self"]],[T]]],[11,R[246],E,E,33,[[["self"],[T]]]],[11,R[3],E,E,33,[[[U]],[R[2]]]],[11,R[4],E,E,33,[[],[R[2]]]],[11,R[5],E,E,33,[[["self"]],[T]]],[11,R[6],E,E,33,[[["self"]],[T]]],[11,R[7],E,E,33,[[["self"]],[R[8]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[247],E,E,34,[[["self"]],[T]]],[11,R[246],E,E,34,[[["self"],[T]]]],[11,R[3],E,E,34,[[[U]],[R[2]]]],[11,R[4],E,E,34,[[],[R[2]]]],[11,R[5],E,E,34,[[["self"]],[T]]],[11,R[6],E,E,34,[[["self"]],[T]]],[11,R[7],E,E,34,[[["self"]],[R[8]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[247],E,E,35,[[["self"]],[T]]],[11,R[246],E,E,35,[[["self"],[T]]]],[11,R[3],E,E,35,[[[U]],[R[2]]]],[11,R[4],E,E,35,[[],[R[2]]]],[11,R[5],E,E,35,[[["self"]],[T]]],[11,R[6],E,E,35,[[["self"]],[T]]],[11,R[7],E,E,35,[[["self"]],[R[8]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[247],E,E,36,[[["self"]],[T]]],[11,R[246],E,E,36,[[["self"],[T]]]],[11,R[3],E,E,36,[[[U]],[R[2]]]],[11,R[4],E,E,36,[[],[R[2]]]],[11,R[5],E,E,36,[[["self"]],[T]]],[11,R[6],E,E,36,[[["self"]],[T]]],[11,R[7],E,E,36,[[["self"]],[R[8]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[247],E,E,37,[[["self"]],[T]]],[11,R[246],E,E,37,[[["self"],[T]]]],[11,R[3],E,E,37,[[[U]],[R[2]]]],[11,R[4],E,E,37,[[],[R[2]]]],[11,R[5],E,E,37,[[["self"]],[T]]],[11,R[6],E,E,37,[[["self"]],[T]]],[11,R[7],E,E,37,[[["self"]],[R[8]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,R[3],E,E,38,[[[U]],[R[2]]]],[11,R[4],E,E,38,[[],[R[2]]]],[11,R[5],E,E,38,[[["self"]],[T]]],[11,R[6],E,E,38,[[["self"]],[T]]],[11,R[7],E,E,38,[[["self"]],[R[8]]]],[11,"from",R[1028],E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[247],E,E,39,[[["self"]],[T]]],[11,R[246],E,E,39,[[["self"],[T]]]],[11,R[3],E,E,39,[[[U]],[R[2]]]],[11,R[4],E,E,39,[[],[R[2]]]],[11,R[5],E,E,39,[[["self"]],[T]]],[11,R[6],E,E,39,[[["self"]],[T]]],[11,R[7],E,E,39,[[["self"]],[R[8]]]],[11,R[248],E,E,39,[[["self"],["k"]],["bool"]]],[11,"from",E,E,40,[[[T]],[T]]],[11,"into",E,E,40,[[],[U]]],[11,R[247],E,E,40,[[["self"]],[T]]],[11,R[246],E,E,40,[[["self"],[T]]]],[11,R[3],E,E,40,[[[U]],[R[2]]]],[11,R[4],E,E,40,[[],[R[2]]]],[11,R[5],E,E,40,[[["self"]],[T]]],[11,R[6],E,E,40,[[["self"]],[T]]],[11,R[7],E,E,40,[[["self"]],[R[8]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,"into",E,E,41,[[],[U]]],[11,R[247],E,E,41,[[["self"]],[T]]],[11,R[246],E,E,41,[[["self"],[T]]]],[11,R[3],E,E,41,[[[U]],[R[2]]]],[11,R[4],E,E,41,[[],[R[2]]]],[11,R[5],E,E,41,[[["self"]],[T]]],[11,R[6],E,E,41,[[["self"]],[T]]],[11,R[7],E,E,41,[[["self"]],[R[8]]]],[11,R[248],E,E,41,[[["self"],["k"]],["bool"]]],[11,R[1025],E,E,41,[[["self"],[R[1026]]],[["error"],["ok"],[R[2],["ok","error"]]]]],[11,"from",E,E,42,[[[T]],[T]]],[11,"into",E,E,42,[[],[U]]],[11,R[247],E,E,42,[[["self"]],[T]]],[11,R[246],E,E,42,[[["self"],[T]]]],[11,R[3],E,E,42,[[[U]],[R[2]]]],[11,R[4],E,E,42,[[],[R[2]]]],[11,R[5],E,E,42,[[["self"]],[T]]],[11,R[6],E,E,42,[[["self"]],[T]]],[11,R[7],E,E,42,[[["self"]],[R[8]]]],[11,"hash",R[625],E,3,[[["self"],["__h"]]]],[11,"fmt",E,E,3,[[["self"],[R[304]]],[["error"],[R[2],["error"]]]]],[11,R[303],E,E,3,[[["self"]]]],[11,R[282],E,E,3,[[["self"],["index"]],[[R[280]],[R[26],[R[280]]]]]],[11,"lt",E,E,3,[[["self"],["index"]],["bool"]]],[11,"le",E,E,3,[[["self"],["index"]],["bool"]]],[11,"gt",E,E,3,[[["self"],["index"]],["bool"]]],[11,"ge",E,E,3,[[["self"],["index"]],["bool"]]],[11,R[306],E,E,3,[[["self"],["s"]],[R[2]]]],[11,"clone",E,E,3,[[["self"]],["index"]]],[11,"cmp",E,E,3,[[["self"],["index"]],[R[280]]]],[11,"eq",E,E,3,[[["self"],["index"]],["bool"]]],[11,"ne",E,E,3,[[["self"],["index"]],["bool"]]],[11,R[307],E,E,3,[[["d"]],[[R[2],["index"]],["index"]]]],[11,R[717],E,E,8,[[["self"]],["u64"]]],[11,R[723],E,E,8,[[["self"],[R[712]]]]],[11,R[719],E,E,8,[[["self"]],["u64"]]],[11,R[726],E,E,8,[[["self"],[R[712]]]]],[11,R[721],E,E,8,[[["self"]],["u64"]]],[11,R[728],E,E,8,[[["self"],[R[712]]]]],[11,"size",E,E,8,[[["self"]],["u64"]]],[11,"set_len",E,E,8,[[["self"],[R[732]]],[[R[2],[R[711]]],[R[711]]]]],[11,"unlink",E,E,8,[[["self"]],[[R[2],[R[711]]],[R[711]]]]],[11,R[734],E,E,8,[[["self"]],[[R[2],[R[711]]],[R[711]]]]],[11,R[736],E,E,8,[[["self"],["path"]],[[R[2],[R[711]]],[R[711]]]]],[11,R[738],E,E,8,[[["self"]],[[R[2],["usize",R[711]]],["usize"],[R[711]]]]],[11,R[740],E,E,8,[[["self"]],[["i32"],[R[26],["i32"]]]]],[11,R[742],E,E,8,[[["self"]],["str"]]],[11,R[743],E,E,8,[[["self"]]]],[11,R[717],E,E,44,[[["self"]],["u64"]]],[11,R[719],E,E,44,[[["self"]],["u64"]]],[11,R[721],E,E,44,[[["self"]],["u64"]]],[11,"size",E,E,44,[[["self"]],["u64"]]],[11,"set_len",E,E,44,[[["self"],[R[732]]],[[R[2],[R[711]]],[R[711]]]]],[11,"unlink",E,E,44,[[["self"]],[[R[2],[R[711]]],[R[711]]]]],[11,R[738],E,E,44,[[["self"]],[[R[2],["usize",R[711]]],["usize"],[R[711]]]]],[11,R[740],E,E,44,[[["self"]],[["i32"],[R[26],["i32"]]]]],[11,R[742],E,E,44,[[["self"]],["str"]]],[11,R[743],E,E,44,[[["self"]]]],[11,R[717],E,E,45,[[["self"]],["u64"]]],[11,R[719],E,E,45,[[["self"]],["u64"]]],[11,R[721],E,E,45,[[["self"]],["u64"]]],[11,"size",E,E,45,[[["self"]],["u64"]]],[11,"set_len",E,E,45,[[["self"],[R[732]]],[[R[2],[R[711]]],[R[711]]]]],[11,"unlink",E,E,45,[[["self"]],[[R[2],[R[711]]],[R[711]]]]],[11,R[738],E,E,45,[[["self"]],[[R[2],["usize",R[711]]],["usize"],[R[711]]]]],[11,R[740],E,E,45,[[["self"]],[["i32"],[R[26],["i32"]]]]],[11,R[742],E,E,45,[[["self"]],["str"]]],[11,R[743],E,E,45,[[["self"]]]],[11,R[717],E,E,46,[[["self"]],["u64"]]],[11,R[719],E,E,46,[[["self"]],["u64"]]],[11,R[721],E,E,46,[[["self"]],["u64"]]],[11,"size",E,E,46,[[["self"]],["u64"]]],[11,"set_len",E,E,46,[[["self"],[R[732]]],[[R[2],[R[711]]],[R[711]]]]],[11,"unlink",E,E,46,[[["self"]],[[R[2],[R[711]]],[R[711]]]]],[11,R[738],E,E,46,[[["self"]],[[R[2],["usize",R[711]]],["usize"],[R[711]]]]],[11,R[740],E,E,46,[[["self"]],[["i32"],[R[26],["i32"]]]]],[11,R[742],E,E,46,[[["self"]],["str"]]],[11,R[743],E,E,46,[[["self"]]]],[11,"from",E,E,14,[[["error"]],["self"]]],[11,"next",E,E,7,[[["self"]],[R[26]]]],[11,R[285],E,E,4,[[],[R[751]]]],[11,R[285],E,E,5,[[],["preopendirbuilder"]]],[11,R[285],R[1027],E,17,[[],[R[649]]]],[11,R[285],R[762],E,26,[[],["self"]]],[11,"clone",R[1024],E,2,[[["self"]],["self"]]],[11,"clone",R[625],E,14,[[["self"]],[R[711]]]],[11,"clone",E,E,15,[[["self"]],[R[713]]]],[11,"clone",E,E,6,[[["self"]],[R[714]]]],[11,"clone",R[762],E,19,[[["self"]],[R[755]]]],[11,"clone",E,E,20,[[["self"]],[R[765]]]],[11,"clone",E,E,21,[[["self"]],[R[811]]]],[11,"clone",E,E,32,[[["self"]],[R[790]]]],[11,"clone",E,E,35,[[["self"]],[R[791]]]],[11,"clone",E,E,22,[[["self"]],[R[758]]]],[11,"clone",E,E,23,[[["self"]],[R[812]]]],[11,"clone",E,E,33,[[["self"]],[R[792]]]],[11,"clone",E,E,24,[[["self"]],[R[749]]]],[11,"clone",E,E,36,[[["self"]],[R[793]]]],[11,"clone",E,E,25,[[["self"]],[R[748]]]],[11,"clone",E,E,26,[[["self"]],[R[747]]]],[11,"clone",E,E,27,[[["self"]],[R[754]]]],[11,"clone",E,E,28,[[["self"]],[R[767]]]],[11,"clone",E,E,29,[[["self"]],[R[817]]]],[11,"clone",E,E,34,[[["self"]],[R[772]]]],[11,"clone",E,E,30,[[["self"]],[R[759]]]],[11,"clone",E,E,37,[[["self"]],["eventtype"]]],[11,"clone",E,E,31,[[["self"]],[R[1029]]]],[11,"clone",R[1028],E,39,[[["self"]],[R[767]]]],[11,"clone",E,E,42,[[["self"]],[R[772]]]],[11,"clone",E,E,40,[[["self"]],[R[759]]]],[11,"clone",E,E,41,[[["self"]],[R[747]]]],[11,"clone",R[622],E,1,[[["self"]],[R[617]]]],[11,"eq",R[1024],E,2,[[["self"]],["bool"]]],[11,"eq",R[625],E,13,[[["self"],[R[645]]],["bool"]]],[11,"ne",E,E,13,[[["self"],[R[645]]],["bool"]]],[11,"eq",E,E,14,[[["self"],[R[711]]],["bool"]]],[11,"ne",E,E,14,[[["self"],[R[711]]],["bool"]]],[11,"eq",R[762],E,19,[[["self"],[R[755]]],["bool"]]],[11,"ne",E,E,19,[[["self"],[R[755]]],["bool"]]],[11,"eq",E,E,20,[[["self"],[R[765]]],["bool"]]],[11,"ne",E,E,20,[[["self"],[R[765]]],["bool"]]],[11,"eq",E,E,21,[[["self"],[R[811]]],["bool"]]],[11,"ne",E,E,21,[[["self"],[R[811]]],["bool"]]],[11,"eq",E,E,23,[[["self"],[R[812]]],["bool"]]],[11,"ne",E,E,23,[[["self"],[R[812]]],["bool"]]],[11,"eq",E,E,25,[[["self"],[R[748]]],["bool"]]],[11,"ne",E,E,25,[[["self"],[R[748]]],["bool"]]],[11,"eq",E,E,26,[[["self"],[R[747]]],["bool"]]],[11,"ne",E,E,26,[[["self"],[R[747]]],["bool"]]],[11,"eq",E,E,27,[[["self"],[R[754]]],["bool"]]],[11,"ne",E,E,27,[[["self"],[R[754]]],["bool"]]],[11,"eq",E,E,28,[[["self"],[R[767]]],["bool"]]],[11,"ne",E,E,28,[[["self"],[R[767]]],["bool"]]],[11,"eq",E,E,29,[[["self"],[R[817]]],["bool"]]],[11,"ne",E,E,29,[[["self"],[R[817]]],["bool"]]],[11,"eq",R[1028],E,39,[[["self"],[R[767]]],["bool"]]],[11,"ne",E,E,39,[[["self"],[R[767]]],["bool"]]],[11,"eq",E,E,41,[[["self"],[R[747]]],["bool"]]],[11,"ne",E,E,41,[[["self"],[R[747]]],["bool"]]],[11,"eq",R[622],E,1,[[["self"],[R[617]]],["bool"]]],[11,R[303],R[625],E,13,[[["self"]]]],[11,R[303],E,E,14,[[["self"]]]],[11,R[303],R[762],E,19,[[["self"]]]],[11,R[303],E,E,20,[[["self"]]]],[11,R[303],E,E,21,[[["self"]]]],[11,R[303],E,E,23,[[["self"]]]],[11,R[303],E,E,25,[[["self"]]]],[11,R[303],E,E,26,[[["self"]]]],[11,R[303],E,E,27,[[["self"]]]],[11,R[303],E,E,28,[[["self"]]]],[11,R[303],E,E,29,[[["self"]]]],[11,R[303],R[1028],E,39,[[["self"]]]],[11,R[303],E,E,41,[[["self"]]]],[11,"fmt",R[1024],E,2,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",R[625],E,4,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,13,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,5,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",R[1027],E,17,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",R[625],E,14,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,15,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,6,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,7,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,8,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,44,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,45,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,46,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,9,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,16,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,10,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,11,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,12,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",R[762],E,19,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,20,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,21,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,32,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,35,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,22,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,23,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,33,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,24,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,25,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,26,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,27,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,28,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,29,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,37,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,31,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,30,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",R[1028],E,39,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,41,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,40,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",R[622],E,1,[[["self"],[R[304]]],[R[2]]]],[11,R[3],R[762],E,31,[[[R[759]]],[R[2]]]],[11,R[3],E,E,30,[[[R[1029]]],[R[2]]]],[11,"write",R[625],E,8,[[["self"]],[[R[2],["usize"]],["usize"]]]],[11,"flush",E,E,8,[[["self"]],[R[2]]]],[11,R[1030],E,E,8,[[["self"]],[R[2]]]],[11,R[1031],E,E,8,[[["self"],[R[1032]]],[R[2]]]],[11,"write",E,E,44,[[["self"]],[[R[2],["usize"]],["usize"]]]],[11,"flush",E,E,44,[[["self"]],[R[2]]]],[11,R[1030],E,E,44,[[["self"]],[R[2]]]],[11,R[1031],E,E,44,[[["self"],[R[1032]]],[R[2]]]],[11,"write",E,E,45,[[["self"]],[[R[2],["usize"]],["usize"]]]],[11,"flush",E,E,45,[[["self"]],[R[2]]]],[11,R[1030],E,E,45,[[["self"]],[R[2]]]],[11,R[1031],E,E,45,[[["self"],[R[1032]]],[R[2]]]],[11,"write",E,E,46,[[["self"]],[[R[2],["usize"]],["usize"]]]],[11,"flush",E,E,46,[[["self"]],[R[2]]]],[11,R[1030],E,E,46,[[["self"]],[R[2]]]],[11,R[1031],E,E,46,[[["self"],[R[1032]]],[R[2]]]],[11,"read",E,E,8,[[["self"]],[[R[2],["usize"]],["usize"]]]],[11,R[1033],E,E,8,[[["self"],["vec"]],[[R[2],["usize"]],["usize"]]]],[11,R[1034],E,E,8,[[["self"],[R[0]]],[[R[2],["usize"]],["usize"]]]],[11,R[1035],E,E,8,[[["self"]],[R[2]]]],[11,"read",E,E,44,[[["self"]],[[R[2],["usize"]],["usize"]]]],[11,R[1033],E,E,44,[[["self"],["vec"]],[[R[2],["usize"]],["usize"]]]],[11,R[1034],E,E,44,[[["self"],[R[0]]],[[R[2],["usize"]],["usize"]]]],[11,R[1035],E,E,44,[[["self"]],[R[2]]]],[11,"read",E,E,45,[[["self"]],[[R[2],["usize"]],["usize"]]]],[11,R[1033],E,E,45,[[["self"],["vec"]],[[R[2],["usize"]],["usize"]]]],[11,R[1034],E,E,45,[[["self"],[R[0]]],[[R[2],["usize"]],["usize"]]]],[11,R[1035],E,E,45,[[["self"]],[R[2]]]],[11,"read",E,E,46,[[["self"]],[[R[2],["usize"]],["usize"]]]],[11,R[1033],E,E,46,[[["self"],["vec"]],[[R[2],["usize"]],["usize"]]]],[11,R[1034],E,E,46,[[["self"],[R[0]]],[[R[2],["usize"]],["usize"]]]],[11,R[1035],E,E,46,[[["self"]],[R[2]]]],[11,"seek",E,E,8,[[["self"],["seekfrom"]],[[R[2],["u64"]],["u64"]]]],[11,"seek",E,E,44,[[["self"],["seekfrom"]],[[R[2],["u64"]],["u64"]]]],[11,"seek",E,E,45,[[["self"],["seekfrom"]],[[R[2],["u64"]],["u64"]]]],[11,"seek",E,E,46,[[["self"],["seekfrom"]],[[R[2],["u64"]],["u64"]]]],[11,R[306],R[724],E,18,[[["self"],["s"]],[R[2]]]],[11,R[306],E,E,18,[[["self"],["s"]],[R[2]]]],[11,R[306],E,E,18,[[["self"],["s"]],[R[2]]]],[11,R[306],E,E,18,[[["self"],["s"]],[R[2]]]],[11,R[306],R[625],E,8,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,44,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,45,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,46,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,9,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,16,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,10,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,11,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,12,[[["self"],["__s"]],[R[2]]]],[11,R[306],R[762],E,26,[[["self"],["__s"]],[R[2]]]],[11,R[306],R[1028],E,41,[[["self"],["__s"]],[R[2]]]],[11,R[307],R[625],E,8,[[["d"]],[[R[2],["hostfile"]],["hostfile"]]]],[11,R[307],E,E,44,[[["__d"]],[R[2]]]],[11,R[307],E,E,45,[[["__d"]],[R[2]]]],[11,R[307],E,E,46,[[["__d"]],[R[2]]]],[11,R[307],E,E,9,[[["__d"]],[R[2]]]],[11,R[307],E,E,16,[[["__d"]],[R[2]]]],[11,R[307],E,E,10,[[["__d"]],[R[2]]]],[11,R[307],E,E,11,[[["__d"]],[R[2]]]],[11,R[307],E,E,12,[[["__d"]],[R[2]]]],[11,R[307],R[762],E,26,[[["__d"]],[R[2]]]],[11,R[307],R[1028],E,41,[[["__d"]],[R[2]]]],[11,R[275],R[1024],E,2,[[]]],[11,R[276],E,E,2,[[],["self"]]],[11,R[170],R[625],"Create a new `Index` from its raw parts.",3,[[["usize"],["u64"]],["index"]]],[11,"into_raw_parts",E,"Convert this `Index` into its raw parts.",3,[[]]]],"p":[[3,"ExitCode"],[4,R[800]],[3,"WasmPtr"],[3,"Inode"],[3,R[628]],[3,R[634]],[3,R[650]],[3,R[651]],[3,"HostFile"],[3,"InodeVal"],[3,"Fd"],[3,"WasiFs"],[3,"WasiState"],[4,R[636]],[4,R[623]],[4,R[699]],[4,"Kind"],[3,R[1036]],[8,"WasiFile"],[3,R[755]],[3,R[765]],[3,R[811]],[3,R[758]],[3,R[812]],[3,R[749]],[3,R[748]],[3,R[747]],[3,R[754]],[3,R[767]],[3,R[817]],[3,R[759]],[3,R[818]],[19,R[790]],[19,R[792]],[19,R[772]],[4,R[822]],[4,R[823]],[4,R[825]],[4,R[827]],[3,R[767]],[3,R[759]],[3,R[747]],[19,R[772]],[3,"Array"],[3,"Stdout"],[3,"Stderr"],[3,"Stdin"]]};
searchIndex["wasmer_wasi_experimental_io_devices"]={"doc":E,"i":[[3,R[1107],R[1104],E,N,N],[12,"data_1",E,E,0,N],[12,"data_2",E,E,0,N],[12,"x_size",E,E,0,N],[12,"y_size",E,E,0,N],[12,"front_buffer",E,E,0,N],[12,"window",E,E,0,N],[12,"last_mouse_pos",E,E,0,N],[12,"inputs",E,E,0,N],[12,"keys_pressed",E,E,0,N],[3,R[1108],E,E,N,N],[12,"fb_type",E,E,1,N],[12,"cursor",E,E,1,N],[4,R[1109],E,E,N,N],[13,"Buffer",E,E,2,N],[13,"Resolution",E,E,2,N],[13,"Draw",E,E,2,N],[13,"Input",E,E,2,N],[5,R[305],E,E,N,[[["wasifs"]],[[R[2],[R[0]]],[R[0]]]]],[0,"util",E,E,N,N],[4,"InputEvent",R[1105],E,N,N],[13,"KeyPress",E,E,3,N],[13,"KeyRelease",E,E,3,N],[13,"MouseEvent",E,E,3,N],[13,"MouseMoved",E,E,3,N],[13,"WindowClosed",E,E,3,N],[5,"bytes_for_input_event",E,"Returns the tag as the first return value The data as the…",N,[[[R[1106]]]]],[5,"map_key_to_bytes",E,E,N,[[["key"]],["u8"]]],[17,"KEY_PRESS",E,E,N,N],[17,"MOUSE_MOVE",E,E,N,N],[17,"KEY_RELEASE",E,E,N,N],[17,"MOUSE_PRESS_LEFT",E,E,N,N],[17,"MOUSE_PRESS_RIGHT",E,E,N,N],[17,"MOUSE_PRESS_MIDDLE",E,E,N,N],[17,"WINDOW_CLOSED",E,E,N,N],[7,"__init2429206112968255880",R[1104],E,N,N],[17,"FRAMEBUFFER_STATE",E,E,N,N],[17,"MAX_X",E,E,N,N],[17,"MAX_Y",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_FrameBufferFileType",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_FrameBufferFileType",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_FrameBuffer",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_FrameBuffer",E,E,N,N],[18,"MAX_INPUTS",E,"an arbitrary large number",0,N],[11,"new",E,E,0,[[],["self"]]],[11,"create_window",E,E,0,[[["usize"]],["window"]]],[11,"resize",E,E,0,[[["self"],["u32"]],[R[26]]]],[11,"push_input_event",E,E,0,[[["self"],[R[1106]]],[R[26]]]],[11,"fill_input_buffer",E,E,0,[[["self"]],[R[26]]]],[11,"draw",E,E,0,[[["self"]]]],[11,"get_idx_info",E,E,0,[[["self"],["usize"]],[R[26]]]],[11,"get_byte",E,E,0,[[["self"],["usize"]],[[R[26],["u8"]],["u8"]]]],[11,"set_byte",E,E,0,[[["self"],["usize"],["u8"]],[R[26]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[3],E,E,0,[[[U]],[R[2]]]],[11,R[4],E,E,0,[[],[R[2]]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[R[8]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[3],E,E,1,[[[U]],[R[2]]]],[11,R[4],E,E,1,[[],[R[2]]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[R[8]]]],[11,R[1025],E,E,1,[[["self"],[R[1026]]],[["ok"],[R[2],["ok","error"]],["error"]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[3],E,E,2,[[[U]],[R[2]]]],[11,R[4],E,E,2,[[],[R[2]]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[R[8]]]],[11,R[1025],E,E,2,[[["self"],[R[1026]]],[["ok"],[R[2],["ok","error"]],["error"]]]],[11,"from",R[1105],E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[247],E,E,3,[[["self"]],[T]]],[11,R[246],E,E,3,[[["self"],[T]]]],[11,R[3],E,E,3,[[[U]],[R[2]]]],[11,R[4],E,E,3,[[],[R[2]]]],[11,R[5],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"]],[R[8]]]],[11,"clone",E,E,3,[[["self"]],[R[1106]]]],[11,"fmt",E,E,3,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",R[1104],E,2,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[304]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[304]]],[R[2]]]],[11,"write",E,E,1,[[["self"]],[[R[2],["usize"]],["usize"]]]],[11,"flush",E,E,1,[[["self"]],[R[2]]]],[11,R[1030],E,E,1,[[["self"]],[R[2]]]],[11,R[1031],E,E,1,[[["self"],[R[1032]]],[R[2]]]],[11,"read",E,E,1,[[["self"]],[[R[2],["usize"]],["usize"]]]],[11,R[1033],E,E,1,[[["self"],["vec"]],[[R[2],["usize"]],["usize"]]]],[11,R[1034],E,E,1,[[["self"],[R[0]]],[[R[2],["usize"]],["usize"]]]],[11,R[1035],E,E,1,[[["self"]],[R[2]]]],[11,"seek",E,E,1,[[["self"],["seekfrom"]],[[R[2],["u64"]],["u64"]]]],[11,R[306],E,E,2,[[["self"],["__s"]],[R[2]]]],[11,R[306],E,E,1,[[["self"],["__s"]],[R[2]]]],[11,R[307],E,E,2,[[["__d"]],[R[2]]]],[11,R[307],E,E,1,[[["__d"]],[R[2]]]],[11,R[717],E,E,1,[[["self"]],["u64"]]],[11,R[719],E,E,1,[[["self"]],["u64"]]],[11,R[721],E,E,1,[[["self"]],["u64"]]],[11,"size",E,E,1,[[["self"]],["u64"]]],[11,"set_len",E,E,1,[[["self"],[R[732]]],[[R[711]],[R[2],[R[711]]]]]],[11,"unlink",E,E,1,[[["self"]],[[R[711]],[R[2],[R[711]]]]]],[11,R[738],E,E,1,[[["self"]],[[R[711]],[R[2],["usize",R[711]]],["usize"]]]],[11,R[742],E,E,1,[[["self"]],["str"]]],[11,R[743],E,E,1,[[["self"]]]]],"p":[[3,R[1107]],[3,R[1108]],[4,R[1109]],[4,"InputEvent"]]};
searchIndex["wasmer_wasi_tests"]={"doc":E,"i":[],"p":[]};
searchIndex["wasmer_win_exception_handler"]={"doc":E,"i":[],"p":[]};
initSearch(searchIndex);addSearchOptions(searchIndex);